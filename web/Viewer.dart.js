// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.StackTrace = {"": ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.CastErrorImplementation = {"": ["actualType", "expectedType"],
 "super": "Object",
 toString$0: function() {
  return 'CastError: Casting value of type ' + $.S(this.actualType) + ' to' + ' incompatible type ' + $.S(this.expectedType);
}
};

$$.MetaInfo = {"": ["_tag>", "_tags", "_set>"],
 "super": "Object"
};

$$.JSSyntaxRegExp = {"": ["_liblib0$_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib0$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern>", "str", "start", "end", "_groups"],
 "super": "Object",
 operator$index$1: function(index) {
  return $.index(this._groups, index);
},
 groups$1: function(groups) {
  var out, t1, t2, t3, t4;
  out = [];
  t1 = $.iterator(groups);
  t2 = this._groups;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.groups$1$bailout(1, t2, out, t1);
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t4 = $.getInterceptor(out);
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t2.length)
      throw $.ioore(t3);
    t4.add$1(out, t2[t3]);
  }
  return out;
},
 groups$1$bailout: function(state0, t2, out, t1) {
  var t3;
  for (; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    $.getInterceptor(out).add$1(out, $.index(t2, t3));
  }
  return out;
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_liblib0$_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var next = this._liblib0$_next;
  this._liblib0$_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib0$_next == null))
    return true;
  this._liblib0$_next = this._re.firstMatch$1(this._str);
  if (this._liblib0$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"": ["start", "str", "pattern>"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (typeof group_ !== 'number')
    return this.group$1$bailout(1, group_);
  if (!(group_ === 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
},
 group$1$bailout: function(state0, group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
},
 groups$1: function(groups_) {
  var result, t1, t2;
  result = $._ListImpl_List(null);
  for (t1 = $.iterator(groups_); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(result).add$1(result, this.group$1(t2));
  }
  return result;
}
};

$$._DateImpl = {"": ["millisecondsSinceEpoch>", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  var ms, t2;
  ms = this.millisecondsSinceEpoch;
  if (typeof ms !== 'number')
    return this.add$1$bailout0(1, duration, ms);
  t2 = duration.get$inMilliseconds();
  if (typeof t2 !== 'number')
    return this.add$1$bailout0(2, ms, t2);
  return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
},
 add$1$bailout0: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      ms = env1;
      duration = env0;
      break;
    case 2:
      t2 = env1;
      ms = env0;
      break;
  }
  switch (state0) {
    case 0:
      ms = this.millisecondsSinceEpoch;
    case 1:
      state0 = 0;
      t2 = duration.get$inMilliseconds();
    case 2:
      var ms, duration, t2;
      state0 = 0;
      return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
  }
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ArgumentError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.RangeError = {"": ["message"],
 "super": "ArgumentError",
 toString$0: function() {
  return 'RangeError: ' + $.S(this.message);
}
};

$$.NoSuchMethodError = {"": ["_receiver", "_memberName", "_arguments", "_namedArguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0)) {
      t3 = t1.sb_1;
      $.getInterceptor(t3).add$1(t3, ', ');
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor(t3);
    t5 = t1.i_2;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.NoSuchMethodError_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  actualParameters = $.toString(t1.sb_1);
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_1;
      $.getInterceptor(t3).add$1(t3, ', ');
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  formalParameters = $.toString(t1.sb_1);
  t2 = this._memberName;
  return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer('');
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0)) {
            t3 = t1.sb_1;
            $.getInterceptor(t3).add$1(t3, ', ');
          }
          t3 = t1.sb_1;
          $.getInterceptor(t3).add$1(t3, $.NoSuchMethodError_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return 'NoSuchMethodError : method not found: \'' + $.S(this._memberName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(t1.sb_1) + ']';
      else {
        actualParameters = $.toString(t1.sb_1);
        t1.sb_1 = $.StringBuffer_StringBuffer('');
        for (i = 0; $.ltB(i, $.get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_1;
            $.getInterceptor(t3).add$1(t3, ', ');
          }
          t3 = t1.sb_1;
          $.getInterceptor(t3).add$1(t3, $.index(t2, i));
        }
        formalParameters = $.toString(t1.sb_1);
        t2 = this._memberName;
        return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
      }
  }
}
};

$$.UnsupportedError = {"": ["message>"],
 "super": "Object",
 toString$0: function() {
  return 'Unsupported operation: ' + $.S(this.get$message());
}
};

$$.UnimplementedError = {"": ["message>"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? 'UnimplementedError: ' + $.S(t1) : 'UnimplementedError';
}
};

$$.StateError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'Bad state: ' + this.message;
}
};

$$.StackOverflowError = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$._ExceptionImplementation = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.FormatException = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NullPointerException = {"": ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.RuntimeError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.FutureUnhandledException = {"": ["source=", "stackTrace>"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3;
  t1 = $.toString(this.source);
  t2 = 'FutureUnhandledException: exception while executing Future\n  ' + $.S($.getInterceptor(t1).replaceAll$2(t1, '\n', '\n  ')) + '\n' + 'original stack trace:\n  ';
  t3 = $.toString(this.stackTrace);
  return t2 + $.S($.getInterceptor(t3).replaceAll$2(t3, '\n', '\n  '));
},
 is$Exception: true
};

$$._FutureImpl = {"": ["_isComplete", "_value>", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._value;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  var t1;
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true) {
    t1 = this._successListeners;
    $.getInterceptor(t1).add$1(t1, onSuccess);
  } else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 handleException$1: function(onException) {
  var t1;
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else {
    t1 = this._exceptionHandlers;
    $.getInterceptor(t1).add$1(t1, onException);
  }
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.iterator(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
},
 chain$1: function(transformation) {
  var completer = $.Completer_Completer();
  this._forwardException$2(this, completer);
  this.then$1(new $._FutureImpl_chain_anon(this, completer, transformation));
  return completer.get$future();
},
 _forwardException$2: function(future, completer) {
  future.handleException$1(new $._FutureImpl__forwardException_anon(completer, future));
}
};

$$._CompleterImpl = {"": ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 get$complete: function() { return new $.BoundClosure(this, 'complete$1'); },
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$.List = {"": [],
 "super": "Object",
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._HashMapImpl = {"": ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  t1 = $.get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  hash = $.and(t1, this._keys.length - 1);
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  hash = $.and($.get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t1, t2, i, key, value, newIndex, t3;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $._ListImpl_List(newCapacity);
  this._values = $._ListImpl_List(newCapacity);
  for (t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC4)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 oprator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC4)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.remove$1$bailout(1, index);
  if (index >= 0) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC4;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 remove$1$bailout: function(state0, index) {
  var t1, value;
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC4;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CTC4)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 get$keys: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List(this.get$length());
  t1.i_11 = 0;
  this.forEach$1(new $._HashMapImpl_keys_anon(list, t1));
  return list;
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $._ListImpl_List(this.get$length());
  t1.i_10 = 0;
  this.forEach$1(new $._HashMapImpl_values_anon(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $._ListImpl_List(8);
  this._values = $._ListImpl_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"": [],
 "super": "Object"
};

$$._KeyValuePair = {"": ["key>", "value="],
 "super": "Object"
};

$$._LinkedHashMapImpl = {"": ["_list", "_map"],
 "super": "Object",
 oprator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    t1 = this._list;
    $.getInterceptor(t1).addLast$1(t1, $._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 get$keys: function() {
  var t1, list, t2;
  t1 = {};
  list = $._ListImpl_List(this.get$length());
  t1.index_10 = 0;
  t2 = this._list;
  $.getInterceptor(t2).forEach$1(t2, new $._LinkedHashMapImpl_keys_anon(list, t1));
  return list;
},
 get$values: function() {
  var t1, list, t2;
  t1 = {};
  list = $._ListImpl_List(this.get$length());
  t1.index_1 = 0;
  t2 = this._list;
  $.getInterceptor(t2).forEach$1(t2, new $._LinkedHashMapImpl_values_anon(t1, list));
  return list;
},
 forEach$1: function(f) {
  var t1 = this._list;
  $.getInterceptor(t1).forEach$1(t1, new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor(t1).clear$0(t1);
  t1 = this._list;
  $.getInterceptor(t1).clear$0(t1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"": [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"": ["_previous<", "_next=", "_element>"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 filter$1: function(f) {
  var other, entry, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      $.getInterceptor(other).addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._HashSetImpl = {"": ["_backingMap>"],
 "super": "Object",
 clear$0: function() {
  var t1 = this._backingMap;
  $.getInterceptor(t1).clear$0(t1);
},
 add$1: function(value) {
  this._backingMap.oprator$indexSet$2(value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.getInterceptor(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 forEach$1: function(f) {
  var t1 = this._backingMap;
  $.getInterceptor(t1).forEach$1(t1, new $._HashSetImpl_forEach_anon(f));
},
 filter$1: function(f) {
  var result, t1;
  result = $.Set_Set();
  t1 = this._backingMap;
  $.getInterceptor(t1).forEach$1(t1, new $._HashSetImpl_filter_anon(result, f));
  return result;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._backingMap);
},
 get$length: function() {
  return $.get$length(this._backingMap);
},
 iterator$0: function() {
  return $._HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$();
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"": ["_entries", "_nextValidIndex"],
 "super": "Object",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = t2.length;
  if (t1 >= t3)
    return false;
  if (t1 < 0)
    throw $.ioore(t1);
  if (t2[t1] === $.CTC4)
    this._advance$0();
  return this._nextValidIndex < t3;
},
 next$0: function() {
  var t1, t2, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._entries;
  t2 = this._nextValidIndex;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  res = t1[t2];
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= length$)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC4);
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$.String = {"": [],
 "super": "Object",
 is$String: true
};

$$._StringBufferImpl = {"": ["_buffer>", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.toString(obj);
  if (str == null || $.get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, t1, str);
  t3 = $.get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t1, t3);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      str = env1;
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.toString(obj);
      if (str == null || $.get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.iterator(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 addCharCode$1: function(charCode) {
  return this.add$1($.String_String$fromCharCodes([charCode]));
},
 clear$0: function() {
  this._buffer = $._ListImpl_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  var result, t1;
  if ($.eqB($.get$length(this._buffer), 0))
    return '';
  if ($.eqB($.get$length(this._buffer), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), '');
  t1 = this._buffer;
  $.getInterceptor(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"": [],
 "super": "Object",
 removeLast$0: function(receiver) { return receiver.removeLast$0(); },
 charCodeAt$1: function(receiver, a0) { return receiver.charCodeAt$1(a0); },
 substring$1: function(receiver, a0) { return receiver.substring$1(a0); },
 clear$0: function(receiver) { return receiver.clear$0(); },
 add$1: function(receiver, a0) { return receiver.add$1(a0); },
 substring$2: function(receiver, a0, a1) { return receiver.substring$2(a0, a1); },
 trim$0: function(receiver) { return receiver.trim$0(); },
 endsWith$1: function(receiver, a0) { return receiver.endsWith$1(a0); },
 replaceAll$2: function(receiver, a0, a1) { return receiver.replaceAll$2(a0, a1); },
 forEach$1: function(receiver, a0) { return receiver.forEach$1(a0); },
 getRange$2: function(receiver, a0, a1) { return receiver.getRange$2(a0, a1); },
 addAll$1: function(receiver, a0) { return receiver.addAll$1(a0); },
 addLast$1: function(receiver, a0) { return receiver.addLast$1(a0); },
 split$1: function(receiver, a0) { return receiver.split$1(a0); },
 filter$1: function(receiver, a0) { return receiver.filter$1(a0); },
 allMatches$1: function(receiver, a0) { return receiver.allMatches$1(a0); }
};

$$.JSArray = {"": [],
 "super": "Object",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, 'add');
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, 'removeLast');
  if ($.eqB($.get$length(receiver), 0))
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(receiver).add$1(receiver, t2);
  }
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
},
 clear$0: function(receiver) {
  $.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSString = {"": [],
 "super": "Object",
 charCodeAt$1: function(receiver, index) {
  if (!(typeof index === 'number'))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if ($.geB(index, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength;
  $.checkString(other);
  otherLength = $.get$length(other);
  if ($.gtB(otherLength, $.get$length(receiver)))
    return false;
  return $.eq(other, this.substring$1(receiver, $.sub($.get$length(receiver), otherLength)));
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = $.get$length(receiver);
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($,startIndex) {
  return this.substring$2($,startIndex,null)
},
 trim$0: function(receiver) {
  return receiver.trim();
},
 is$String: true
};

$$.Viewer = {"": ["_fileSystem", "_currentWorkspace=", "_modelSelection", "_textureSelection>", "_vertexShaderEditor>", "_fragmentShaderEditor>", "_uniformSelection", "_rendererSelection", "_compileLog", "_loadingScreen", "_fileSystemDialog", "_saveDialog>", "_loadDialog>", "_aboutDialog>"],
 "super": "Object",
 _setupUI$0: function() {
  var t1, element;
  this._modelSelection = $.ModelSelection$();
  t1 = this.get$_onModelChanged();
  this._modelSelection.set$modelChangedCallback(t1);
  t1 = this.get$_onModelLoaded();
  this._modelSelection.set$modelLoadedCallback(t1);
  this._textureSelection = $.TextureSelection$();
  t1 = this.get$_onTextureChanged();
  this._textureSelection.set$textureCallback(t1);
  t1 = this.get$_onSamplerStateChanged();
  this._textureSelection.set$samplerStateCallback(t1);
  this._vertexShaderEditor = $.SourceEditor$('#vertex_shader_source', '#vertex_shader_code_lines');
  t1 = this.get$_onVertexShaderChanged();
  this._vertexShaderEditor.set$sourceCallback(t1);
  this._fragmentShaderEditor = $.SourceEditor$('#fragment_shader_source', '#fragment_shader_code_lines');
  t1 = this.get$_onFragmentShaderChanged();
  this._fragmentShaderEditor.set$sourceCallback(t1);
  this._uniformSelection = $.UniformSelection$();
  t1 = this.get$_onUniformsChanged();
  this._uniformSelection.set$changeCallback(t1);
  this._rendererSelection = $.RendererSelection$();
  t1 = this.get$_onBlendStateChanged();
  this._rendererSelection.set$blendStateCallback(t1);
  t1 = this.get$_onDepthStateChanged();
  this._rendererSelection.set$depthStateCallback(t1);
  t1 = this.get$_onRasterizerStateChanged();
  this._rendererSelection.set$rasterizerStateCallback(t1);
  element = $.TabbedElement$();
  element.addTab$2('#error_tab', '#error_list');
  element.addTab$2('#warning_tab', '#warning_list');
  this._compileLog = $.CompileLog$();
},
 _setupMenuBar$0: function() {
  var t1 = $.query('#new_file_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.Viewer__setupMenuBar_anon(this));
  t1 = $.query('#load_file_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.Viewer__setupMenuBar_anon0(this));
  t1 = $.query('#save_file_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.Viewer__setupMenuBar_anon1(this));
  t1 = $.query('#save_as_file_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.Viewer__setupMenuBar_anon2(this));
  t1 = $.query('#about_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.Viewer__setupMenuBar_anon3(this));
  t1 = $.query('#fullscreen_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.Viewer__setupMenuBar_anon4());
},
 _setupUITab$0: function() {
  var element = $.TabbedElement$();
  element.addTab$2('#model_tab', '#model_area');
  element.addTab$2('#texture_tab', '#texture_area');
  element.addTab$2('#vertex_shader_tab', '#vertex_shader_area');
  element.addTab$2('#fragment_shader_tab', '#fragment_shader_area');
  element.addTab$2('#variables_tab', '#variables_area');
  element.addTab$2('#renderer_tab', '#renderer_area');
},
 _setupDialogs$0: function() {
  this._loadingScreen = $.ModalDialog$('#loading_screen');
  this._fileSystemDialog = $.ModalDialog$('#filesystem_access_dialog');
  this._aboutDialog = $.SimpleModalDialog$('#about_dialog');
  $.Timer_Timer(10000, new $.Viewer__setupDialogs_anon(this));
},
 newWorkspace$0: function() {
  this._currentWorkspace = this._fileSystem.get$tempWorkspace();
  var t1 = this._currentWorkspace;
  $.getInterceptor(t1).clear$0(t1);
  this.deserialize$1($.JSON_parse($._newFileState));
  t1 = $._defaultVertexSource;
  this._vertexShaderEditor.set$source(t1);
  t1 = $._defaultFragmentSource;
  this._fragmentShaderEditor.set$source(t1);
  this._updateWorkspace$0();
},
 loadWorkspace$1: function(name$) {
  this._fileSystem.loadWorkspace$1(name$).then$1(new $.Viewer_loadWorkspace_anon(this));
},
 saveWorkspace$0: function() {
  if ($.eqB(this._currentWorkspace, this._fileSystem.get$tempWorkspace()))
    this._saveDialog.show$0();
  else
    this._saveWorkspaceState$0();
},
 saveWorkspaceAs$1: function(name$) {
  this._fileSystem.copyWorkspace$2(this._currentWorkspace, name$).then$1(new $.Viewer_saveWorkspaceAs_anon(this));
},
 _saveWorkspaceState$0: function() {
  var state = $.JSON_stringify(this._serialize$0());
  this._currentWorkspace.saveState$1(state).chain$1(new $.Viewer__saveWorkspaceState_anon(this)).chain$1(new $.Viewer__saveWorkspaceState_anon0(this)).then$1(new $.Viewer__saveWorkspaceState_anon1());
},
 _serialize$0: function() {
  var data, modelData, textureData, rendererData;
  data = $.Map_Map();
  modelData = this._modelSelection.toJson$0();
  $.getInterceptor(modelData).forEach$1(modelData, new $.Viewer__serialize_anon(data));
  textureData = this._textureSelection.toJson$0();
  $.getInterceptor(textureData).forEach$1(textureData, new $.Viewer__serialize_anon0(data));
  rendererData = this._rendererSelection.toJson$0();
  $.getInterceptor(rendererData).forEach$1(rendererData, new $.Viewer__serialize_anon1(data));
  return data;
},
 deserialize$1: function(data) {
  this._modelSelection.fromJson$1(data);
  this._rendererSelection.fromJson$1(data);
  this._textureSelection.fromJson$1(data);
},
 _updateWorkspace$0: function() {
  var game, modelPath, textureUnits, length$, i, textureUnit;
  game = $.Game_instance();
  modelPath = this._modelSelection.get$modelPath();
  if ($.get$isEmpty(modelPath) === true)
    ;
  game.set$mesh(modelPath);
  textureUnits = this._textureSelection.get$textureUnits();
  if (typeof textureUnits !== 'string' && (typeof textureUnits !== 'object' || textureUnits === null || textureUnits.constructor !== Array && !textureUnits.is$JavaScriptIndexingBehavior()))
    return this._updateWorkspace$0$bailout(1, game, textureUnits);
  length$ = textureUnits.length;
  for (i = 0; i < length$; ++i) {
    if (i >= textureUnits.length)
      throw $.ioore(i);
    textureUnit = textureUnits[i];
    game.setTextureAt$2(i, textureUnit.get$texture());
    game.setSamplerStateAt$2(i, textureUnit.get$samplerState());
  }
  game.setVertexSource$1(this._vertexShaderEditor.get$source());
  game.setFragmentSource$1(this._fragmentShaderEditor.get$source());
  this._onShaderProgramChanged$0();
},
 _updateWorkspace$0$bailout: function(state0, game, textureUnits) {
  var length$, i, textureUnit;
  length$ = $.get$length(textureUnits);
  for (i = 0; $.ltB(i, length$); ++i) {
    textureUnit = $.index(textureUnits, i);
    game.setTextureAt$2(i, textureUnit.get$texture());
    game.setSamplerStateAt$2(i, textureUnit.get$samplerState());
  }
  game.setVertexSource$1(this._vertexShaderEditor.get$source());
  game.setFragmentSource$1(this._fragmentShaderEditor.get$source());
  this._onShaderProgramChanged$0();
},
 _onFileSystemReady$0: function() {
  if (this._loadingScreen.get$visible() === true)
    this._loadingScreen.hide$0();
  if (this._fileSystemDialog.get$visible() === true)
    this._fileSystemDialog.hide$0();
  this._saveDialog = $.SaveDialog$('#save_as_dialog', this._fileSystem);
  var t1 = this.get$_onSaveAs();
  this._saveDialog.set$submitCallback(t1);
  this._loadDialog = $.LoadDialog$('#load_dialog', this._fileSystem);
  t1 = this.get$_onLoad();
  this._loadDialog.set$submitCallback(t1);
  this.newWorkspace$0();
},
 get$_onFileSystemReady: function() { return new $.BoundClosure0(this, '_onFileSystemReady$0'); },
 _onFileSystemTimeout$0: function() {
  if (this._loadingScreen.get$visible() === true) {
    this._loadingScreen.hide$0();
    this._fileSystemDialog.show$0();
  }
},
 _onSaveAs$1: function(name$) {
  this._saveDialog.hide$0();
  this.saveWorkspaceAs$1(name$);
},
 get$_onSaveAs: function() { return new $.BoundClosure(this, '_onSaveAs$1'); },
 _onLoad$1: function(name$) {
  this._loadDialog.hide$0();
  this.loadWorkspace$1(name$);
},
 get$_onLoad: function() { return new $.BoundClosure(this, '_onLoad$1'); },
 _onModelChanged$1: function(url) {
  $.Game_instance().set$mesh(url);
},
 get$_onModelChanged: function() { return new $.BoundClosure(this, '_onModelChanged$1'); },
 _onModelLoaded$1: function(file) {
  this._currentWorkspace.saveModel$1(file).then$1(new $.Viewer__onModelLoaded_anon());
},
 get$_onModelLoaded: function() { return new $.BoundClosure(this, '_onModelLoaded$1'); },
 _onTextureChanged$2: function(file, textureUnit) {
  this._currentWorkspace.saveTexture$2(file, textureUnit).then$1(new $.Viewer__onTextureChanged_anon(this, textureUnit));
},
 get$_onTextureChanged: function() { return new $.BoundClosure1(this, '_onTextureChanged$2'); },
 _onSamplerStateChanged$2: function(values, textureUnit) {
  $.Game_instance().setSamplerStateAt$2(textureUnit, values);
},
 get$_onSamplerStateChanged: function() { return new $.BoundClosure1(this, '_onSamplerStateChanged$2'); },
 _onVertexShaderChanged$1: function(value) {
  $.Game_instance().setVertexSource$1(value);
  this._onShaderProgramChanged$0();
},
 get$_onVertexShaderChanged: function() { return new $.BoundClosure(this, '_onVertexShaderChanged$1'); },
 _onFragmentShaderChanged$1: function(value) {
  $.Game_instance().setFragmentSource$1(value);
  this._onShaderProgramChanged$0();
},
 get$_onFragmentShaderChanged: function() { return new $.BoundClosure(this, '_onFragmentShaderChanged$1'); },
 _onShaderProgramChanged$0: function() {
  var game, t1;
  game = $.Game_instance();
  t1 = this._compileLog;
  $.getInterceptor(t1).clear$0(t1);
  this._vertexShaderEditor.clearErrors$0();
  this._fragmentShaderEditor.clearErrors$0();
  if (game.get$isProgramValid() === true) {
    t1 = $.Game_instance().get$uniforms();
    this._uniformSelection.set$uniformTypes(t1);
  } else {
    this._compileLog.addToLog$2('Vertex', game.get$vertexShaderLog());
    this._compileLog.addToLog$2('Fragment', game.get$fragmentShaderLog());
    this._vertexShaderEditor.setErrorsAt$1(this._compileLog.get$vertexShaderErrorLines());
    this._vertexShaderEditor.setWarningsAt$1(this._compileLog.get$vertexShaderWarningLines());
    this._fragmentShaderEditor.setErrorsAt$1(this._compileLog.get$fragmentShaderErrorLines());
    this._fragmentShaderEditor.setWarningsAt$1(this._compileLog.get$fragmentShaderWarningLines());
  }
},
 _onUniformsChanged$1: function(values) {
  $.print('uniforms changed');
  $.Game_instance().set$uniformValues(values);
},
 get$_onUniformsChanged: function() { return new $.BoundClosure(this, '_onUniformsChanged$1'); },
 _onRasterizerStateChanged$1: function(properties) {
  $.Game_instance().setRasterizerStateProperties$1(properties);
},
 get$_onRasterizerStateChanged: function() { return new $.BoundClosure(this, '_onRasterizerStateChanged$1'); },
 _onDepthStateChanged$1: function(properties) {
  $.Game_instance().setDepthStateProperties$1(properties);
},
 get$_onDepthStateChanged: function() { return new $.BoundClosure(this, '_onDepthStateChanged$1'); },
 _onBlendStateChanged$1: function(properties) {
  $.Game_instance().setBlendStateProperties$1(properties);
},
 get$_onBlendStateChanged: function() { return new $.BoundClosure(this, '_onBlendStateChanged$1'); },
 Viewer$0: function() {
  this._setupDialogs$0();
  this._setupMenuBar$0();
  this._setupUI$0();
  this._setupUITab$0();
  this._fileSystem = $.ApplicationFileSystem$(this.get$_onFileSystemReady());
}
};

$$.FrameCounter = {"": ["_frames", "_endTime", "_historySize", "_historicFps", "_canvas", "_context>", "_canvasWidth", "_canvasHeight", "_padding", "_textHeight", "_fpsBarWidth", "_fpsBarHeight", "_font", "_fontColor", "_goodFpsColor", "_badFpsColor"],
 "super": "Object",
 get$fps: function() {
  var t1 = this._historicFps;
  return !$.eqB($.get$length(t1), 0) ? $.get$last(t1) : 0;
},
 get$width: function() {
  return this._canvasWidth;
},
 set$width: function(value) {
  this._canvasWidth = value;
  this._resetLayout$0();
},
 get$height: function() {
  return this._canvasHeight;
},
 set$height: function(value) {
  this._canvasHeight = value;
  this._resetLayout$0();
},
 set$font: function(value) {
  this._font = value;
},
 update$1: function(time) {
  var t1, t2;
  this._frames = $.add(this._frames, 1);
  if ($.geB(time, this._endTime)) {
    t1 = $.mul(this._frames, 1000);
    t2 = $.sub(time, this._endTime);
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    this._setFps$1($.div(t1, 1000 + t2));
    this._frames = 0;
    this._endTime = $.add(time, 1000);
  }
},
 draw$0: function() {
  var fpsText, t1, fpsOffset, t2, barHeightOffset, t3, t4, t5, height;
  this._context.clearRect$4(0, 0, this._canvasWidth, this._canvasHeight);
  fpsText = 'FPS: ' + $.S($.toStringAsFixed(this.get$fps(), 2));
  t1 = this._font;
  this._context.set$font(t1);
  t1 = this._fontColor;
  this._context.set$fillStyle(t1);
  t1 = this._context;
  fpsOffset = this._padding;
  t2 = this._textHeight;
  t1.fillText$3(fpsText, fpsOffset, fpsOffset + t2);
  barHeightOffset = t2 + 2 * fpsOffset;
  for (t1 = $.iterator(this._historicFps), t2 = this._goodFpsColor, t3 = this._badFpsColor; t1.get$hasNext() === true;) {
    t4 = t1.next$0();
    t5 = $.geB(t4, 30) ? t2 : t3;
    this._context.set$fillStyle(t5);
    t5 = $.geB(t4, 60);
    height = this._fpsBarHeight;
    height = t5 ? height : $.mul(height, $.div(t4, 60));
    t4 = this._context;
    t5 = $.sub(this._fpsBarHeight, height);
    if (typeof t5 !== 'number')
      throw $.iae(t5);
    t4.fillRect$4(fpsOffset, barHeightOffset + t5, this._fpsBarWidth, height);
    t4 = this._fpsBarWidth;
    if (typeof t4 !== 'number')
      throw $.iae(t4);
    fpsOffset += t4;
  }
},
 _resetLayout$0: function() {
  var t1, t2;
  t1 = this._canvasWidth;
  this._canvas.set$width(t1);
  t1 = this._canvasHeight;
  this._canvas.set$height(t1);
  t1 = $.S(this._canvasWidth) + 'px';
  this._canvas.get$style().set$width(t1);
  t1 = $.S(this._canvasHeight) + 'px';
  this._canvas.get$style().set$height(t1);
  t1 = this._canvasWidth;
  t2 = this._padding;
  this._fpsBarWidth = $.div($.sub(t1, 2 * t2), this._historySize);
  this._fpsBarHeight = $.sub($.sub(this._canvasHeight, this._textHeight), 3 * t2);
  this.draw$0();
},
 _setFps$1: function(value) {
  var t1 = this._historicFps;
  if ($.eqB($.get$length(t1), this._historySize))
    t1.removeFirst$0();
  $.getInterceptor(t1).addLast$1(t1, value);
  this.draw$0();
},
 FrameCounter$4: function(id, width, height, historySize) {
  this._canvas = $.callTypeCast($.document().query$1(id), 'is$CanvasElement');
  this._context = this._canvas.get$context2d();
  this._resetLayout$0();
}
};

$$.Game = {"": ["_canvas", "_originalCanvasWidth", "_originalCanvasHeight", "_graphicsDevice>", "_context>", "_resourceManager>", "_viewport", "_animateClearColor", "_clearColor", "_color", "_direction", "_randomGenerator", "_lastFrameTime", "_angle", "_camera", "_cameraController", "_modelMatrix", "_modelMatrixArray", "_meshVertexBuffer>", "_meshInputLayout>", "_meshIndexBuffer>", "_meshIndexCount<", "_maxTextures", "_textures>", "_vertexShader", "_fragmentShader", "_shaderProgram>", "_userShaderProgram", "_fallbackShaderProgram", "_shaderUniforms", "_shaderUniformValues", "_modelViewMatrixArray", "_modelViewProjectionMatrixArray", "_projectionMatrixArray", "_normalMatrixArray", "_blendState", "_depthState", "_rasterizerState", "_samplerStates"],
 "super": "Object",
 _bindControls$0: function() {
  var t1 = this._canvas.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, this.get$_onCanvasClicked());
  t1 = $.document().get$on().get$pointerLockChange();
  $.getInterceptor(t1).add$1(t1, this.get$_onPointerLockChange());
  t1 = $.document().get$on().get$keyDown();
  $.getInterceptor(t1).add$1(t1, this.get$_onKeyDown());
  t1 = $.document().get$on().get$keyUp();
  $.getInterceptor(t1).add$1(t1, this.get$_onKeyUp());
  t1 = $.document().get$on().get$mouseMove();
  $.getInterceptor(t1).add$1(t1, this.get$_onMouseMove());
},
 _createTransforms$0: function() {
  var t1 = $.vec3$raw(0, 0, -2.5);
  this._camera.set$position(t1);
  t1 = $.vec3$raw(0, 0, 0);
  this._camera.set$focusPosition(t1);
  this._modelMatrix = $.mat4$identity();
  this._modelMatrixArray = $.Float32Array_Float32Array(16);
  this._modelViewMatrixArray = $.Float32Array_Float32Array(16);
  this._modelViewProjectionMatrixArray = $.Float32Array_Float32Array(16);
  this._projectionMatrixArray = $.Float32Array_Float32Array(16);
  this._normalMatrixArray = $.Float32Array_Float32Array(16);
},
 _resetView$0: function() {
  var width, height, viewportProperties, t1;
  width = this._canvas.get$width();
  height = this._canvas.get$height();
  viewportProperties = $.makeLiteralMap(['x', 0, 'y', 0, 'width', width, 'height', height]);
  this._graphicsDevice.configureDeviceChild$2(this._viewport, viewportProperties);
  t1 = $.div(width, height);
  this._camera.set$aspectRatio(t1);
},
 _createShaders$0: function() {
  var fallbackVertexShader, fallbackFragmentShader, fallbackShaderValues, userShaderValues;
  this._shaderUniforms = $.Map_Map();
  this._shaderUniformValues = $.Map_Map();
  this._fallbackShaderProgram = this._graphicsDevice.createShaderProgram$2('Fallback Program', $.makeLiteralMap([]));
  fallbackVertexShader = this._graphicsDevice.createVertexShader$2('Fallback Vertex Shader', $.makeLiteralMap([]));
  this._context.compileShader$2(fallbackVertexShader, $._fallbackVertexShader);
  fallbackFragmentShader = this._graphicsDevice.createFragmentShader$2('Fallback Fragment Shader', $.makeLiteralMap([]));
  this._context.compileShader$2(fallbackFragmentShader, $._fallbackFragmentShader);
  fallbackShaderValues = $.makeLiteralMap(['VertexProgram', fallbackVertexShader, 'FragmentProgram', fallbackFragmentShader]);
  this._graphicsDevice.configureDeviceChild$2(this._fallbackShaderProgram, fallbackShaderValues);
  this._userShaderProgram = this._graphicsDevice.createShaderProgram$2('User Program', $.makeLiteralMap([]));
  this._vertexShader = this._graphicsDevice.createVertexShader$2('User Vertex Shader', $.makeLiteralMap([]));
  this._fragmentShader = this._graphicsDevice.createFragmentShader$2('User Fragment Shader', $.makeLiteralMap([]));
  userShaderValues = $.makeLiteralMap(['VertexProgram', this._vertexShader, 'FragmentProgram', this._fragmentShader]);
  this._graphicsDevice.configureDeviceChild$2(this._userShaderProgram, userShaderValues);
  this._shaderProgram = this._fallbackShaderProgram;
},
 _createState$0: function() {
  var blendStateProperties, depthStateProperties, samplerStateProperties, i, samplerState, t1, rasterizerStateProperties;
  blendStateProperties = $.makeLiteralMap(['blendEnable', true, 'blendSourceColorFunc', 770, 'blendDestColorFunc', 771, 'blendSourceAlphaFunc', 770, 'blendDestAlphaFunc', 771]);
  this._blendState = this._graphicsDevice.createBlendState$2('Blend State', blendStateProperties);
  depthStateProperties = $.makeLiteralMap(['depthTestEnabled', true, 'depthComparisonOp', 513]);
  this._depthState = this._graphicsDevice.createDepthState$2('Depth State', depthStateProperties);
  samplerStateProperties = $.makeLiteralMap([]);
  this._samplerStates = $._ListImpl_List(null);
  for (i = 0; i < 16; ++i) {
    samplerState = this._graphicsDevice.createSamplerState$2('Sampler State ' + $.S(i), samplerStateProperties);
    t1 = this._samplerStates;
    $.getInterceptor(t1).add$1(t1, samplerState);
  }
  rasterizerStateProperties = $.makeLiteralMap(['cullEnabled', true, 'cullMode', 1029, 'cullFrontFace', 2305]);
  this._rasterizerState = this._graphicsDevice.createRasterizerState$2('Rasterizer State', rasterizerStateProperties);
},
 _createBuffers$0: function() {
  var staticBufferUsage, textureUsage, i, texture, t1;
  staticBufferUsage = $.makeLiteralMap(['usage', 'static']);
  this._meshVertexBuffer = this._graphicsDevice.createVertexBuffer$2('Vertex Buffer', staticBufferUsage);
  this._meshInputLayout = this._graphicsDevice.createInputLayout$2('Input Layout', $.makeLiteralMap([]));
  this._meshIndexBuffer = this._graphicsDevice.createIndexBuffer$2('Index Buffer', staticBufferUsage);
  this._meshIndexCount = 0;
  textureUsage = $.makeLiteralMap(['textureFormat', 6407, 'pixelFormat', 5121]);
  this._textures = $._ListImpl_List(null);
  for (i = 0; i < 16; ++i) {
    texture = this._graphicsDevice.createTexture2D$2('Texture ' + $.S(i), textureUsage);
    t1 = this._textures;
    $.getInterceptor(t1).add$1(t1, texture);
  }
},
 update$1: function(time) {
  var dt, rotation, modelView, projection, i, t1, t2;
  dt = $.mul($.sub(time, this._lastFrameTime), 0.001);
  this._lastFrameTime = time;
  this._cameraController.UpdateCamera$2(dt, this._camera);
  rotation = $.mat4$rotationX(0);
  this._modelMatrix.multiply$1(rotation);
  this._modelMatrix.copyIntoArray$1(this._modelMatrixArray);
  modelView = $.mul(this._camera.get$lookAtMatrix(), this._modelMatrix);
  modelView.copyIntoArray$1(this._modelViewMatrixArray);
  projection = this._camera.get$projectionMatrix();
  projection.copyIntoArray$1(this._projectionMatrixArray);
  $.mul(projection, modelView).copyIntoArray$1(this._modelViewProjectionMatrixArray);
  this._camera.copyProjectionMatrixIntoArray$1(this._projectionMatrixArray);
  this._camera.copyNormalMatrixIntoArray$1(this._normalMatrixArray);
  if (this._animateClearColor === true)
    for (i = 0; i < 3; ++i) {
      t1 = this._color;
      t2 = $.mul($.index(this._direction, i), $.mul(this._randomGenerator.nextDouble$0(), 0.01));
      $.indexSet(t1, i, $.add($.index(t1, i), t2));
      if ($.gtB($.index(this._color, i), 1)) {
        $.indexSet(this._color, i, 1);
        $.indexSet(this._direction, i, -1);
      } else if ($.ltB($.index(this._color, i), 0)) {
        $.indexSet(this._color, i, 0);
        $.indexSet(this._direction, i, 1);
      }
    }
},
 draw$0: function() {
  var t1, t2;
  t1 = this._context;
  t2 = this._color;
  t1.clearColorBuffer$4(t2.get$x(), t2.get$y(), t2.get$z(), 1);
  this._context.clearDepthBuffer$1(1);
  this._context.reset$0();
  this._context.setViewport$1(this._viewport);
  this._context.setBlendState$1(this._blendState);
  this._context.setRasterizerState$1(this._rasterizerState);
  this._context.setDepthState$1(this._depthState);
  this._context.setShaderProgram$1(this._shaderProgram);
  this._context.setUniformNum$2('uTime', this._lastFrameTime);
  this._context.setUniformMatrix4$2('uModelMatrix', this._modelMatrixArray);
  this._context.setUniformMatrix4$2('uModelViewMatrix', this._modelViewMatrixArray);
  this._context.setUniformMatrix4$2('uModelViewProjectionMatrix', this._modelViewProjectionMatrixArray);
  this._context.setUniformMatrix4$2('uProjectionMatrix', this._projectionMatrixArray);
  this._context.setUniformMatrix4$2('uNormalMatrix', this._normalMatrixArray);
  this._setUniformValues$0();
  this._context.setTextures$2(0, this._textures);
  this._context.setSamplers$2(0, this._samplerStates);
  this._context.setInputLayout$1(this._meshInputLayout);
  this._context.setVertexBuffers$2(0, [this._meshVertexBuffer]);
  this._context.setIndexBuffer$1(this._meshIndexBuffer);
  this._context.setPrimitiveTopology$1(4);
  this._context.drawIndexed$2(this._meshIndexCount, 0);
},
 _setUniformValues$0: function() {
  var t1 = this._shaderUniformValues;
  $.getInterceptor(t1).forEach$1(t1, new $.Game__setUniformValues_anon(this));
},
 get$_isPointerLocked: function() {
  return $.eq(this._canvas, $.document().get$webkitPointerLockElement());
},
 get$fullscreen: function() {
  return $.eq(this._canvas, $.document().get$webkitFullscreenElement());
},
 set$fullscreen: function(value) {
  var t1, t2;
  if (!$.eqB(value, this.get$fullscreen())) {
    t1 = value === true;
    t2 = this._canvas;
    if (t1)
      t2.webkitRequestFullscreen$0();
    else
      t2.webkitExitFullscreen$0();
  }
},
 set$mesh: function(value) {
  var meshResource = this._resourceManager.registerResource$1(value);
  this._resourceManager.addEventCallback$3(meshResource, 1, new $.Game_mesh_anon(this));
  this._resourceManager.loadResource$1(meshResource);
},
 setTextureAt$2: function(i, value) {
  var textureResource = this._resourceManager.registerResource$1(value);
  this._resourceManager.addEventCallback$3(textureResource, 1, new $.Game_setTextureAt_anon(i, this, textureResource));
  this._resourceManager.loadResource$2(textureResource, true);
},
 setSamplerStateAt$2: function(i, values) {
  var t1, t2;
  t1 = this._graphicsDevice;
  t2 = this._samplerStates;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.setSamplerStateAt$2$bailout(1, i, values, t1, t2);
  if (i !== (i | 0))
    throw $.iae(i);
  if (i < 0 || i >= t2.length)
    throw $.ioore(i);
  t1.configureDeviceChild$2(t2[i], values);
},
 setSamplerStateAt$2$bailout: function(state0, i, values, t1, t2) {
  t1.configureDeviceChild$2($.index(t2, i), values);
},
 setRasterizerStateProperties$1: function(values) {
  this._graphicsDevice.configureDeviceChild$2(this._rasterizerState, values);
},
 setDepthStateProperties$1: function(values) {
  this._graphicsDevice.configureDeviceChild$2(this._depthState, values);
},
 setBlendStateProperties$1: function(values) {
  this._graphicsDevice.configureDeviceChild$2(this._blendState, values);
},
 get$isProgramValid: function() {
  if (this._graphicsDevice.getDeviceChild$1(this._vertexShader).get$compiled() !== true)
    return false;
  if (this._graphicsDevice.getDeviceChild$1(this._fragmentShader).get$compiled() !== true)
    return false;
  return this._graphicsDevice.getDeviceChild$1(this._userShaderProgram).get$linked();
},
 get$vertexShaderLog: function() {
  return this._graphicsDevice.getDeviceChild$1(this._vertexShader).get$log();
},
 get$fragmentShaderLog: function() {
  return this._graphicsDevice.getDeviceChild$1(this._fragmentShader).get$log();
},
 get$uniforms: function() {
  return this._shaderUniforms;
},
 set$uniformValues: function(values) {
  this._shaderUniformValues = values;
},
 setVertexSource$1: function(source) {
  this._context.compileShader$2(this._vertexShader, source);
  this._graphicsDevice.getDeviceChild$1(this._userShaderProgram).link$0();
  this._checkProgram$0();
},
 setFragmentSource$1: function(source) {
  this._context.compileShader$2(this._fragmentShader, source);
  this._graphicsDevice.getDeviceChild$1(this._userShaderProgram).link$0();
  this._checkProgram$0();
},
 _checkProgram$0: function() {
  if (this.get$isProgramValid() === true) {
    this._shaderProgram = this._userShaderProgram;
    var t1 = this._shaderUniforms;
    $.getInterceptor(t1).clear$0(t1);
    this._graphicsDevice.getDeviceChild$1(this._userShaderProgram).forEachUniforms$1(this.get$_getShaderUniforms());
  } else
    this._shaderProgram = this._fallbackShaderProgram;
},
 _getShaderUniforms$5: function(name$, index, type, size, location$) {
  $.indexSet(this._shaderUniforms, name$, type);
},
 get$_getShaderUniforms: function() { return new $.BoundClosure2(this, '_getShaderUniforms$5'); },
 _onKeyDown$1: function(event$) {
  if (this.get$_isPointerLocked() !== true)
    return;
  switch (event$.get$keyCode()) {
    case 65:
      this._cameraController.set$strafeLeft(true);
      break;
    case 68:
      this._cameraController.set$strafeRight(true);
      break;
    case 83:
      this._cameraController.set$backward(true);
      break;
    case 87:
      this._cameraController.set$forward(true);
      break;
  }
},
 get$_onKeyDown: function() { return new $.BoundClosure(this, '_onKeyDown$1'); },
 _onKeyUp$1: function(event$) {
  switch (event$.get$keyCode()) {
    case 65:
      this._cameraController.set$strafeLeft(false);
      break;
    case 68:
      this._cameraController.set$strafeRight(false);
      break;
    case 83:
      this._cameraController.set$backward(false);
      break;
    case 87:
      this._cameraController.set$forward(false);
      break;
  }
},
 get$_onKeyUp: function() { return new $.BoundClosure(this, '_onKeyUp$1'); },
 _onMouseMove$1: function(event$) {
  var t1;
  if (this.get$_isPointerLocked() === true) {
    t1 = this._cameraController;
    t1.set$accumDX($.add(t1.get$accumDX(), event$.get$webkitMovementX()));
    t1 = this._cameraController;
    t1.set$accumDY($.add(t1.get$accumDY(), event$.get$webkitMovementY()));
  }
},
 get$_onMouseMove: function() { return new $.BoundClosure(this, '_onMouseMove$1'); },
 _onFullscreenChange$1: function(event$) {
  var t1, t2, screen$;
  t1 = $.document().get$webkitIsFullScreen() === true;
  t2 = this._canvas;
  if (t1) {
    this._originalCanvasWidth = t2.get$width();
    this._originalCanvasHeight = this._canvas.get$height();
    screen$ = $.window().get$screen();
    t1 = screen$.get$width();
    this._canvas.set$width(t1);
    t1 = screen$.get$height();
    this._canvas.set$height(t1);
  } else {
    t2.set$width(this._originalCanvasWidth);
    t1 = this._originalCanvasHeight;
    this._canvas.set$height(t1);
  }
  this._resetView$0();
},
 get$_onFullscreenChange: function() { return new $.BoundClosure(this, '_onFullscreenChange$1'); },
 _onPointerLockChange$1: function(event$) {
  if (this.get$_isPointerLocked() === true)
    $.print('Canvas owns pointer.');
  else
    $.print('Canvas does not own pointer.');
},
 get$_onPointerLockChange: function() { return new $.BoundClosure(this, '_onPointerLockChange$1'); },
 _onCanvasClicked$1: function(event$) {
  this._canvas.webkitRequestPointerLock$0();
},
 get$_onCanvasClicked: function() { return new $.BoundClosure(this, '_onCanvasClicked$1'); },
 Game$1: function(id) {
  var canvas, gl, t1, viewportProperties;
  canvas = $.callTypeCast($.document().query$1(id), 'is$CanvasElement');
  this._canvas = canvas;
  gl = canvas.getContext$1('experimental-webgl');
  this._originalCanvasWidth = canvas.get$width();
  this._originalCanvasHeight = canvas.get$height();
  t1 = this._canvas.get$on().get$fullscreenChange();
  $.getInterceptor(t1).add$1(t1, this.get$_onFullscreenChange());
  $.initSpectre();
  this._graphicsDevice = $.GraphicsDevice$(gl);
  this._context = this._graphicsDevice.get$context();
  this._resourceManager = $.ResourceManager$();
  viewportProperties = $.makeLiteralMap(['x', 0, 'y', 0, 'width', this._canvas.get$width(), 'height', this._canvas.get$height()]);
  this._viewport = this._graphicsDevice.createViewport$2('view', viewportProperties);
  this._animateClearColor = false;
  this._clearColor = $.vec3$(0, 0, 0);
  this._color = $.vec3$(0, 0, 0);
  this._direction = $.vec3$(1, 1, 1);
  this._randomGenerator = $.Random_Random(null);
  this._lastFrameTime = 0;
  this._angle = 0;
  this._camera = $.Camera$();
  t1 = $.div($.toDouble(canvas.get$width()), $.toDouble(canvas.get$height()));
  this._camera.set$aspectRatio(t1);
  this._cameraController = $.MouseKeyboardCameraController$();
  this._bindControls$0();
  this._createTransforms$0();
  this._createShaders$0();
  this._createState$0();
  this._createBuffers$0();
}
};

$$.CompileLog = {"": ["_errors", "_warnings", "_compilationIssues", "_status", "_errorLog", "_warningLog"],
 "super": "Object",
 get$vertexShaderErrorLines: function() {
  return $.index($.index(this._compilationIssues, 'Vertex'), 'Errors');
},
 get$vertexShaderWarningLines: function() {
  return $.index($.index(this._compilationIssues, 'Vertex'), 'Warnings');
},
 get$fragmentShaderErrorLines: function() {
  return $.index($.index(this._compilationIssues, 'Fragment'), 'Errors');
},
 get$fragmentShaderWarningLines: function() {
  return $.index($.index(this._compilationIssues, 'Fragment'), 'Warnings');
},
 addToLog$2: function(source, log) {
  var match, issues, errors, warnings, groups, lineNumber, t1;
  match = $.get$CompileLog__errorExp().firstMatch$1(log);
  issues = $.index(this._compilationIssues, source);
  errors = $._ListImpl_List(null);
  warnings = $._ListImpl_List(null);
  if (!(match == null)) {
    this._errors = this._errors + 1;
    groups = match.groups$1([0, 1, 2, 3]);
    lineNumber = $.parseInt($.index(groups, 2));
    $.getInterceptor(errors).add$1(errors, lineNumber);
    this._addToTable$3(this._errorLog, source, groups);
  }
  match = $.get$CompileLog__warningExp().firstMatch$1(log);
  if (!(match == null)) {
    this._warnings = this._warnings + 1;
    groups = match.groups$1([0, 1, 2, 3]);
    lineNumber = $.parseInt($.index(groups, 2));
    $.getInterceptor(warnings).add$1(warnings, lineNumber);
    this._addToTable$3(this._warningLog, source, groups);
  }
  $.indexSet(issues, 'Errors', errors);
  $.indexSet(issues, 'Warnings', warnings);
  t1 = $.S(this._errors) + ' errors ' + $.S(this._warnings) + ' warnings';
  this._status.set$innerHTML(t1);
},
 clear$0: function() {
  this._errors = 0;
  this._warnings = 0;
  var t1 = this._errorLog.get$nodes();
  $.getInterceptor(t1).clear$0(t1);
  t1 = this._warningLog.get$nodes();
  $.getInterceptor(t1).clear$0(t1);
  t1 = $.S(this._errors) + ' errors ' + $.S(this._warnings) + ' warnings';
  this._status.set$innerHTML(t1);
},
 _addToTable$3: function(table, source, groups) {
  var row, shader, t1, location$, message;
  row = $.TableRowElement_TableRowElement();
  shader = $.TableCellElement_TableCellElement();
  shader.set$innerHTML(source);
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, shader);
  location$ = $.TableCellElement_TableCellElement();
  location$.set$innerHTML($.S($.index(groups, 1)) + ',' + $.S($.index(groups, 2)));
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, location$);
  message = $.TableCellElement_TableCellElement();
  message.set$innerHTML($.index(groups, 3));
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, message);
  t1 = table.get$nodes();
  $.getInterceptor(t1).add$1(t1, row);
},
 CompileLog$0: function() {
  this._errors = 0;
  this._warnings = 0;
  this._status = $.query('#compiler_status');
  this._errorLog = $.query('#error_table');
  this._warningLog = $.query('#warning_table');
  this._compilationIssues = $.Map_Map();
  $.indexSet(this._compilationIssues, 'Vertex', $.Map_Map());
  $.indexSet(this._compilationIssues, 'Fragment', $.Map_Map());
}
};

$$.ModalDialog = {"": ["_liblib1$_element>"],
 "super": "Object",
 get$visible: function() {
  return $.contains$1(this._liblib1$_element.get$classes(), 'modal_dialog_opened');
},
 show$0: function() {
  this._liblib1$_element.get$classes().remove$1('modal_dialog_closed');
  var t1 = this._liblib1$_element.get$classes();
  $.getInterceptor(t1).add$1(t1, 'modal_dialog_opened');
},
 hide$0: function() {
  this._liblib1$_element.get$classes().remove$1('modal_dialog_opened');
  var t1 = this._liblib1$_element.get$classes();
  $.getInterceptor(t1).add$1(t1, 'modal_dialog_closed');
},
 _onHide$1: function(_) {
  this.hide$0();
},
 get$_onHide: function() { return new $.BoundClosure(this, '_onHide$1'); },
 ModalDialog$1: function(id) {
  this._liblib1$_element = $.query(id);
  this._liblib1$_element.get$classes().remove$1('hidden');
}
};

$$.SimpleModalDialog = {"": ["_liblib1$_element"],
 "super": "ModalDialog",
 SimpleModalDialog$1: function(id) {
  var t1 = this._liblib1$_element.query$1('div').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.anon4());
  t1 = this._liblib1$_element.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, this.get$_onHide());
}
};

$$.FileSystemDialog = {"": ["submitCallback<"],
 "super": "ModalDialog",
 submitCallback$1: function(arg0) { return this.submitCallback.call$1(arg0); },
 submitCallback$1: function(arg0) { return this.submitCallback.call$1(arg0); },
 _createFileList$1: function(ignoreCurrent) {
  var table, t1, length$, box_0, box_00, row, workspace, cell;
  table = this._liblib1$_element.query$1('table');
  t1 = table.get$nodes();
  $.getInterceptor(t1).clear$0(t1);
  this._selectedFile = -1;
  t1 = this._files;
  $.getInterceptor(t1).clear$0(t1);
  length$ = $.get$length(this._fileSystem.get$workspaces());
  if (typeof length$ !== 'number')
    return this._createFileList$1$bailout(1, table, length$);
  box_0 = {};
  for (box_0.i_1 = 0; $.ltB(box_0.i_1, length$); box_00 = {}, box_00.i_1 = box_0.i_1, box_00.i_1 = $.add(box_00.i_1, 1), box_0 = box_00) {
    row = $.TableRowElement_TableRowElement();
    t1 = table.get$nodes();
    $.getInterceptor(t1).add$1(t1, row);
    t1 = this._files;
    $.getInterceptor(t1).add$1(t1, row);
    t1 = row.get$on().get$click();
    $.getInterceptor(t1).add$1(t1, new $.FileSystemDialog__createFileList_anon(box_0, this));
    workspace = $.index(this._fileSystem.get$workspaces(), box_0.i_1);
    cell = $.TableCellElement_TableCellElement();
    cell.set$innerHTML(workspace.get$name());
    t1 = row.get$nodes();
    $.getInterceptor(t1).add$1(t1, cell);
    cell = $.TableCellElement_TableCellElement();
    cell.set$innerHTML('Dec 23rd');
    t1 = row.get$nodes();
    $.getInterceptor(t1).add$1(t1, cell);
  }
},
 _createFileList$1$bailout: function(state0, table, length$) {
  var box_0, box_00, row, t1, workspace, cell;
  box_0 = {};
  for (box_0.i_1 = 0; $.ltB(box_0.i_1, length$); box_00 = {}, box_00.i_1 = box_0.i_1, box_00.i_1 = $.add(box_00.i_1, 1), box_0 = box_00) {
    row = $.TableRowElement_TableRowElement();
    t1 = table.get$nodes();
    $.getInterceptor(t1).add$1(t1, row);
    t1 = this._files;
    $.getInterceptor(t1).add$1(t1, row);
    t1 = row.get$on().get$click();
    $.getInterceptor(t1).add$1(t1, new $.FileSystemDialog__createFileList_anon(box_0, this));
    workspace = $.index(this._fileSystem.get$workspaces(), box_0.i_1);
    cell = $.TableCellElement_TableCellElement();
    cell.set$innerHTML(workspace.get$name());
    t1 = row.get$nodes();
    $.getInterceptor(t1).add$1(t1, cell);
    cell = $.TableCellElement_TableCellElement();
    cell.set$innerHTML('Dec 23rd');
    t1 = row.get$nodes();
    $.getInterceptor(t1).add$1(t1, cell);
  }
},
 _createFileList$0: function() {
  return this._createFileList$1(true)
},
 _selectFile$1: function(index) {
  var length$, i, row, t1;
  if (typeof index !== 'number')
    return this._selectFile$1$bailout(1, index);
  this._selectedFile = index;
  length$ = $.get$length(this._files);
  if (typeof length$ !== 'number')
    return this._selectFile$1$bailout(2, index, length$);
  for (i = 0; i < length$; ++i) {
    row = $.index(this._files, i);
    if (index === i) {
      t1 = row.get$classes();
      $.getInterceptor(t1).add$1(t1, 'file_selected');
    } else
      row.get$classes().remove$1('file_selected');
  }
},
 _selectFile$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      index = env0;
      break;
    case 2:
      length$ = env1;
      index = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      this._selectedFile = index;
      length$ = $.get$length(this._files);
    case 2:
      var index, length$, i, row, t1;
      state0 = 0;
      for (i = 0; $.ltB(i, length$); ++i) {
        row = $.index(this._files, i);
        if ($.eqB(index, i)) {
          t1 = row.get$classes();
          $.getInterceptor(t1).add$1(t1, 'file_selected');
        } else
          row.get$classes().remove$1('file_selected');
      }
  }
},
 _onSubmit$1: function(_) {
},
 get$_onSubmit: function() { return new $.BoundClosure(this, '_onSubmit$1'); },
 FileSystemDialog$2: function(id, fileSystem) {
  var t1;
  this._fileSystem = fileSystem;
  this._files = $._ListImpl_List(null);
  t1 = this._liblib1$_element.query$1('.submit_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, this.get$_onSubmit());
  t1 = this._liblib1$_element.query$1('.cancel_button').get$on().get$click();
  $.getInterceptor(t1).add$1(t1, this.get$_onHide());
}
};

$$.LoadDialog = {"": ["_fileSystem", "_files", "submitCallback", "_selectedFile", "_liblib1$_element"],
 "super": "FileSystemDialog",
 show$0: function() {
  $.ModalDialog.prototype.show$0.call(this);
  this._createFileList$0();
},
 _onSubmit$1: function(_) {
  if (!$.eqB(this._selectedFile, -1) && !(this.submitCallback == null))
    this.submitCallback$1($.index(this._fileSystem.get$workspaces(), this._selectedFile).get$name());
},
 get$_onSubmit: function() { return new $.BoundClosure(this, '_onSubmit$1'); }
};

$$.SaveDialog = {"": ["_nameElement", "_fileSystem", "_files", "submitCallback", "_selectedFile", "_liblib1$_element"],
 "super": "FileSystemDialog",
 _onSubmit$1: function(_) {
  var t1;
  if ($.get$isEmpty(this._nameElement.get$value()) === true)
    return;
  for (t1 = $.iterator(this._fileSystem.get$workspaces()); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0().get$name(), this._nameElement.get$value()))
      return;
  if (!(this.submitCallback == null))
    this.submitCallback$1(this._nameElement.get$value());
},
 get$_onSubmit: function() { return new $.BoundClosure(this, '_onSubmit$1'); },
 SaveDialog$2: function(id, fileSystem) {
  this._nameElement = this._liblib1$_element.query$1('input');
}
};

$$.ModelSelection = {"": ["modelChangedCallback<", "modelLoadedCallback<", "_modelElements", "_selectedModel"],
 "super": "Object",
 modelChangedCallback$1: function(arg0) { return this.modelChangedCallback.call$1(arg0); },
 modelLoadedCallback$1: function(arg0) { return this.modelLoadedCallback.call$1(arg0); },
 _setupStandardModels$0: function() {
  var cubeMesh, t1, sphereMesh, planeMesh, cylinderMesh;
  this._modelElements = $._ListImpl_List(null);
  cubeMesh = $.callTypeCast($.query('#cube_button'), 'is$DivElement');
  t1 = cubeMesh.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupStandardModels_anon(this));
  t1 = this._modelElements;
  $.getInterceptor(t1).add$1(t1, cubeMesh);
  sphereMesh = $.query('#sphere_button');
  t1 = sphereMesh.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupStandardModels_anon0(this));
  t1 = this._modelElements;
  $.getInterceptor(t1).add$1(t1, sphereMesh);
  planeMesh = $.document().query$1('#plane_button');
  t1 = planeMesh.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupStandardModels_anon1(this));
  t1 = this._modelElements;
  $.getInterceptor(t1).add$1(t1, planeMesh);
  cylinderMesh = $.query('#cylinder_button');
  t1 = cylinderMesh.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupStandardModels_anon2(this));
  t1 = this._modelElements;
  $.getInterceptor(t1).add$1(t1, cylinderMesh);
},
 _setupModelLoadArea$0: function() {
  var modelDropArea, t1, dropText;
  modelDropArea = $.query('#model_drop');
  t1 = modelDropArea.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drop_none');
  dropText = $.ParagraphElement_ParagraphElement();
  dropText.set$innerHTML('Drag and Drop a Model to Change');
  t1 = dropText.get$classes();
  $.getInterceptor(t1).add$1(t1, 'hidden');
  t1 = modelDropArea.get$nodes();
  $.getInterceptor(t1).add$1(t1, dropText);
  t1 = modelDropArea.get$on().get$dragEnter();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupModelLoadArea_anon(modelDropArea));
  t1 = modelDropArea.get$on().get$dragLeave();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupModelLoadArea_anon0(modelDropArea));
  t1 = modelDropArea.get$on().get$dragOver();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupModelLoadArea_anon1());
  t1 = modelDropArea.get$on().get$drop();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupModelLoadArea_anon2(this, modelDropArea));
  t1 = modelDropArea.get$on().get$mouseOver();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupModelLoadArea_anon3(dropText));
  t1 = modelDropArea.get$on().get$mouseOut();
  $.getInterceptor(t1).add$1(t1, new $.ModelSelection__setupModelLoadArea_anon4(dropText));
},
 toJson$0: function() {
  var serialized, model;
  serialized = $.Map_Map();
  model = null;
  switch (this._selectedModel) {
    case -1:
      model = 'custom';
      break;
    case 0:
      model = 'cube';
      break;
    case 1:
      model = 'sphere';
      break;
    case 2:
      model = 'plane';
      break;
    case 3:
      model = 'cylinder';
      break;
  }
  $.indexSet(serialized, 'model', model);
  return serialized;
},
 fromJson$1: function(json) {
  var index;
  switch ($.index(json, 'model')) {
    case 'cube':
      index = 0;
      break;
    case 'sphere':
      index = 1;
      break;
    case 'plane':
      index = 2;
      break;
    case 'cylinder':
      index = 3;
      break;
    default:
      index = -1;
  }
  this._showSelectedModel$1(index);
},
 get$modelPath: function() {
  switch (this._selectedModel) {
    case 0:
      return 'web/resources/meshes/cube.mesh';
    case 1:
      return 'web/resources/meshes/sphere.mesh';
    case 2:
      return 'web/resources/meshes/plane.mesh';
    case 3:
      return 'web/resources/meshes/cylinder.mesh';
    default:
      return '';
  }
},
 _showSelectedModel$1: function(index) {
  var length$, i, element, t1;
  this._selectedModel = index;
  length$ = $.get$length(this._modelElements);
  if (typeof length$ !== 'number')
    return this._showSelectedModel$1$bailout(1, index, length$);
  for (i = 0; i < length$; ++i) {
    element = $.index(this._modelElements, i);
    if (i === index) {
      t1 = element.get$classes();
      $.getInterceptor(t1).add$1(t1, 'model_selected');
    } else
      element.get$classes().remove$1('model_selected');
  }
},
 _showSelectedModel$1$bailout: function(state0, index, length$) {
  var i, element, t1;
  for (i = 0; $.ltB(i, length$); ++i) {
    element = $.index(this._modelElements, i);
    if (i === index) {
      t1 = element.get$classes();
      $.getInterceptor(t1).add$1(t1, 'model_selected');
    } else
      element.get$classes().remove$1('model_selected');
  }
},
 _onModelChanged$2: function(url, index) {
  if (!(this.modelChangedCallback == null)) {
    this._showSelectedModel$1(index);
    this.modelChangedCallback$1(url);
  }
},
 get$_onModelChanged: function() { return new $.BoundClosure1(this, '_onModelChanged$2'); },
 _onModelLoaded$1: function(files) {
  if (!(this.modelLoadedCallback == null)) {
    this._showSelectedModel$1(-1);
    this.modelLoadedCallback$1($.index(files, 0));
  }
},
 get$_onModelLoaded: function() { return new $.BoundClosure(this, '_onModelLoaded$1'); },
 ModelSelection$0: function() {
  this._setupStandardModels$0();
  this._setupModelLoadArea$0();
  this._showSelectedModel$1(0);
}
};

$$.RendererSelection = {"": ["rasterizerStateCallback<", "_rasterizerStateEnabledElement", "_rasterizerStateCullModeElement", "_rasterizerStateFrontFaceElement", "depthStateCallback<", "_depthStateEnabledElement", "_depthStateWriteEnabledElement", "_depthStateComparisonElement", "blendStateCallback<", "_blendStateEnabledElement", "_blendStateSourceColorElement", "_blendStateDestinationColorElement", "_blendSourceAlphaElement", "_blendDestinationAlphaElement", "_blendColorOperationElement", "_blendAlphaOperationElement", "_blendStateWriteRedElement", "_blendStateWriteGreenElement", "_blendStateWriteBlueElement", "_blendStateWriteAlphaElement"],
 "super": "Object",
 rasterizerStateCallback$1: function(arg0) { return this.rasterizerStateCallback.call$1(arg0); },
 depthStateCallback$1: function(arg0) { return this.depthStateCallback.call$1(arg0); },
 blendStateCallback$1: function(arg0) { return this.blendStateCallback.call$1(arg0); },
 _setupRasterizerState$0: function() {
  this._rasterizerStateEnabledElement = $.query('#rasterizer_state_enabled');
  var t1 = this._rasterizerStateEnabledElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupRasterizerState_anon(this));
  this._rasterizerStateCullModeElement = $.query('#rasterizer_cull_mode');
  t1 = this._rasterizerStateCullModeElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupRasterizerState_anon0(this));
  this._rasterizerStateFrontFaceElement = $.query('#rasterizer_front_face');
  t1 = this._rasterizerStateFrontFaceElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupRasterizerState_anon1(this));
},
 _setupDepthState$0: function() {
  this._depthStateEnabledElement = $.query('#depth_state_enabled');
  var t1 = this._depthStateEnabledElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupDepthState_anon(this));
  this._depthStateWriteEnabledElement = $.query('#depth_write_enabled');
  t1 = this._depthStateWriteEnabledElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupDepthState_anon0(this));
  this._depthStateComparisonElement = $.query('#depth_comparison');
  t1 = this._depthStateComparisonElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupDepthState_anon1(this));
},
 _setupBlendState$0: function() {
  this._blendStateEnabledElement = $.query('#blend_state_enabled');
  var t1 = this._blendStateEnabledElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon(this));
  this._blendStateSourceColorElement = $.query('#source_color_function');
  t1 = this._blendStateSourceColorElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon0(this));
  this._blendStateDestinationColorElement = $.query('#destination_color_function');
  t1 = this._blendStateDestinationColorElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon1(this));
  this._blendSourceAlphaElement = $.query('#source_alpha_function');
  t1 = this._blendSourceAlphaElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon2(this));
  this._blendDestinationAlphaElement = $.query('#destination_alpha_function');
  t1 = this._blendDestinationAlphaElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon3(this));
  this._blendColorOperationElement = $.query('#blend_color_operation');
  t1 = this._blendColorOperationElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon4(this));
  this._blendAlphaOperationElement = $.query('#blend_alpha_operation');
  t1 = this._blendAlphaOperationElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon5(this));
  this._blendStateWriteRedElement = $.query('#write_red_enabled');
  t1 = this._blendStateWriteRedElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon6(this));
  this._blendStateWriteGreenElement = $.query('#write_green_enabled');
  t1 = this._blendStateWriteGreenElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon7(this));
  this._blendStateWriteBlueElement = $.query('#write_blue_enabled');
  t1 = this._blendStateWriteBlueElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon8(this));
  this._blendStateWriteAlphaElement = $.query('#write_alpha_enabled');
  t1 = this._blendStateWriteAlphaElement.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, new $.RendererSelection__setupBlendState_anon9(this));
},
 toJson$0: function() {
  var serialized = $.Map_Map();
  $.indexSet(serialized, 'blendState', this._blendStateToJson$0());
  $.indexSet(serialized, 'depthState', this._depthStateToJson$0());
  $.indexSet(serialized, 'rasterizerState', this._rasterizerStateToJson$0());
  return serialized;
},
 fromJson$1: function(json) {
  this._blendStateFromJson$1($.index(json, 'blendState'));
  this._depthStateFromJson$1($.index(json, 'depthState'));
  this._rasterizerStateFromJson$1($.index(json, 'rasterizerState'));
},
 _blendStateToJson$0: function() {
  var blendState = $.Map_Map();
  $.indexSet(blendState, 'blendEnable', this._blendStateEnabledElement.get$checked());
  $.indexSet(blendState, 'blendSourceColorFunc', this._blendStateSourceColorElement.get$value());
  $.indexSet(blendState, 'blendDestColorFunc', this._blendStateDestinationColorElement.get$value());
  $.indexSet(blendState, 'blendSourceAlphaFunc', this._blendSourceAlphaElement.get$value());
  $.indexSet(blendState, 'blendDestAlphaFunc', this._blendDestinationAlphaElement.get$value());
  $.indexSet(blendState, 'blendColorOp', this._blendColorOperationElement.get$value());
  $.indexSet(blendState, 'blendAlphaOp', this._blendAlphaOperationElement.get$value());
  $.indexSet(blendState, 'writeRenderTargetRed', this._blendStateWriteRedElement.get$checked());
  $.indexSet(blendState, 'writeRenderTargetGreen', this._blendStateWriteGreenElement.get$checked());
  $.indexSet(blendState, 'writeRenderTargetBlue', this._blendStateWriteBlueElement.get$checked());
  $.indexSet(blendState, 'writeRenderTargetAlpha', this._blendStateWriteAlphaElement.get$checked());
  return blendState;
},
 _blendStateFromJson$1: function(blendState) {
  var t1 = $.index(blendState, 'blendEnable');
  this._blendStateEnabledElement.set$checked(t1);
  t1 = $.index(blendState, 'blendSourceColorFunc');
  this._blendStateSourceColorElement.set$value(t1);
  t1 = $.index(blendState, 'blendDestColorFunc');
  this._blendStateDestinationColorElement.set$value(t1);
  t1 = $.index(blendState, 'blendSourceAlphaFunc');
  this._blendSourceAlphaElement.set$value(t1);
  t1 = $.index(blendState, 'blendDestAlphaFunc');
  this._blendDestinationAlphaElement.set$value(t1);
  t1 = $.index(blendState, 'blendColorOp');
  this._blendColorOperationElement.set$value(t1);
  t1 = $.index(blendState, 'blendAlphaOp');
  this._blendAlphaOperationElement.set$value(t1);
  t1 = $.index(blendState, 'writeRenderTargetRed');
  this._blendStateWriteRedElement.set$checked(t1);
  t1 = $.index(blendState, 'writeRenderTargetGreen');
  this._blendStateWriteGreenElement.set$checked(t1);
  t1 = $.index(blendState, 'writeRenderTargetBlue');
  this._blendStateWriteBlueElement.set$checked(t1);
  t1 = $.index(blendState, 'writeRenderTargetAlpha');
  this._blendStateWriteAlphaElement.set$checked(t1);
},
 _depthStateToJson$0: function() {
  var depthState = $.Map_Map();
  $.indexSet(depthState, 'depthTestEnabled', this._depthStateEnabledElement.get$checked());
  $.indexSet(depthState, 'depthWriteEnabled', this._depthStateWriteEnabledElement.get$checked());
  $.indexSet(depthState, 'depthComparisonOp', this._depthStateComparisonElement.get$value());
  return depthState;
},
 _depthStateFromJson$1: function(depthState) {
  var t1 = $.index(depthState, 'depthTestEnabled');
  this._depthStateEnabledElement.set$checked(t1);
  t1 = $.index(depthState, 'depthWriteEnabled');
  this._depthStateWriteEnabledElement.set$checked(t1);
  t1 = $.index(depthState, 'depthComparisonOp');
  this._depthStateComparisonElement.set$value(t1);
},
 _rasterizerStateToJson$0: function() {
  var rasterizerState = $.Map_Map();
  $.indexSet(rasterizerState, 'cullEnabled', this._rasterizerStateEnabledElement.get$checked());
  $.indexSet(rasterizerState, 'cullMode', this._rasterizerStateCullModeElement.get$value());
  $.indexSet(rasterizerState, 'cullFrontFace', this._rasterizerStateFrontFaceElement.get$value());
  return rasterizerState;
},
 _rasterizerStateFromJson$1: function(rasterizerState) {
  var t1 = $.index(rasterizerState, 'cullEnabled');
  this._rasterizerStateEnabledElement.set$checked(t1);
  t1 = $.index(rasterizerState, 'cullMode');
  this._rasterizerStateCullModeElement.set$value(t1);
  t1 = $.index(rasterizerState, 'cullFrontFace');
  this._rasterizerStateFrontFaceElement.set$value(t1);
},
 _onRasterizerStateChanged$0: function() {
  if (!(this.rasterizerStateCallback == null))
    this.rasterizerStateCallback$1('{\n  "cullEnabled": ' + $.S(this._rasterizerStateEnabledElement.get$checked()) + ',\n  "cullMode": "' + $.S(this._rasterizerStateCullModeElement.get$value()) + '",\n  "cullFrontFace": "' + $.S(this._rasterizerStateFrontFaceElement.get$value()) + '"\n}\n      ');
},
 get$_onRasterizerStateChanged: function() { return new $.BoundClosure0(this, '_onRasterizerStateChanged$0'); },
 _onDepthStateChanged$0: function() {
  if (!(this.depthStateCallback == null))
    this.depthStateCallback$1('{\n  "depthTestEnabled": ' + $.S(this._depthStateEnabledElement.get$checked()) + ',\n  "depthWriteEnabled": ' + $.S(this._depthStateWriteEnabledElement.get$checked()) + ',\n  "depthComparisonOp": "' + $.S(this._depthStateComparisonElement.get$value()) + '"\n}\n      ');
},
 get$_onDepthStateChanged: function() { return new $.BoundClosure0(this, '_onDepthStateChanged$0'); },
 _onBlendStateChanged$0: function() {
  if (!(this.blendStateCallback == null))
    this.blendStateCallback$1('{\n  "blendEnable": ' + $.S(this._blendStateEnabledElement.get$checked()) + ',\n  "blendSourceColorFunc": "' + $.S(this._blendStateSourceColorElement.get$value()) + '",\n  "blendDestColorFunc": "' + $.S(this._blendStateDestinationColorElement.get$value()) + '",\n  "blendSourceAlphaFunc": "' + $.S(this._blendSourceAlphaElement.get$value()) + '",\n  "blendDestAlphaFunc": "' + $.S(this._blendDestinationAlphaElement.get$value()) + '",\n  "blendColorOp": "' + $.S(this._blendColorOperationElement.get$value()) + '",\n  "blendAlphaOp": "' + $.S(this._blendAlphaOperationElement.get$value()) + '",\n  "writeRenderTargetRed": ' + $.S(this._blendStateWriteRedElement.get$checked()) + ',\n  "writeRenderTargetGreen": ' + $.S(this._blendStateWriteGreenElement.get$checked()) + ',\n  "writeRenderTargetBlue": ' + $.S(this._blendStateWriteBlueElement.get$checked()) + ',\n  "writeRenderTargetAlpha": ' + $.S(this._blendStateWriteAlphaElement.get$checked()) + '\n}\n      ');
},
 get$_onBlendStateChanged: function() { return new $.BoundClosure0(this, '_onBlendStateChanged$0'); },
 RendererSelection$0: function() {
  this._setupRasterizerState$0();
  this._setupDepthState$0();
  this._setupBlendState$0();
}
};

$$.SourceEditor = {"": ["_sourceCode>", "_codeLines", "_lineCount", "_compileSourceAt<", "sourceCallback<"],
 "super": "Object",
 sourceCallback$1: function(arg0) { return this.sourceCallback.call$1(arg0); },
 get$source: function() {
  return $.SourceEditor__toAscii(this._sourceCode.get$value());
},
 set$source: function(value) {
  var t1 = $.SourceEditor__toUnicode(value);
  this._sourceCode.set$value(t1);
  this._calculateLineNumbers$0();
},
 setErrorsAt$1: function(lineNumbers) {
  this._setMessageAt$2(lineNumbers, 'error_at');
},
 setWarningsAt$1: function(lineNumbers) {
  this._setMessageAt$2(lineNumbers, 'warning_at');
},
 _setMessageAt$2: function(lineNumbers, className) {
  var errors, lines, i, t1, t2;
  if (typeof lineNumbers !== 'string' && (typeof lineNumbers !== 'object' || lineNumbers === null || lineNumbers.constructor !== Array && !lineNumbers.is$JavaScriptIndexingBehavior()))
    return this._setMessageAt$2$bailout(1, lineNumbers, className);
  errors = lineNumbers.length;
  lines = this._codeLines.get$nodes();
  if (typeof lines !== 'string' && (typeof lines !== 'object' || lines === null || lines.constructor !== Array && !lines.is$JavaScriptIndexingBehavior()))
    return this._setMessageAt$2$bailout(2, lineNumbers, className, errors, lines);
  for (i = 0; i < errors; ++i) {
    if (i >= lineNumbers.length)
      throw $.ioore(i);
    t1 = lineNumbers[i];
    if (t1 !== (t1 | 0))
      throw $.iae(t1);
    if (t1 < 0 || t1 >= lines.length)
      throw $.ioore(t1);
    t2 = lines[t1].get$classes();
    $.getInterceptor(t2).add$1(t2, className);
  }
},
 _setMessageAt$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      className = env1;
      lineNumbers = env0;
      break;
    case 2:
      lines = env3;
      errors = env2;
      className = env1;
      lineNumbers = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      errors = $.get$length(lineNumbers);
      lines = this._codeLines.get$nodes();
    case 2:
      var className, lineNumbers, errors, lines, i, t1;
      state0 = 0;
      for (i = 0; $.ltB(i, errors); ++i) {
        t1 = $.index(lines, $.index(lineNumbers, i)).get$classes();
        $.getInterceptor(t1).add$1(t1, className);
      }
  }
},
 clearErrors$0: function() {
  var lines, length$, i, line;
  lines = this._codeLines.get$nodes();
  if (typeof lines !== 'string' && (typeof lines !== 'object' || lines === null || lines.constructor !== Array && !lines.is$JavaScriptIndexingBehavior()))
    return this.clearErrors$0$bailout(1, lines);
  length$ = lines.length;
  for (i = 1; i < length$; ++i) {
    if (i >= lines.length)
      throw $.ioore(i);
    line = lines[i];
    line.get$classes().remove$1('error_at');
    line.get$classes().remove$1('warning_at');
  }
},
 clearErrors$0$bailout: function(state0, lines) {
  var length$, i, line;
  length$ = $.get$length(lines);
  for (i = 1; $.ltB(i, length$); ++i) {
    line = $.index(lines, i);
    line.get$classes().remove$1('error_at');
    line.get$classes().remove$1('warning_at');
  }
},
 _calculateLineNumbers$0: function() {
  this._createLineNumbers$1($.toInt($.div(this._sourceCode.get$scrollHeight(), 15)));
},
 _createLineNumbers$1: function(lines) {
  var toRemove, length$, i, t1, lineNum;
  if (typeof lines !== 'number')
    return this._createLineNumbers$1$bailout(1, lines);
  if (lines === 0)
    return;
  if ($.gtB(this._lineCount, lines)) {
    toRemove = $._ListImpl_List(null);
    length$ = $.get$length(this._codeLines.get$nodes());
    if (typeof length$ !== 'number')
      return this._createLineNumbers$1$bailout(2, lines, toRemove, length$);
    for (i = lines + 1; i < length$; ++i)
      $.getInterceptor(toRemove).add$1(toRemove, $.index(this._codeLines.get$nodes(), i));
    for (t1 = $.iterator(toRemove); t1.get$hasNext() === true;)
      t1.next$0().remove$0();
  } else {
    i = $.add(this._lineCount, 1);
    if (typeof i !== 'number')
      return this._createLineNumbers$1$bailout(3, lines, i);
    for (; i <= lines; ++i) {
      lineNum = $.DivElement_DivElement();
      lineNum.set$innerHTML($.toString(i));
      t1 = this._codeLines.get$nodes();
      $.getInterceptor(t1).add$1(t1, lineNum);
    }
  }
  this._lineCount = lines;
},
 _createLineNumbers$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      lines = env0;
      break;
    case 2:
      length$ = env2;
      toRemove = env1;
      lines = env0;
      break;
    case 3:
      i = env1;
      lines = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if ($.eqB(lines, 0))
        return;
    default:
      var lines, toRemove, length$, i, t1, lineNum;
      if (state0 === 2 || state0 === 0 && $.gtB(this._lineCount, lines))
        switch (state0) {
          case 0:
            toRemove = $._ListImpl_List(null);
            length$ = $.get$length(this._codeLines.get$nodes());
          case 2:
            state0 = 0;
            for (i = $.add(lines, 1); $.ltB(i, length$); i = $.add(i, 1))
              $.getInterceptor(toRemove).add$1(toRemove, $.index(this._codeLines.get$nodes(), i));
            for (t1 = $.iterator(toRemove); t1.get$hasNext() === true;)
              t1.next$0().remove$0();
        }
      else
        switch (state0) {
          case 0:
            i = $.add(this._lineCount, 1);
          case 3:
            state0 = 0;
            for (; $.leB(i, lines); i = $.add(i, 1)) {
              lineNum = $.DivElement_DivElement();
              lineNum.set$innerHTML($.toString(i));
              t1 = this._codeLines.get$nodes();
              $.getInterceptor(t1).add$1(t1, lineNum);
            }
        }
      this._lineCount = lines;
  }
},
 _onSourceChanged$0: function() {
  if (!(this.sourceCallback == null)) {
    var date = $.Date_Date$now();
    if ($.gtB(this._compileSourceAt, date.get$millisecondsSinceEpoch()))
      return;
    this.sourceCallback$1(this.get$source());
  }
},
 _onSourceScrolled$1: function(_) {
  var t1 = '-' + $.S(this._sourceCode.get$scrollTop()) + 'px';
  this._codeLines.get$style().set$marginTop(t1);
},
 get$_onSourceScrolled: function() { return new $.BoundClosure(this, '_onSourceScrolled$1'); },
 SourceEditor$2: function(textId, lineNumbersId) {
  var t1;
  this._sourceCode = $.query(textId);
  this._sourceCode.set$spellcheck(false);
  t1 = this._sourceCode.get$on().get$keyUp();
  $.getInterceptor(t1).add$1(t1, new $.anon3(this));
  t1 = this._sourceCode.get$on().get$scroll();
  $.getInterceptor(t1).add$1(t1, this.get$_onSourceScrolled());
  this._compileSourceAt = 0;
  this._codeLines = $.query(lineNumbersId);
  this._lineCount = 0;
  this._createLineNumbers$1(46);
}
};

$$.TabbedElement = {"": ["_tabs", "_tabContents"],
 "super": "Object",
 addTab$2: function(tabId, tabContentId) {
  var t1, index, tab, tabContent;
  t1 = this._tabs;
  index = t1.length;
  tab = $.document().query$1(tabId);
  $.getInterceptor(t1).add$1(t1, tab);
  tabContent = $.document().query$1(tabContentId);
  t1 = this._tabContents;
  $.getInterceptor(t1).add$1(t1, tabContent);
  t1 = tab.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.TabbedElement_addTab_anon(index, this));
},
 _onSelected$1: function(index) {
  var t1, length$, t2, i, t3, t4;
  t1 = this._tabs;
  length$ = t1.length;
  for (t2 = this._tabContents, i = 0; i < length$; ++i) {
    t3 = i === index;
    t4 = t1.length;
    if (t3) {
      if (i >= t4)
        throw $.ioore(i);
      t3 = t1[i].get$classes();
      $.getInterceptor(t3).add$1(t3, 'selected');
      if (i >= t2.length)
        throw $.ioore(i);
      t2[i].get$classes().remove$1('hidden');
    } else {
      if (i >= t4)
        throw $.ioore(i);
      t1[i].get$classes().remove$1('selected');
      if (i >= t2.length)
        throw $.ioore(i);
      t3 = t2[i].get$classes();
      $.getInterceptor(t3).add$1(t3, 'hidden');
    }
  }
}
};

$$.ToolTip = {"": ["_liblib1$_element>"],
 "super": "Object",
 get$element: function() {
  return this._liblib1$_element;
},
 ToolTip$1: function(tip) {
  var help, t1;
  this._liblib1$_element = $.AnchorElement_AnchorElement($);
  this._liblib1$_element.$$dom_setAttribute$2('tool_tip_attribute', tip);
  help = $.ImageElement_ImageElement($, $, $);
  t1 = this._liblib1$_element.get$nodes();
  $.getInterceptor(t1).add$1(t1, help);
  help.set$src('web/resources/images/help.png');
  t1 = help.get$on().get$mouseOver();
  $.getInterceptor(t1).add$1(t1, new $.anon1(this));
  t1 = help.get$on().get$mouseOut();
  $.getInterceptor(t1).add$1(t1, new $.anon2(this));
}
};

$$.TextureUnit = {"": ["_location", "textureCallback<", "samplerStateCallback<", "_liblib1$_element>", "_textureDisplay", "_wrapS>", "_wrapT>", "_minFilter>", "_magFilter>"],
 "super": "Object",
 textureCallback$2: function(arg0, arg1) { return this.textureCallback.call$2(arg0, arg1); },
 samplerStateCallback$2: function(arg0, arg1) { return this.samplerStateCallback.call$2(arg0, arg1); },
 _createTextureDrop$0: function() {
  var textureArea, t1, textureDropArea, dropText;
  textureArea = $.DivElement_DivElement();
  t1 = textureArea.get$classes();
  $.getInterceptor(t1).add$1(t1, 'texture_element');
  t1 = this._liblib1$_element.get$nodes();
  $.getInterceptor(t1).add$1(t1, textureArea);
  textureDropArea = $.DivElement_DivElement();
  t1 = textureDropArea.get$classes();
  $.getInterceptor(t1).add$1(t1, 'texture_drop');
  t1 = textureDropArea.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drag_none');
  dropText = $.ParagraphElement_ParagraphElement();
  dropText.set$innerHTML('Drag and Drop a Texture to Change');
  t1 = dropText.get$classes();
  $.getInterceptor(t1).add$1(t1, 'hidden');
  t1 = textureDropArea.get$nodes();
  $.getInterceptor(t1).add$1(t1, dropText);
  this._textureDisplay = $.ImageElement_ImageElement($, $, $);
  t1 = textureDropArea.get$nodes();
  $.getInterceptor(t1).add$1(t1, this._textureDisplay);
  t1 = textureArea.get$nodes();
  $.getInterceptor(t1).add$1(t1, textureDropArea);
  t1 = textureArea.get$on().get$dragEnter();
  $.getInterceptor(t1).add$1(t1, new $.TextureUnit__createTextureDrop_anon(textureDropArea));
  t1 = textureArea.get$on().get$dragLeave();
  $.getInterceptor(t1).add$1(t1, new $.TextureUnit__createTextureDrop_anon0(textureDropArea));
  t1 = textureArea.get$on().get$dragOver();
  $.getInterceptor(t1).add$1(t1, new $.TextureUnit__createTextureDrop_anon1());
  t1 = textureArea.get$on().get$drop();
  $.getInterceptor(t1).add$1(t1, new $.TextureUnit__createTextureDrop_anon2(textureDropArea, this));
  t1 = textureArea.get$on().get$mouseOver();
  $.getInterceptor(t1).add$1(t1, new $.TextureUnit__createTextureDrop_anon3(dropText));
  t1 = textureArea.get$on().get$mouseOut();
  $.getInterceptor(t1).add$1(t1, new $.TextureUnit__createTextureDrop_anon4(dropText));
},
 _createSamplerState$0: function() {
  var samplerArea, t1, tableElement, wrapValues, minFilterValues, magFilterValues;
  samplerArea = $.DivElement_DivElement();
  t1 = samplerArea.get$classes();
  $.getInterceptor(t1).add$1(t1, 'sampler_state');
  t1 = this._liblib1$_element.get$nodes();
  $.getInterceptor(t1).add$1(t1, samplerArea);
  tableElement = $.TableElement_TableElement();
  t1 = samplerArea.get$nodes();
  $.getInterceptor(t1).add$1(t1, tableElement);
  wrapValues = $.makeLiteralMap(['Clamped', 'TextureWrapClampToEdge', 'Mirror', 'TextureWrapMirroredRepeat', 'Repeat', 'TextureWrapRepeat']);
  minFilterValues = $.makeLiteralMap(['Linear', 'TextureMinFilterLinear', 'Nearest', 'TextureMinFilterNearest', 'Nearest Mipmap Nearest', 'TextureMinFilterNearestMipmapNearest', 'Nearest Mipmap Linear', 'TextureMinFilterNearestMipmapLinear', 'Linear Mipmap Nearest', 'TextureMinFilterLinearMipmapNearest', 'Linear Mipmap Linear', 'TextureMinFilterLinearMipmapLinear']);
  magFilterValues = $.makeLiteralMap(['Linear', 'TextureMagFilterLinear', 'Nearest', 'TextureMagFilterNearest']);
  this._wrapS = $.TextureUnit__createSelectElement(tableElement, 'Wrap S', wrapValues, 'Wrapping in the S direction');
  this._wrapS.set$value('TextureWrapRepeat');
  t1 = this._wrapS.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, this.get$_onSamplerStateChanged());
  this._wrapT = $.TextureUnit__createSelectElement(tableElement, 'Wrap T', wrapValues, 'Wrapping in the S direction');
  this._wrapT.set$value('TextureWrapRepeat');
  t1 = this._wrapT.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, this.get$_onSamplerStateChanged());
  this._minFilter = $.TextureUnit__createSelectElement(tableElement, 'Minification Filter', minFilterValues, 'Tool tip');
  this._minFilter.set$value('TextureMinFilterNearestMipmapLinear');
  t1 = this._minFilter.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, this.get$_onSamplerStateChanged());
  this._magFilter = $.TextureUnit__createSelectElement(tableElement, 'Magnification Filter', magFilterValues, 'Tool tip');
  this._magFilter.set$value('TextureMagFilterLinear');
  t1 = this._magFilter.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, this.get$_onSamplerStateChanged());
},
 get$element: function() {
  return this._liblib1$_element;
},
 get$texture: function() {
  return this._textureDisplay.get$src();
},
 set$texture: function(value) {
  this._textureDisplay.set$src(value);
},
 get$samplerState: function() {
  return '{\n  "wrapS": "' + $.S(this._wrapS.get$value()) + '",\n  "' + 'wrapT' + '": "' + $.S(this._wrapT.get$value()) + '",\n  "' + 'minFilter' + '": "' + $.S(this._minFilter.get$value()) + '",\n  "' + 'maxFilter' + '": "' + $.S(this._magFilter.get$value()) + '"\n}\n      ';
},
 toJson$0: function() {
  var serialized = $.Map_Map();
  $.indexSet(serialized, 'filename', this._textureDisplay.get$src());
  $.indexSet(serialized, 'wrapS', this._wrapS.get$value());
  $.indexSet(serialized, 'wrapT', this._wrapT.get$value());
  $.indexSet(serialized, 'minFilter', this._minFilter.get$value());
  $.indexSet(serialized, 'maxFilter', this._magFilter.get$value());
  return serialized;
},
 fromJson$1: function(json) {
  var t1 = $.index(json, 'filename');
  this._textureDisplay.set$src(t1);
  t1 = $.index(json, 'wrapS');
  this._wrapS.set$value(t1);
  t1 = $.index(json, 'wrapT');
  this._wrapT.set$value(t1);
  t1 = $.index(json, 'minFilter');
  this._minFilter.set$value(t1);
  t1 = $.index(json, 'maxFilter');
  this._magFilter.set$value(t1);
},
 _onTextureChanged$1: function(files) {
  if (!(this.textureCallback == null) && $.gtB($.get$length(files), 0))
    this.textureCallback$2($.index(files, 0), this._location);
},
 get$_onTextureChanged: function() { return new $.BoundClosure(this, '_onTextureChanged$1'); },
 _onSamplerStateChanged$1: function(_) {
  if (!(this.samplerStateCallback == null))
    this.samplerStateCallback$2(this.get$samplerState(), this._location);
},
 get$_onSamplerStateChanged: function() { return new $.BoundClosure(this, '_onSamplerStateChanged$1'); },
 TextureUnit$1: function(location$) {
  var t1, t2, header;
  this._location = location$;
  this._liblib1$_element = $.DivElement_DivElement();
  t1 = this._liblib1$_element.get$classes();
  $.getInterceptor(t1).add$1(t1, 'ui_row');
  t1 = this._liblib1$_element.get$classes();
  t2 = $.getInterceptor(t1);
  t2.add$1(t1, $.eqB($.mod(location$, 2), 0) ? 'first' : 'second');
  header = $.HeadingElement_HeadingElement$h2();
  header.set$innerHTML('Texture Unit #' + $.S(location$));
  t1 = this._liblib1$_element.get$nodes();
  $.getInterceptor(t1).add$1(t1, header);
  this._createTextureDrop$0();
  this._createSamplerState$0();
}
};

$$.TextureSelection = {"": ["_liblib1$_parent>", "textureCallback<", "samplerStateCallback<", "_textureUnits"],
 "super": "Object",
 textureCallback$2: function(arg0, arg1) { return this.textureCallback.call$2(arg0, arg1); },
 samplerStateCallback$2: function(arg0, arg1) { return this.samplerStateCallback.call$2(arg0, arg1); },
 get$textureUnits: function() {
  return this._textureUnits;
},
 toJson$0: function() {
  var serialized, serializedTextureUnits, i;
  serialized = $.Map_Map();
  serializedTextureUnits = $._ListImpl_List(null);
  for (i = 0; i < 16; ++i)
    $.getInterceptor(serializedTextureUnits).add$1(serializedTextureUnits, $.index(this._textureUnits, i).toJson$0());
  $.indexSet(serialized, 'textures', serializedTextureUnits);
  return serialized;
},
 fromJson$1: function(json) {
  var serializedTextureUnits, i, t1;
  serializedTextureUnits = $.index(json, 'textures');
  if (typeof serializedTextureUnits !== 'string' && (typeof serializedTextureUnits !== 'object' || serializedTextureUnits === null || serializedTextureUnits.constructor !== Array && !serializedTextureUnits.is$JavaScriptIndexingBehavior()))
    return this.fromJson$1$bailout(1, serializedTextureUnits);
  for (i = 0; i < 16; ++i) {
    t1 = $.index(this._textureUnits, i);
    if (i >= serializedTextureUnits.length)
      throw $.ioore(i);
    t1.fromJson$1(serializedTextureUnits[i]);
  }
},
 fromJson$1$bailout: function(state0, serializedTextureUnits) {
  var i;
  for (i = 0; i < 16; ++i)
    $.index(this._textureUnits, i).fromJson$1($.index(serializedTextureUnits, i));
},
 _onTextureChanged$2: function(file, textureUnit) {
  if (!(this.textureCallback == null))
    this.textureCallback$2(file, textureUnit);
},
 get$_onTextureChanged: function() { return new $.BoundClosure1(this, '_onTextureChanged$2'); },
 _onSamplerStateChanged$2: function(values, textureUnit) {
  if (!(this.samplerStateCallback == null))
    this.samplerStateCallback$2(values, textureUnit);
},
 get$_onSamplerStateChanged: function() { return new $.BoundClosure1(this, '_onSamplerStateChanged$2'); },
 TextureSelection$0: function() {
  var i, textureUnit, t1;
  this._liblib1$_parent = $.query('#texture_area');
  this._textureUnits = $._ListImpl_List(null);
  for (i = 0; i < 16; ++i) {
    textureUnit = $.TextureUnit$(i);
    textureUnit.textureCallback = this.get$_onTextureChanged();
    textureUnit.samplerStateCallback = this.get$_onSamplerStateChanged();
    t1 = this._textureUnits;
    $.getInterceptor(t1).add$1(t1, textureUnit);
    t1 = this._liblib1$_parent.get$nodes();
    $.getInterceptor(t1).add$1(t1, textureUnit.get$element());
  }
}
};

$$.UniformValue = {"": ["_name<", "changeCallback<", "_liblib1$_element>"],
 "super": "Object",
 changeCallback$1: function(arg0) { return this.changeCallback.call$1(arg0); },
 get$name: function() {
  return this._name;
},
 get$uniformType: function() {
  return this._uniformType;
},
 get$element: function() {
  return this._liblib1$_element;
},
 _createLayout$1: function(cell) {
  var t1, header, tableElement, row, typeCell;
  this._liblib1$_element = $.DivElement_DivElement();
  t1 = this._liblib1$_element.get$classes();
  $.getInterceptor(t1).add$1(t1, 'ui_row');
  header = $.HeadingElement_HeadingElement$h2();
  header.set$innerHTML(this._name);
  t1 = this._liblib1$_element.get$nodes();
  $.getInterceptor(t1).add$1(t1, header);
  tableElement = $.TableElement_TableElement();
  t1 = this._liblib1$_element.get$nodes();
  $.getInterceptor(t1).add$1(t1, tableElement);
  row = $.TableRowElement_TableRowElement();
  t1 = tableElement.get$nodes();
  $.getInterceptor(t1).add$1(t1, row);
  typeCell = $.TableCellElement_TableCellElement();
  typeCell.set$innerHTML(this._uniformType);
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, typeCell);
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, cell);
},
 UniformValue$2: function(name$, uniformType) {
  this._name = name$;
  this._uniformType = uniformType;
}
};

$$.UniformSamplerValue = {"": ["_uniformValue", "_liblib1$_value>", "_name", "_uniformType", "changeCallback", "_liblib1$_element"],
 "super": "UniformValue",
 get$value: function() {
  return this._uniformValue;
},
 _createElement$0: function() {
  var textureValues, cell, t1;
  textureValues = $.makeLiteralMap(['Texture #0', '0', 'Texture #1', '1', 'Texture #2', '2', 'Texture #3', '3', 'Texture #4', '4', 'Texture #5', '5', 'Texture #6', '6', 'Texture #7', '7', 'Texture #8', '8', 'Texture #9', '9', 'Texture #10', '10', 'Texture #11', '11', 'Texture #12', '12', 'Texture #13', '13', 'Texture #14', '14', 'Texture #15', '15']);
  cell = $.TableCellElement_TableCellElement();
  this._liblib1$_value = $.SelectElement_SelectElement();
  t1 = cell.get$nodes();
  $.getInterceptor(t1).add$1(t1, this._liblib1$_value);
  $.getInterceptor(textureValues).forEach$1(textureValues, new $.UniformSamplerValue__createElement_anon(this));
  t1 = this._liblib1$_value.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, this.get$_onValueChanged());
  this._createLayout$1(cell);
},
 _onValueChanged$1: function(e) {
  this._uniformValue = $.parseInt(this._liblib1$_value.get$value());
  if (!(this.changeCallback == null))
    this.changeCallback$1(this._uniformValue);
},
 get$_onValueChanged: function() { return new $.BoundClosure(this, '_onValueChanged$1'); },
 UniformSamplerValue$1: function(name$) {
  this._uniformValue = 0;
  this._createElement$0();
}
};

$$.UniformSelection = {"": ["_liblib1$_parent>", "_uniforms>", "changeCallback<"],
 "super": "Object",
 changeCallback$1: function(arg0) { return this.changeCallback.call$1(arg0); },
 get$uniformValues: function() {
  var values, t1;
  values = $.Map_Map();
  t1 = this._uniforms;
  $.getInterceptor(t1).forEach$1(t1, new $.UniformSelection_uniformValues_anon(values));
  return values;
},
 set$uniformTypes: function(values) {
  var updateValues = $.Map_Map();
  $.getInterceptor(values).forEach$1(values, new $.UniformSelection_uniformTypes_anon(updateValues, this));
  this._updateUniformValues$1(updateValues);
},
 _updateUniformValues$1: function(values) {
  var t1, t2;
  t1 = {};
  t2 = this._uniforms;
  $.getInterceptor(t2).forEach$1(t2, new $.UniformSelection__updateUniformValues_anon());
  this._uniforms = values;
  t1.count_1 = 0;
  t2 = this._uniforms;
  $.getInterceptor(t2).forEach$1(t2, new $.UniformSelection__updateUniformValues_anon0(t1, this));
},
 _onValueChanged$1: function(_) {
  $.print('UniformSelection._onValueChanged');
  if (!(this.changeCallback == null))
    this.changeCallback$1(this.get$uniformValues());
},
 get$_onValueChanged: function() { return new $.BoundClosure(this, '_onValueChanged$1'); },
 _createVariableTable$2: function(table, variables) {
  $.getInterceptor(variables).forEach$1(variables, new $.UniformSelection__createVariableTable_anon(table));
},
 UniformSelection$0: function() {
  this._liblib1$_parent = $.query('#variables_area');
  this._createVariableTable$2($.query('#builtin_attributes'), $.get$UniformSelection__builtinAttributeNames());
  this._createVariableTable$2($.query('#builtin_uniforms'), $.get$UniformSelection__builtinUniformNames());
  this._uniforms = $.Map_Map();
}
};

$$.ApplicationFileSystem = {"": ["_fileSystem", "_bytesGranted<", "_tempWorkspace<", "_workspaces>", "_fileSystemReadyCallback>"],
 "super": "Object",
 _fileSystemReadyCallback$0: function() { return this._fileSystemReadyCallback.call$0(); },
 _onQuotaError$1: function(error) {
},
 get$_onQuotaError: function() { return new $.BoundClosure(this, '_onQuotaError$1'); },
 _onFileSystemCreated$1: function(fileSystem) {
  var directoryReader, t1;
  this._fileSystem = fileSystem;
  directoryReader = this._fileSystem.get$root().createReader$0();
  t1 = this._workspaces;
  $.getInterceptor(t1).clear$0(t1);
  this._searchForWorkspaces$1(directoryReader);
  if (this._tempWorkspace == null)
    this._createWorkspace$1('temp').then$1(new $.ApplicationFileSystem__onFileSystemCreated_anon(this));
  else if (!(this._fileSystemReadyCallback == null))
    this._fileSystemReadyCallback$0();
},
 get$_onFileSystemCreated: function() { return new $.BoundClosure(this, '_onFileSystemCreated$1'); },
 _onFileSystemReady$0: function() {
  if (!(this._fileSystemReadyCallback == null))
    this._fileSystemReadyCallback$0();
},
 get$_onFileSystemReady: function() { return new $.BoundClosure0(this, '_onFileSystemReady$0'); },
 get$tempWorkspace: function() {
  return this._tempWorkspace;
},
 get$workspaces: function() {
  return this._workspaces;
},
 _createWorkspace$2: function(directoryName, name$) {
  var workspaceCreation = $.Completer_Completer();
  this._fileSystem.get$root().getDirectory$4$errorCallback$options$successCallback(directoryName, $.ApplicationFileSystem__onFileSystemError, $.makeLiteralMap(['create', true]), new $.ApplicationFileSystem__createWorkspace_anon(workspaceCreation, name$));
  return workspaceCreation.get$future();
},
 _createWorkspace$1: function(directoryName) {
  return this._createWorkspace$2(directoryName,'')
},
 copyWorkspace$2: function(original, name$) {
  var workspaceCreation, newDirectoryName;
  workspaceCreation = $.Completer_Completer();
  newDirectoryName = $.ApplicationFileSystem__getNewDirectoryName();
  original.get$_directory().copyTo$4(this._fileSystem.get$root(), newDirectoryName, new $.ApplicationFileSystem_copyWorkspace_anon(name$, workspaceCreation, this), $.ApplicationFileSystem__onFileSystemError);
  return workspaceCreation.get$future();
},
 loadWorkspace$1: function(name$) {
  var workspaceLoaded, length$, i, workspace;
  workspaceLoaded = $.Completer_Completer();
  length$ = $.get$length(this._workspaces);
  if (typeof length$ !== 'number')
    return this.loadWorkspace$1$bailout(1, name$, workspaceLoaded, length$);
  for (i = 0; i < length$; ++i) {
    workspace = $.index(this._workspaces, i);
    if ($.eqB(name$, workspace.get$name()))
      workspaceLoaded.complete$1(workspace);
  }
  return workspaceLoaded.get$future();
},
 loadWorkspace$1$bailout: function(state0, name$, workspaceLoaded, length$) {
  var i, workspace;
  for (i = 0; $.ltB(i, length$); ++i) {
    workspace = $.index(this._workspaces, i);
    if ($.eqB(name$, workspace.get$name()))
      workspaceLoaded.complete$1(workspace);
  }
  return workspaceLoaded.get$future();
},
 _searchForWorkspaces$1: function(directoryReader) {
  directoryReader.readEntries$1(new $.ApplicationFileSystem__searchForWorkspaces_anon(directoryReader, this));
},
 ApplicationFileSystem$1: function(fileSystemReadycallback) {
  this._fileSystemReadyCallback = fileSystemReadycallback;
  this._workspaces = $._ListImpl_List(null);
  $.window().get$webkitStorageInfo().requestQuota$4(1, 20971520, new $.anon0(this), this.get$_onQuotaError());
}
};

$$.Workspace = {"": ["_directory>", "_name<", "_path"],
 "super": "Object",
 get$name: function() {
  return this._name;
},
 get$path: function() {
  return this._path;
},
 loadState$0: function() {
  return this._readJson$1('state.json');
},
 loadVertexShader$0: function() {
  return this._readText$1('shader.vert');
},
 loadFragmentShader$0: function() {
  return this._readText$1('shader.frag');
},
 _readJson$1: function(fileName) {
  var completer = $.Completer_Completer();
  this._readText$1(fileName).then$1(new $.Workspace__readJson_anon(completer));
  return completer.get$future();
},
 _readText$1: function(fileName) {
  var completer = $.Completer_Completer();
  this._directory.getFile$4$errorCallback$options$successCallback(fileName, $.ApplicationFileSystem__onFileSystemError, $.makeLiteralMap([]), new $.Workspace__readText_anon(completer));
  return completer.get$future();
},
 saveMetadata$1: function(values) {
  return this._writeText$2('meta.json', values);
},
 saveState$1: function(values) {
  return this._writeText$2('state.json', values);
},
 saveVertexShader$1: function(shader) {
  return this._writeText$2('shader.vert', shader);
},
 saveFragmentShader$1: function(shader) {
  return this._writeText$2('shader.frag', shader);
},
 saveModel$1: function(file) {
  return this._writeFile$2('model.mesh', file);
},
 saveTexture$2: function(file, textureUnit) {
  var originalFilename, extension;
  originalFilename = file.get$name();
  extension = $.getInterceptor(originalFilename).substring$1(originalFilename, $.lastIndexOf$1(originalFilename, '.'));
  return this._writeFile$2('texture' + $.S(textureUnit) + $.S(extension), file);
},
 _writeText$2: function(fileName, json) {
  return this._writeFile$2(fileName, $.Blob_Blob([json], 'text/plain', $));
},
 _writeFile$2: function(fileName, data) {
  var completer = $.Completer_Completer();
  $.makeLiteralMap(['create', true]);
  this._directory.getFile$4$errorCallback$options$successCallback(fileName, $.ApplicationFileSystem__onFileSystemError, $.makeLiteralMap(['create', true]), new $.Workspace__writeFile_anon(completer, data));
  return completer.get$future();
},
 clear$0: function() {
  this._clearWorkspace$1(this._directory.createReader$0());
},
 _clearWorkspace$1: function(directoryReader) {
  directoryReader.readEntries$1(new $.Workspace__clearWorkspace_anon(directoryReader, this));
},
 Workspace$2: function(entry, name$) {
  this._directory = entry;
  this._path = this._directory.get$fullPath();
  this._name = name$;
  $.print('Path: ' + $.S(this._path));
  if ($.get$isEmpty(this._name) === true)
    this._readJson$1('meta.json').then$1(new $.anon(this));
}
};

$$.AbstractWorkerEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.AudioContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$.BatteryManagerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.BodyElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$unload: function() {
  return this.operator$index$1('unload');
},
 unload$0: function() { return this.get$unload().call$0(); }
};

$$.DOMApplicationCacheEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.DedicatedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.DocumentEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$dragEnter: function() {
  return this.operator$index$1('dragenter');
},
 get$dragLeave: function() {
  return this.operator$index$1('dragleave');
},
 get$dragOver: function() {
  return this.operator$index$1('dragover');
},
 get$drop: function() {
  return this.operator$index$1('drop');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$fullscreenChange: function() {
  return this.operator$index$1('webkitfullscreenchange');
},
 get$pointerLockChange: function() {
  return this.operator$index$1('webkitpointerlockchange');
}
};

$$._FrozenCssClassSet = {"": [],
 "super": "CssClassSet",
 writeClasses$1: function(s) {
  throw $.$$throw($.UnsupportedError$('frozen class set cannot be modified'));
},
 readClasses$0: function() {
  return $.Set_Set();
}
};

$$._ChildrenElementList = {"": ["_liblib$_element>", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $._ListImpl_List(t3);
  for (len = t1.length, i = 0; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, t1) {
  var output, len, i, t2;
  output = $._ListImpl_List($.get$length(t1));
  for (len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    t2 = $.index(t1, i);
    if (i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 contains$1: function(element) {
  return $.contains$1(this._childElements, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this._childElements); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(f, output);
  for (t2 = $.iterator(this._childElements); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 get$isEmpty: function() {
  return this._liblib$_element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  return $.get$length(this._childElements);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 oprator$indexSet$2: function(index, value) {
  this._liblib$_element.$$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(''));
},
 add$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._liblib$_element; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 clear$0: function() {
  this._liblib$_element.set$text('');
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._liblib$_element.$$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._liblib$_element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"": ["_nodeList"],
 "super": "Object",
 contains$1: function(element) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = $.iterator(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(out).add$1(out, t2);
  }
  return out;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._nodeList);
},
 get$length: function() {
  return $.get$length(this._nodeList);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(''));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 lastIndexOf$2: function(element, start) {
  return $.lastIndexOf$2(this._nodeList, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 get$last: function() {
  return $.get$last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"": ["_liblib$_list", "_index"],
 "super": "Object",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._liblib$_list;
  t2 = this._index;
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  return $.lt(this._index, $.get$length(this._liblib$_list));
}
};

$$.AttributeMap = {"": [],
 "super": "Object",
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"": ["_liblib$_element>"],
 "super": "AttributeMap",
 containsKey$1: function(key) {
  return this._liblib$_element.$$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._liblib$_element.$$dom_getAttribute$1(key);
},
 oprator$indexSet$2: function(key, value) {
  this._liblib$_element.$$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._liblib$_element;
  value = t1.$$dom_getAttribute$1(key);
  t1.$$dom_removeAttribute$1(key);
  return value;
},
 clear$0: function() {
  var attributes, i;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.clear$0$bailout(1, attributes);
  for (i = attributes.length - 1; i >= 0; --i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
},
 clear$0$bailout: function(state0, attributes) {
  var i;
  for (i = $.sub($.get$length(attributes), 1); $.geB(i, 0); i = $.sub(i, 1))
    this.remove$1($.index(attributes, i).get$name());
},
 forEach$1: function(f) {
  var attributes, len, i, item;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.forEach$1$bailout(1, f, attributes);
  for (len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    item = attributes[i];
    f.call$2(item.get$name(), item.get$value());
  }
},
 forEach$1$bailout: function(state0, f, attributes) {
  var len, i, item;
  for (len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    item = $.index(attributes, i);
    f.call$2(item.get$name(), item.get$value());
  }
},
 get$keys: function() {
  var attributes, t2, keys, len, i, t1;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  t2 = attributes.length;
  keys = $._ListImpl_List(t2);
  for (len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    t1 = attributes[i].get$name();
    if (i >= t2)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 get$keys$bailout: function(state0, attributes) {
  var keys, len, i, t1;
  keys = $._ListImpl_List($.get$length(attributes));
  for (len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    t1 = $.index(attributes, i).get$name();
    if (i >= keys.length)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 get$values: function() {
  var attributes, t2, values, len, i, t1;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$values$bailout(1, attributes);
  t2 = attributes.length;
  values = $._ListImpl_List(t2);
  for (len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    t1 = attributes[i].get$value();
    if (i >= t2)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$values$bailout: function(state0, attributes) {
  var values, len, i, t1;
  values = $._ListImpl_List($.get$length(attributes));
  for (len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    t1 = $.index(attributes, i).get$value();
    if (i >= values.length)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$length: function() {
  return $.get$length(this._liblib$_element.get$$$dom_attributes());
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
}
};

$$._ElementCssClassSet = {"": ["_liblib$_element>"],
 "super": "CssClassSet",
 readClasses$0: function() {
  var s, classname, t1, t2, trimmed;
  s = $.Set_Set();
  classname = this._liblib$_element.get$$$dom_className();
  for (t1 = $.iterator($.getInterceptor(classname).split$1(classname, ' ')); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    trimmed = $.getInterceptor(t2).trim$0(t2);
    if ($.get$isEmpty(trimmed) !== true)
      $.getInterceptor(s).add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var t1 = $.Strings_join($._ListImpl_List$from(s), ' ');
  this._liblib$_element.set$$$dom_className(t1);
}
};

$$.ElementEvents = {"": ["_ptr"],
 "super": "Events",
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$dragEnter: function() {
  return this.operator$index$1('dragenter');
},
 get$dragLeave: function() {
  return this.operator$index$1('dragleave');
},
 get$dragOver: function() {
  return this.operator$index$1('dragover');
},
 get$drop: function() {
  return this.operator$index$1('drop');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$fullscreenChange: function() {
  return this.operator$index$1('webkitfullscreenchange');
}
};

$$.EventSourceEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.Events = {"": ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"": ["_ptr", "_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
}
};

$$.FileReaderEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
}
};

$$.FileWriterEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$write: function() {
  return this.operator$index$1('write');
},
 write$1: function(arg0) { return this.get$write().call$1(arg0); },
 get$writeEnd: function() {
  return this.operator$index$1('writeend');
}
};

$$.FrameSetElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$unload: function() {
  return this.operator$index$1('unload');
},
 unload$0: function() { return this.get$unload().call$0(); }
};

$$.HttpRequestEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
}
};

$$.HttpRequestUploadEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$loadEnd: function() {
  return this.operator$index$1('loadend');
}
};

$$.IDBDatabaseEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.IDBOpenDBRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.IDBRequestEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$success: function() {
  return this.operator$index$1('success');
}
};

$$.IDBTransactionEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); },
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.IDBVersionChangeRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.InputElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.LocalWindowEvents = {"": ["_ptr"],
 "super": "Events",
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$dragEnter: function() {
  return this.operator$index$1('dragenter');
},
 get$dragLeave: function() {
  return this.operator$index$1('dragleave');
},
 get$dragOver: function() {
  return this.operator$index$1('dragover');
},
 get$drop: function() {
  return this.operator$index$1('drop');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$unload: function() {
  return this.operator$index$1('unload');
},
 unload$0: function() { return this.get$unload().call$0(); }
};

$$.MediaElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$show: function() {
  return this.operator$index$1('show');
},
 show$0: function() { return this.get$show().call$0(); }
};

$$.MediaStreamEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MessagePortEvents = {"": ["_ptr"],
 "super": "Events"
};

$$._ChildNodeListLazy = {"": ["_this"],
 "super": "Object",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 oprator$indexSet$2: function(index, value) {
  this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"": [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._liblib$_list);
},
 contains$1: function(element) {
  return $.contains$1(this._liblib$_list, element);
},
 forEach$1: function(f) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).forEach$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._liblib$_list);
},
 get$length: function() {
  return $.get$length(this._liblib$_list);
},
 operator$index$1: function(index) {
  return $.index(this._liblib$_list, index);
},
 oprator$indexSet$2: function(index, value) {
  $.indexSet(this._liblib$_list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._liblib$_list, newLength);
},
 add$1: function(value) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).add$1(t1, value);
},
 addLast$1: function(value) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).addLast$1(t1, value);
},
 addAll$1: function(collection) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).addAll$1(t1, collection);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._liblib$_list, element, start);
},
 lastIndexOf$2: function(element, start) {
  return $.lastIndexOf$2(this._liblib$_list, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,0)
},
 clear$0: function() {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).clear$0(t1);
},
 removeLast$0: function() {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).removeLast$0(t1);
},
 get$last: function() {
  return $.get$last(this._liblib$_list);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"": ["_liblib$_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  var t1 = this._liblib$_list;
  return $._NodeListWrapper$($.getInterceptor(t1).filter$1(t1, f));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._liblib$_list;
  return $._NodeListWrapper$($.getInterceptor(t1).getRange$2(t1, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.NotificationEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1('error');
},
 get$show: function() {
  return this.operator$index$1('show');
},
 show$0: function() { return this.get$show().call$0(); }
};

$$.PeerConnection00Events = {"": ["_ptr"],
 "super": "Events",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.RTCDataChannelEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1('error');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.RTCPeerConnectionEvents = {"": ["_ptr"],
 "super": "Events",
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.ScriptProcessorNodeEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SharedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.SpeechRecognitionEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
},
 get$result: function() {
  return this.operator$index$1('result');
}
};

$$.TextTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackCueEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.WebSocketEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$error: function() {
  return this.operator$index$1('error');
},
 get$open: function() {
  return this.operator$index$1('open');
},
 open$3: function(arg0, arg1, arg2) { return this.get$open().call$3(arg0, arg1, arg2); }
};

$$.WorkerEvents = {"": ["_ptr"],
 "super": "AbstractWorkerEvents"
};

$$.WorkerContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$error: function() {
  return this.operator$index$1('error');
}
};

$$.CssClassSet = {"": [],
 "super": "Object",
 toString$0: function() {
  return $.Strings_join($._ListImpl_List$from(this.readClasses$0()), ' ');
},
 iterator$0: function() {
  return $.iterator(this.readClasses$0());
},
 forEach$1: function(f) {
  var t1 = this.readClasses$0();
  $.getInterceptor(t1).forEach$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this.readClasses$0());
},
 get$length: function() {
  return $.get$length(this.readClasses$0());
},
 contains$1: function(value) {
  return $.contains$1(this.readClasses$0(), value);
},
 add$1: function(value) {
  this._modify$1(new $.CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s, result;
  s = this.readClasses$0();
  result = s.remove$1(value);
  this.writeClasses$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $.CssClassSet_addAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $.CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this.readClasses$0();
  f.call$1(s);
  this.writeClasses$1(s);
},
 is$Collection: function() { return true; }
};

$$.FilteredElementList = {"": ["_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  var t1 = this._childNodes;
  return $._ListImpl_List$from($.getInterceptor(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor(t1).forEach$1(t1, f);
},
 oprator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$('Invalid list length'));
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor(t1).add$1(t1, value);
},
 get$add: function() { return new $.BoundClosure(this, 'add$1'); },
 addAll$1: function(collection) {
  $.getInterceptor(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor(t1).add$1(t1, value);
},
 contains$1: function(element) {
  return false;
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this.get$_filtered());
},
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $.lastIndexOf$2(this.get$_filtered(), element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return $.get$last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._DOMWindowCrossFrame = {"": ["_window"],
 "super": "Object",
 close$0: function() {
  return this._window.close();
}
};

$$.FixedSizeListIterator = {"": ["_liblib$_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._liblib$_length, this._pos);
}
};

$$._VariableSizeListIterator = {"": [],
 "super": "Object",
 get$hasNext: function() {
  return $.gt($.get$length(this._array), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
}
};

$$._Manager = {"": ["nextIsolateId=", "currentManagerId>", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop>", "fromCommandLine>", "isWorker>", "supportsWorkers", "isolates>", "mainManager>", "managers>"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  if ($.get$isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.Map_Map();
  this.managers = $.Map_Map();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"": ["id>", "ports>", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old, result, t1;
  old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  result = null;
  try {
    result = code.call$0();
  } finally {
    t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($._ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.get$isEmpty(this.ports) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1, t2;
  t1 = $._globalState();
  t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.Map_Map();
  this.initGlobals$0();
}
};

$$._EventLoop = {"": ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  var t1 = this.events;
  $.getInterceptor(t1).addLast$1(t1, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.get$isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.get$isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function(exception) {
  var t1, e, trace;
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"": ["isolate", "fn", "message"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"": [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"": ["_isolateId>"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($._ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer, port;
  completer = $.Completer_Completer();
  port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(completer, port));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"": ["_receivePort>", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(message, replyTo, this));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 get$hashCode: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"": ["_workerId>", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(replyTo, message, this));
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"": ["_id>", "_callback>"],
 "super": "Object",
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._callback = onMessage;
},
 close$0: function() {
  this._callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"": ["ports>", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.getInterceptor(list).forEach$1(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  var t1;
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  t1 = map.get$values();
  $.getInterceptor(t1).forEach$1(t1, new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  var t1;
  if (!!port.is$_BufferingSendPort && port._port == null) {
    t1 = this.ports;
    $.getInterceptor(t1).add$1(t1, port.get$_futurePort());
  }
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"": ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return ['sendport', x._workerId, x._isolateId, x._receivePortId];
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"": ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"": ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId, isolateId, receivePortId, isolate;
  managerId = $.index(x, 1);
  isolateId = $.index(x, 2);
  receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"": ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return object['__MessageTraverser__attached_info__'];
},
 oprator$indexSet$2: function(object, info) {
  var t1 = this.tagged;
  $.getInterceptor(t1).add$1(t1, object);
  object['__MessageTraverser__attached_info__'] = info;
},
 reset$0: function() {
  this.tagged = $._ListImpl_List(null);
},
 cleanup$0: function() {
  var length$, i;
  length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  i = 0;
  for (; i < length$; ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
}
};

$$._MessageTraverserVisitedMap = {"": [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 oprator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"": [],
 "super": "Object",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copy, len, i;
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = list.length;
  copy = $._ListImpl_List(len);
  $.indexSet(this._visited, list, copy);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, list) {
  var copy, len, i, t1;
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = $.get$length(list);
  copy = $._ListImpl_List(len);
  $.indexSet(this._visited, list, copy);
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1, t2;
  t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.Map_Map();
  $.indexSet(this._visited, map, t1.copy_10);
  $.getInterceptor(map).forEach$1(map, new $._Copier_visitMap_anon(t1, this));
  return t1.copy_10;
}
};

$$._Serializer = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.get$keys()), this._serializeList$1(map.get$values())];
},
 _serializeList$1: function(list) {
  var len, result, i;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  len = list.length;
  result = $._ListImpl_List(len);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, list) {
  var len, result, i, t1;
  len = $.get$length(list);
  result = $._ListImpl_List(len);
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"": [],
 "super": "Object",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._deserialized = $.HashMap_HashMap();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, dartList, id) {
  var len, i;
  $.indexSet(this._deserialized, id, dartList);
  len = $.get$length(dartList);
  for (i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map();
  id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map();
      id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      len = $.get$length(keys);
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"": ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon6(callback, this), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon5(callback, this), milliSeconds);
}
};

$$._Random = {"": [],
 "super": "Object",
 nextDouble$0: function() {
  return Math.random();
}
};

$$.JsonUnsupportedObjectError = {"": ["unsupportedObject", "cause"],
 "super": "Object",
 toString$0: function() {
  if (!(this.cause == null))
    return 'Calling toJson method on object failed.';
  else
    return 'Object toJson method returns non-serializable value.';
}
};

$$._JsonParser = {"": ["json", "length>", "position="],
 "super": "Object",
 parseToplevel$0: function() {
  var result = this.parseValue$0();
  if (!(this.token$0() == null))
    this.error$1('Junk at the end of JSON input');
  return result;
},
 parseValue$0: function() {
  var token = this.token$0();
  if (token == null)
    this.error$1('Nothing to parse');
  switch (token) {
    case 34:
      return this.parseString$0();
    case 45:
      return this.parseNumber$0();
    case 110:
      return this.expectKeyword$2('null', null);
    case 102:
      return this.expectKeyword$2('false', false);
    case 116:
      return this.expectKeyword$2('true', true);
    case 123:
      return this.parseObject$0();
    case 91:
      return this.parseList$0();
    default:
      this.error$1('Unexpected token');
  }
},
 expectKeyword$2: function(word, value) {
  var i;
  for (i = 0; i < word.length; ++i) {
    if (!$.eqB(this.char$0(), $.getInterceptor(word).charCodeAt$1(word, i)))
      this.error$1('Expected keyword \'' + word + '\'');
    this.position = $.add(this.position, 1);
  }
  return value;
},
 parseObject$0: function() {
  var object, key, t1;
  object = $.makeLiteralMap([]);
  if (typeof object !== 'object' || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
    return this.parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1('Expected \':\' when parsing object');
      this.position = $.add(this.position, 1);
      t1 = this.parseValue$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= object.length)
        throw $.ioore(key);
      object[key] = t1;
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1('Expected \'}\' at end of object');
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseObject$0$bailout: function(state0, object) {
  var key;
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1('Expected \':\' when parsing object');
      this.position = $.add(this.position, 1);
      $.indexSet(object, key, this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1('Expected \'}\' at end of object');
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 93)) {
    for (; true;) {
      $.getInterceptor(list).add$1(list, this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 93))
      this.error$1('Expected \']\' at end of list');
  }
  this.position = $.add(this.position, 1);
  return list;
},
 parseString$0: function(exception) {
  var charCodes, t1, t2, c, codeString;
  if (!$.eqB(this.token$0(), 34))
    this.error$1('Expected string literal');
  this.position = $.add(this.position, 1);
  charCodes = $._ListImpl_List(null);
  for (t1 = this.length, t2 = this.json; true;) {
    c = this.char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, t1))
        this.error$1('\\ at the end of input');
      switch (this.char$0()) {
        case 34:
          c = 34;
          break;
        case 92:
          c = 92;
          break;
        case 47:
          c = 47;
          break;
        case 98:
          c = 8;
          break;
        case 110:
          c = 10;
          break;
        case 114:
          c = 13;
          break;
        case 102:
          c = 12;
          break;
        case 116:
          c = 9;
          break;
        case 117:
          if ($.gtB($.add(this.position, 5), t1))
            this.error$1('Invalid unicode esacape sequence');
          codeString = $.getInterceptor(t2).substring$2(t2, $.add(this.position, 1), $.add(this.position, 5));
          try {
            c = $.int_parse('0x' + $.S(codeString));
          } catch (exception) {
            $.unwrapException(exception);
            this.error$1('Invalid unicode esacape sequence');
          }

          this.position = $.add(this.position, 4);
          break;
        default:
          this.error$1('Invalid esacape sequence in string literal');
      }
    }
    $.getInterceptor(charCodes).add$1(charCodes, c);
    this.position = $.add(this.position, 1);
  }
  return $.String_String$fromCharCodes(charCodes);
},
 parseNumber$0: function() {
  var startPos, char$, isInt, t1, number;
  if (!$.eqB(this.token$0(), 45))
    this.error$1('Expected number literal');
  startPos = this.position;
  char$ = this.char$0();
  if (char$ === 45)
    char$ = this.nextChar$0();
  if (char$ === 48)
    char$ = this.nextChar$0();
  else if ($.geB(char$, 48) && $.leB(char$, 57)) {
    char$ = this.nextChar$0();
    if (typeof char$ !== 'number')
      return this.parseNumber$0$bailout(1, startPos, char$);
    while (true) {
      if (!($.geB(char$, 48) && $.leB(char$, 57)))
        break;
      char$ = this.nextChar$0();
    }
  } else
    this.error$1('Expected digit when parsing number');
  if (char$ === 46) {
    char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(2, startPos, char$);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else {
      this.error$1('Expected digit following comma');
      isInt = true;
    }
  } else
    isInt = true;
  if (char$ === 101 || char$ === 69) {
    char$ = this.nextChar$0();
    if (char$ === 45 || char$ === 43)
      char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(3, char$, startPos);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else
      this.error$1('Expected digit following \'e\' or \'E\'');
  }
  t1 = this.json;
  number = $.getInterceptor(t1).substring$2(t1, startPos, this.position);
  if (isInt)
    return $.int_parse(number);
  else
    return $.double_parse(number);
},
 parseNumber$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      char$ = env1;
      startPos = env0;
      break;
    case 2:
      char$ = env1;
      startPos = env0;
      break;
    case 3:
      startPos = env1;
      char$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (!$.eqB(this.token$0(), 45))
        this.error$1('Expected number literal');
      startPos = this.position;
      char$ = this.char$0();
      if (char$ === 45)
        char$ = this.nextChar$0();
    case 1:
      if (state0 === 0 && char$ === 48)
        char$ = this.nextChar$0();
      else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 1 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 1:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
              }
            else
              this.error$1('Expected digit when parsing number');
        }
    case 2:
      if (state0 === 2 || state0 === 0 && char$ === 46)
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
          case 2:
            if (state0 === 2 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 2:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else {
              this.error$1('Expected digit following comma');
              isInt = true;
            }
        }
      else
        isInt = true;
    case 3:
      var startPos, char$, isInt, t1, number;
      if (state0 === 3 || state0 === 0 && (char$ === 101 || char$ === 69))
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
            if (char$ === 45 || char$ === 43)
              char$ = this.nextChar$0();
          case 3:
            if (state0 === 3 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 3:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else
              this.error$1('Expected digit following \'e\' or \'E\'');
        }
      t1 = this.json;
      number = $.getInterceptor(t1).substring$2(t1, startPos, this.position);
      if (isInt)
        return $.int_parse(number);
      else
        return $.double_parse(number);
  }
},
 char$0: function() {
  var t1, t3;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.char$0$bailout(1, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.char$0$bailout(2, t1, t3);
  if (t1 >= t3)
    this.error$1('Unexpected end of JSON stream');
  t1 = this.json;
  return $.getInterceptor(t1).charCodeAt$1(t1, this.position);
},
 char$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      t3 = this.length;
    case 2:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        this.error$1('Unexpected end of JSON stream');
      t1 = this.json;
      return $.getInterceptor(t1).charCodeAt$1(t1, this.position);
  }
},
 nextChar$0: function() {
  var t1, t3;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(1, t1);
  this.position = t1 + 1;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(2, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.nextChar$0$bailout(3, t1, t3);
  if (t1 >= t3)
    return 0;
  t1 = this.json;
  return $.getInterceptor(t1).charCodeAt$1(t1, this.position);
},
 nextChar$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      this.position = $.add(t1, 1);
      t1 = this.position;
    case 2:
      state0 = 0;
      t3 = this.length;
    case 3:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        return 0;
      t1 = this.json;
      return $.getInterceptor(t1).charCodeAt$1(t1, this.position);
  }
},
 token$0: function() {
  var t1, t2, t3, char$, token;
  t1 = this.json;
  t2 = this.length;
  if (typeof t2 !== 'number')
    return this.token$0$bailout(1, t2, t1);
  for (; true;) {
    t3 = this.position;
    if (typeof t3 !== 'number')
      return this.token$0$bailout(2, t3, t2, t1);
    if (t3 >= t2)
      return;
    char$ = $.getInterceptor(t1).charCodeAt$1(t1, this.position);
    t3 = $._JsonParser_tokens;
    if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
      return this.token$0$bailout(3, t2, char$, t1, t3);
    if (char$ !== (char$ | 0))
      throw $.iae(char$);
    if (char$ < 0 || char$ >= t3.length)
      throw $.ioore(char$);
    token = t3[char$];
    if (token === 32) {
      t3 = this.position;
      if (typeof t3 !== 'number')
        return this.token$0$bailout(4, t2, t1, t3);
      this.position = t3 + 1;
      continue;
    }
    if (token == null)
      return 0;
    return token;
  }
},
 token$0$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env2;
      t2 = env1;
      t3 = env0;
      break;
    case 3:
      t3 = env3;
      t1 = env2;
      char$ = env1;
      t2 = env0;
      break;
    case 4:
      t3 = env2;
      t1 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.json;
      t2 = this.length;
    case 1:
      state0 = 0;
    default:
      var t1, t2, t3, char$, token;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t3 = this.position;
                  case 2:
                    state0 = 0;
                    if ($.geB(t3, t2))
                      return;
                    char$ = $.getInterceptor(t1).charCodeAt$1(t1, this.position);
                    t3 = $._JsonParser_tokens;
                  case 3:
                    state0 = 0;
                    token = $.index(t3, char$);
                  case 4:
                    if (state0 === 4 || state0 === 0 && token === 32)
                      switch (state0) {
                        case 0:
                          t3 = this.position;
                        case 4:
                          state0 = 0;
                          this.position = $.add(t3, 1);
                          break c$0;
                      }
                    if (token == null)
                      return 0;
                    return token;
                }
              }
          }
  }
},
 error$1: function(message) {
  throw $.$$throw(message);
},
 get$error: function() { return new $.BoundClosure(this, 'error$1'); },
 _JsonParser$1: function(json) {
  if (!($._JsonParser_tokens == null))
    return;
  $._JsonParser_tokens = $._ListImpl_List(126);
  $.indexSet($._JsonParser_tokens, 9, 32);
  $.indexSet($._JsonParser_tokens, 10, 32);
  $.indexSet($._JsonParser_tokens, 13, 32);
  $.indexSet($._JsonParser_tokens, 32, 32);
  $.indexSet($._JsonParser_tokens, 48, 45);
  $.indexSet($._JsonParser_tokens, 49, 45);
  $.indexSet($._JsonParser_tokens, 50, 45);
  $.indexSet($._JsonParser_tokens, 51, 45);
  $.indexSet($._JsonParser_tokens, 52, 45);
  $.indexSet($._JsonParser_tokens, 53, 45);
  $.indexSet($._JsonParser_tokens, 54, 45);
  $.indexSet($._JsonParser_tokens, 55, 45);
  $.indexSet($._JsonParser_tokens, 56, 45);
  $.indexSet($._JsonParser_tokens, 57, 45);
  $.indexSet($._JsonParser_tokens, 45, 45);
  $.indexSet($._JsonParser_tokens, 123, 123);
  $.indexSet($._JsonParser_tokens, 125, 125);
  $.indexSet($._JsonParser_tokens, 91, 91);
  $.indexSet($._JsonParser_tokens, 93, 93);
  $.indexSet($._JsonParser_tokens, 34, 34);
  $.indexSet($._JsonParser_tokens, 58, 58);
  $.indexSet($._JsonParser_tokens, 44, 44);
  $.indexSet($._JsonParser_tokens, 110, 110);
  $.indexSet($._JsonParser_tokens, 116, 116);
  $.indexSet($._JsonParser_tokens, 102, 102);
}
};

$$._JsonStringifier = {"": ["sb>", "seen"],
 "super": "Object",
 checkCycle$1: function(object) {
  var t1, t2, i, t3;
  for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
    t3 = t1[i];
    if (t3 == null ? object == null : t3 === object)
      throw $.$$throw('Cyclic structure');
  }
  $.getInterceptor(t1).add$1(t1, object);
},
 stringifyValue$1: function(object, exception) {
  var customJson, t1, e;
  if (this.stringifyJsonValue$1(object) !== true) {
    this.checkCycle$1(object);
    try {
      customJson = object.toJson$0();
      if (this.stringifyJsonValue$1(customJson) !== true)
        throw $.$$throw($.JsonUnsupportedObjectError$(object));
      t1 = this.seen;
      $.getInterceptor(t1).removeLast$0(t1);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
    }

  }
},
 stringifyJsonValue$1: function(object) {
  var t1, t2, i;
  t1 = {};
  if (typeof object === 'number') {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, $.toString(object));
    return true;
  } else if (object === true) {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, 'true');
    return true;
  } else if (object === false) {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, 'false');
    return true;
  } else if (object == null) {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, 'null');
    return true;
  } else if (typeof object === 'string') {
    t1 = this.sb;
    $.getInterceptor(t1).add$1(t1, '"');
    $._JsonStringifier_escape(t1, object);
    $.getInterceptor(t1).add$1(t1, '"');
    return true;
  } else if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.stringifyJsonValue$1$bailout(1, object);
    this.checkCycle$1(object);
    t2 = this.sb;
    $.getInterceptor(t2).add$1(t2, '[');
    if (object.length > 0) {
      this.stringifyValue$1(object[0]);
      for (i = 1; i < object.length; ++i) {
        $.getInterceptor(t2).add$1(t2, ',');
        if (i >= object.length)
          throw $.ioore(i);
        this.stringifyValue$1(object[i]);
      }
    }
    $.getInterceptor(t2).add$1(t2, ']');
    t1 = this.seen;
    $.getInterceptor(t1).removeLast$0(t1);
    return true;
  } else if (typeof object === 'object' && object !== null && object.is$Map()) {
    this.checkCycle$1(object);
    t2 = this.sb;
    $.getInterceptor(t2).add$1(t2, '{');
    t1.first_10 = true;
    $.getInterceptor(object).forEach$1(object, new $._JsonStringifier_stringifyJsonValue_anon(this, t1));
    $.getInterceptor(t2).add$1(t2, '}');
    t2 = this.seen;
    $.getInterceptor(t2).removeLast$0(t2);
    return true;
  } else
    return false;
},
 stringifyJsonValue$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
    case 1:
      var t1, object, t2, i;
      if (state0 === 0 && typeof object === 'number') {
        t1 = this.sb;
        $.getInterceptor(t1).add$1(t1, $.toString(object));
        return true;
      } else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 0 && object === true) {
              t1 = this.sb;
              $.getInterceptor(t1).add$1(t1, 'true');
              return true;
            } else
              switch (state0) {
                case 0:
                case 1:
                  if (state0 === 0 && object === false) {
                    t1 = this.sb;
                    $.getInterceptor(t1).add$1(t1, 'false');
                    return true;
                  } else
                    switch (state0) {
                      case 0:
                      case 1:
                        if (state0 === 0 && object == null) {
                          t1 = this.sb;
                          $.getInterceptor(t1).add$1(t1, 'null');
                          return true;
                        } else
                          switch (state0) {
                            case 0:
                            case 1:
                              if (state0 === 0 && typeof object === 'string') {
                                t1 = this.sb;
                                $.getInterceptor(t1).add$1(t1, '"');
                                $._JsonStringifier_escape(t1, object);
                                $.getInterceptor(t1).add$1(t1, '"');
                                return true;
                              } else
                                switch (state0) {
                                  case 0:
                                  case 1:
                                    if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
                                      switch (state0) {
                                        case 0:
                                        case 1:
                                          state0 = 0;
                                          this.checkCycle$1(object);
                                          t2 = this.sb;
                                          $.getInterceptor(t2).add$1(t2, '[');
                                          if ($.gtB($.get$length(object), 0)) {
                                            this.stringifyValue$1($.index(object, 0));
                                            for (i = 1; $.ltB(i, $.get$length(object)); ++i) {
                                              $.getInterceptor(t2).add$1(t2, ',');
                                              this.stringifyValue$1($.index(object, i));
                                            }
                                          }
                                          $.getInterceptor(t2).add$1(t2, ']');
                                          t1 = this.seen;
                                          $.getInterceptor(t1).removeLast$0(t1);
                                          return true;
                                      }
                                    else if (typeof object === 'object' && object !== null && object.is$Map()) {
                                      this.checkCycle$1(object);
                                      t2 = this.sb;
                                      $.getInterceptor(t2).add$1(t2, '{');
                                      t1.first_10 = true;
                                      $.getInterceptor(object).forEach$1(object, new $._JsonStringifier_stringifyJsonValue_anon(this, t1));
                                      $.getInterceptor(t2).add$1(t2, '}');
                                      t2 = this.seen;
                                      $.getInterceptor(t2).removeLast$0(t2);
                                      return true;
                                    } else
                                      return false;
                                }
                          }
                    }
              }
        }
  }
}
};

$$._AttributeClassSet = {"": ["_liblib2$_element>"],
 "super": "CssClassSet",
 readClasses$0: function() {
  var classname, s, t1, t2, trimmed;
  classname = $.index(this._liblib2$_element.get$attributes(), 'class');
  s = $.Set_Set();
  if (classname == null)
    return s;
  for (t1 = $.iterator($.getInterceptor(classname).split$1(classname, ' ')); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    trimmed = $.getInterceptor(t2).trim$0(t2);
    if ($.get$isEmpty(trimmed) !== true)
      $.getInterceptor(s).add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list = $._ListImpl_List$from(s);
  $.indexSet(this._liblib2$_element.get$attributes(), 'class', $.Strings_join(list, ' '));
}
};

$$.SVGElementInstanceEvents = {"": ["_ptr"],
 "super": "Events",
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$dragEnter: function() {
  return this.operator$index$1('dragenter');
},
 get$dragLeave: function() {
  return this.operator$index$1('dragleave');
},
 get$dragOver: function() {
  return this.operator$index$1('dragover');
},
 get$drop: function() {
  return this.operator$index$1('drop');
},
 get$error: function() {
  return this.operator$index$1('error');
},
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$load: function() {
  return this.operator$index$1('load');
},
 load$1: function(arg0) { return this.get$load().call$1(arg0); },
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseOver: function() {
  return this.operator$index$1('mouseover');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$scroll: function() {
  return this.operator$index$1('scroll');
},
 get$unload: function() {
  return this.operator$index$1('unload');
},
 unload$0: function() { return this.get$unload().call$0(); }
};

$$.Camera = {"": ["position=", "upDirection", "focusPosition=", "zNear", "zFar", "aspectRatio<", "FOV"],
 "super": "Object",
 toString$0: function() {
  return $.S(this.position) + ' -> ' + $.S(this.focusPosition);
},
 get$projectionMatrix: function() {
  return $.makePerspective(this.FOV, this.aspectRatio, this.zNear, this.zFar);
},
 get$lookAtMatrix: function() {
  return $.makeLookAt(this.position, this.focusPosition, this.upDirection);
},
 copyProjectionMatrixIntoArray$1: function(pm) {
  $.makePerspective(this.FOV, this.aspectRatio, this.zNear, this.zFar).copyIntoArray$1(pm);
},
 copyNormalMatrixIntoArray$1: function(nm) {
  $.makeLookAt(this.position, this.focusPosition, this.upDirection).copyIntoArray$1(nm);
},
 get$frontDirection: function() {
  return $.sub(this.focusPosition, this.position).normalize$0();
},
 Camera$0: function() {
  this.position = $.vec3$raw(0, 0, 0);
  this.focusPosition = $.vec3$raw(0, 0, -1);
  this.upDirection = $.vec3$raw(0, 1, 0);
  this.FOV = 0.785398163;
  this.zNear = 1;
  this.zFar = 1000;
  this.aspectRatio = 1.7777778;
}
};

$$.CameraController = {"": [],
 "super": "Object"
};

$$.DeviceChild = {"": ["name>", "fallback>"],
 "super": "Object",
 set$dirty: function(r) {
  var t1, t2;
  t1 = r === true;
  t2 = this._liblib3$_status;
  if (t1)
    this._liblib3$_status = $.or(t2, 1);
  else
    this._liblib3$_status = $.and(t2, 4294967294);
},
 set$ready: function(r) {
  var t1, t2;
  t1 = r === true;
  t2 = this._liblib3$_status;
  if (t1)
    this._liblib3$_status = $.or(t2, 2);
  else
    this._liblib3$_status = $.and(t2, 4294967293);
},
 get$ready: function() {
  return !$.eqB($.and(this._liblib3$_status, 2), 0);
},
 get$hashCode: function() {
  return $.get$hashCode(this.name);
},
 _createDeviceState$0: function() {
},
 _configDeviceState$1: function(props) {
},
 DeviceChild$2: function(name$, device) {
  this._liblib3$_status = 0;
  this.fallback = 0;
  this.set$ready(true);
  this.set$dirty(false);
}
};

$$._InputLayoutElement = {"": ["_vboSlot>", "_vboOffset>", "_attributeIndex>", "_attributeStride>", "_attributeFormat>"],
 "super": "Object",
 toString$0: function() {
  return 'Attribute ' + $.S(this._attributeIndex) + ' bound to VBO: ' + $.S(this._vboSlot) + ' VBO_OFFSET: ' + $.S(this._vboOffset) + ' Attribute Stride: ' + $.S(this._attributeStride) + ' Format: ' + $.S(this._attributeFormat);
}
};

$$.InputLayout = {"": ["_maxAttributeIndex", "_liblib3$_elements>", "_elementDescription", "_shaderProgramHandle", "name", "device", "_liblib3$_status", "fallback"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
},
 _bind$0: function() {
  var t1, sp, t2, checker, t3, index, el, t4;
  t1 = this.device;
  sp = t1.getDeviceChild$1(this._shaderProgramHandle);
  t2 = this._elementDescription;
  if (t2 == null || $.leB($.get$length(t2), 0) || sp == null)
    return;
  checker = $._InputElementChecker$();
  this._maxAttributeIndex = -1;
  this._liblib3$_elements = $._ListImpl_List(null);
  for (t2 = $.iterator(this._elementDescription); t2.get$hasNext() === true;) {
    t3 = t2.next$0();
    $.getInterceptor(checker).add$1(checker, t3);
    index = t1.get$gl().getAttribLocation$2(sp.get$_program(), t3.get$name());
    if ($.eqB(index, -1)) {
      $.spectreLog.Warning$1('Can\'t find ' + $.S(t3.get$name()) + ' in ' + $.S(sp.get$name()));
      continue;
    }
    el = $._InputLayoutElement$();
    el._attributeIndex = index;
    if ($.gtB(index, this._maxAttributeIndex))
      this._maxAttributeIndex = index;
    el._attributeFormat = t3.get$format();
    el._vboOffset = t3.get$vertexBufferOffset();
    el._vboSlot = t3.get$vertexBufferSlot();
    el._attributeStride = t3.get$elementStride();
    t4 = this._liblib3$_elements;
    $.getInterceptor(t4).add$1(t4, el);
  }
},
 _configDeviceState$1: function(props) {
  var o = $.index(props, 'shaderProgram');
  if (!(o == null) && typeof o === 'number' && Math.floor(o) === o)
    this._shaderProgramHandle = o;
  o = $.index(props, 'elements');
  if (!(o == null) && typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()))
    this._elementDescription = o;
  this._bind$0();
},
 InputLayout$2: function(name$, device) {
  this._maxAttributeIndex = 0;
  this._liblib3$_elements = null;
  this._shaderProgramHandle = 0;
  this._elementDescription = null;
}
};

$$.Viewport = {"": ["x=", "y=", "width=", "height=", "name", "device", "_liblib3$_status", "fallback"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
},
 _configDeviceState$1: function(props) {
  var o;
  if (!(props == null)) {
    o = $.index(props, 'x');
    this.x = !(o == null) ? o : this.x;
    o = $.index(props, 'y');
    this.y = !(o == null) ? o : this.y;
    o = $.index(props, 'width');
    this.width = !(o == null) ? o : this.width;
    o = $.index(props, 'height');
    this.height = !(o == null) ? o : this.height;
  }
},
 Viewport$2: function(name$, device) {
  this.x = 0;
  this.y = 0;
  this.width = 640;
  this.height = 480;
}
};

$$.BlendState = {"": ["blendColorRed>", "blendColorGreen>", "blendColorBlue>", "blendColorAlpha>", "blendEnable>", "blendSourceColorFunc>", "blendDestColorFunc>", "blendSourceAlphaFunc>", "blendDestAlphaFunc>", "blendColorOp>", "blendAlphaOp>", "writeRenderTargetRed>", "writeRenderTargetGreen>", "writeRenderTargetBlue>", "writeRenderTargetAlpha>", "name", "device", "_liblib3$_status", "fallback"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
},
 filter$1: function(o) {
  if (typeof o === 'string')
    return $.index($.makeLiteralMap(['BlendSourceZero', 0, 'BlendSourceOne', 1, 'BlendSourceShaderColor', 768, 'BlendSourceShaderInverseColor', 769, 'BlendSourceShaderAlpha', 770, 'BlendSourceShaderInverseAlpha', 771, 'BlendSourceTargetColor', 774, 'BlendSourceTargetInverseColor', 775, 'BlendSourceTargetAlpha', 772, 'BlendSourceTargetInverseAlpha', 773, 'BlendSourceBlendColor', 32769, 'BlendSourceBlendAlpha', 32771, 'BlendSourceBlendInverseColor', 32770, 'BlendSourceBlendInverseAlpha', 32772, 'BlendOpAdd', 32774, 'BlendOpSubtract', 32778, 'BlendOpReverseSubtract', 32779]), o);
  return o;
},
 _configDeviceState$1: function(props) {
  var o;
  if (!(props == null)) {
    o = $.index(props, 'blendColorRed');
    this.blendColorRed = !(o == null) ? this.filter$1(o) : this.blendColorRed;
    o = $.index(props, 'blendColorGreen');
    this.blendColorGreen = !(o == null) ? this.filter$1(o) : this.blendColorGreen;
    o = $.index(props, 'blendColorBlue');
    this.blendColorBlue = !(o == null) ? this.filter$1(o) : this.blendColorBlue;
    o = $.index(props, 'blendColorAlpha');
    this.blendColorAlpha = !(o == null) ? this.filter$1(o) : this.blendColorAlpha;
    o = $.index(props, 'blendEnable');
    this.blendEnable = !(o == null) ? this.filter$1(o) : this.blendEnable;
    o = $.index(props, 'blendSourceColorFunc');
    this.blendSourceColorFunc = !(o == null) ? this.filter$1(o) : this.blendSourceColorFunc;
    o = $.index(props, 'blendDestColorFunc');
    this.blendDestColorFunc = !(o == null) ? this.filter$1(o) : this.blendDestColorFunc;
    o = $.index(props, 'blendSourceAlphaFunc');
    this.blendSourceAlphaFunc = !(o == null) ? this.filter$1(o) : this.blendSourceAlphaFunc;
    o = $.index(props, 'blendDestAlphaFunc');
    this.blendDestAlphaFunc = !(o == null) ? this.filter$1(o) : this.blendDestAlphaFunc;
    o = $.index(props, 'blendColorOp');
    this.blendColorOp = !(o == null) ? this.filter$1(o) : this.blendColorOp;
    o = $.index(props, 'blendAlphaOp');
    this.blendAlphaOp = !(o == null) ? this.filter$1(o) : this.blendAlphaOp;
    o = $.index(props, 'writeRenderTargetRed');
    this.writeRenderTargetRed = !(o == null) ? this.filter$1(o) : this.writeRenderTargetRed;
    o = $.index(props, 'writeRenderTargetGreen');
    this.writeRenderTargetGreen = !(o == null) ? this.filter$1(o) : this.writeRenderTargetGreen;
    o = $.index(props, 'writeRenderTargetBlue');
    this.writeRenderTargetBlue = !(o == null) ? this.filter$1(o) : this.writeRenderTargetBlue;
    o = $.index(props, 'writeRenderTargetAlpha');
    this.writeRenderTargetAlpha = !(o == null) ? this.filter$1(o) : this.writeRenderTargetAlpha;
  }
},
 BlendState$2: function(name$, device) {
  this.blendColorRed = 1;
  this.blendColorGreen = 1;
  this.blendColorBlue = 1;
  this.blendColorAlpha = 1;
  this.blendEnable = false;
  this.blendSourceColorFunc = 1;
  this.blendDestColorFunc = 0;
  this.blendSourceAlphaFunc = 1;
  this.blendDestAlphaFunc = 0;
  this.blendColorOp = 32774;
  this.blendAlphaOp = 32774;
  this.writeRenderTargetRed = true;
  this.writeRenderTargetGreen = true;
  this.writeRenderTargetBlue = true;
  this.writeRenderTargetAlpha = true;
}
};

$$.DepthState = {"": ["depthTestEnabled>", "depthWriteEnabled>", "polygonOffsetEnabled>", "depthNearVal>", "depthFarVal>", "polygonOffsetFactor>", "polygonOffsetUnits>", "depthComparisonOp>", "name", "device", "_liblib3$_status", "fallback"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
},
 filter$1: function(o) {
  if (typeof o === 'string')
    return $.index($.makeLiteralMap(['DepthComparisonOpNever', 512, 'DepthComparisonOpAlways', 519, 'DepthComparisonOpEqual', 514, 'DepthComparisonOpNotEqual', 517, 'DepthComparisonOpLess', 513, 'DepthComparisonOpLessEqual', 515, 'DepthComparisonOpGreaterEqual', 518, 'DepthComparisonOpGreater', 516]), o);
  return o;
},
 _configDeviceState$1: function(props) {
  var o;
  if (!(props == null)) {
    o = $.index(props, 'depthTestEnabled');
    this.depthTestEnabled = !(o == null) ? this.filter$1(o) : this.depthTestEnabled;
    o = $.index(props, 'depthWriteEnabled');
    this.depthWriteEnabled = !(o == null) ? this.filter$1(o) : this.depthWriteEnabled;
    o = $.index(props, 'polygonOffsetEnabled');
    this.polygonOffsetEnabled = !(o == null) ? this.filter$1(o) : this.polygonOffsetEnabled;
    o = $.index(props, 'depthNearVal');
    this.depthNearVal = !(o == null) ? this.filter$1(o) : this.depthNearVal;
    o = $.index(props, 'depthFarVal');
    this.depthFarVal = !(o == null) ? this.filter$1(o) : this.depthFarVal;
    o = $.index(props, 'polygonOffsetFactor');
    this.polygonOffsetFactor = !(o == null) ? this.filter$1(o) : this.polygonOffsetFactor;
    o = $.index(props, 'polygonOffsetUnits');
    this.polygonOffsetUnits = !(o == null) ? this.filter$1(o) : this.polygonOffsetUnits;
    o = $.index(props, 'depthComparisonOp');
    this.depthComparisonOp = !(o == null) ? this.filter$1(o) : this.depthComparisonOp;
  }
},
 DepthState$2: function(name$, device) {
  this.depthTestEnabled = false;
  this.depthWriteEnabled = false;
  this.polygonOffsetEnabled = false;
  this.depthNearVal = 0;
  this.depthFarVal = 1;
  this.polygonOffsetFactor = 0;
  this.polygonOffsetUnits = 0;
  this.depthComparisonOp = 519;
}
};

$$.RasterizerState = {"": ["cullEnabled>", "cullMode>", "cullFrontFace>", "lineWidth>", "name", "device", "_liblib3$_status", "fallback"],
 "super": "DeviceChild",
 lineWidth$1: function(arg0) { return this.lineWidth.call$1(arg0); },
 _createDeviceState$0: function() {
},
 filter$1: function(o) {
  if (typeof o === 'string')
    return $.index($.makeLiteralMap(['CullFront', 1028, 'CullBack', 1029, 'CullFrontAndBack', 1032, 'FrontCW', 2304, 'FrontCCW', 2305]), o);
  return o;
},
 _configDeviceState$1: function(props) {
  var o;
  if (!(props == null)) {
    o = $.index(props, 'cullEnabled');
    this.cullEnabled = !(o == null) ? this.filter$1(o) : this.cullEnabled;
    o = $.index(props, 'cullMode');
    this.cullMode = !(o == null) ? this.filter$1(o) : this.cullMode;
    o = $.index(props, 'cullFrontFace');
    this.cullFrontFace = !(o == null) ? this.filter$1(o) : this.cullFrontFace;
    o = $.index(props, 'lineWidth');
    this.lineWidth = !(o == null) ? this.filter$1(o) : this.lineWidth;
  }
},
 RasterizerState$2: function(name$, device) {
  this.cullEnabled = false;
  this.cullMode = 1029;
  this.cullFrontFace = 2305;
  this.lineWidth = 1;
}
};

$$.Shader = {"": ["_liblib3$_source>", "_shader>"],
 "super": "DeviceChild",
 get$log: function() {
  return this.device.get$gl().getShaderInfoLog$1(this._shader);
},
 set$source: function(s) {
  this._liblib3$_source = s;
  this.device.get$gl().shaderSource$2(this._shader, this._liblib3$_source);
},
 get$source: function() {
  return this._liblib3$_source;
},
 get$compiled: function() {
  if (!(this._shader == null))
    return this.device.get$gl().getShaderParameter$2(this._shader, 35713);
  return false;
},
 compile$0: function() {
  this.device.get$gl().compileShader$1(this._shader);
},
 _createDeviceState$0: function() {
  this._shader = this.device.get$gl().createShader$1(this._liblib3$_type);
},
 _configDeviceState$1: function(props) {
},
 Shader$2: function(name$, device) {
  this._liblib3$_source = '';
  this._shader = null;
}
};

$$.VertexShader = {"": ["_liblib3$_source", "_shader", "_liblib3$_type", "name", "device", "_liblib3$_status", "fallback"],
 "super": "Shader",
 _createDeviceState$0: function() {
  $.Shader.prototype._createDeviceState$0.call(this);
},
 _configDeviceState$1: function(props) {
  $.Shader.prototype._configDeviceState$1.call(this, props);
},
 VertexShader$2: function(name$, device) {
  this._liblib3$_type = 35633;
}
};

$$.FragmentShader = {"": ["_liblib3$_source", "_shader", "_liblib3$_type", "name", "device", "_liblib3$_status", "fallback"],
 "super": "Shader",
 _createDeviceState$0: function() {
  $.Shader.prototype._createDeviceState$0.call(this);
},
 _configDeviceState$1: function(props) {
  $.Shader.prototype._configDeviceState$1.call(this, props);
},
 FragmentShader$2: function(name$, device) {
  this._liblib3$_type = 35632;
}
};

$$.ShaderProgram = {"": ["vertexShaderHandle", "fragmentShaderHandle", "_program>", "numAttributes", "numUniforms", "name", "device", "_liblib3$_status", "fallback"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
  this._program = this.device.get$gl().createProgram$0();
},
 _detach$1: function(shaderHandle) {
  var t1, shader;
  t1 = this.device;
  shader = t1.getDeviceChild$1(shaderHandle);
  if (!(shader == null))
    t1.get$gl().detachShader$2(this._program, shader.get$_shader());
},
 _attach$1: function(shaderHandle) {
  var t1, shader;
  t1 = this.device;
  shader = t1.getDeviceChild$1(shaderHandle);
  if (!(shader == null))
    t1.get$gl().attachShader$2(this._program, shader.get$_shader());
},
 _configDeviceState$1: function(props) {
  var o, t1, vertexShader, fragmentShader;
  if (!(props == null)) {
    o = $.index(props, 'VertexProgram');
    if (!(o == null) && typeof o === 'number' && Math.floor(o) === o) {
      this._detach$1(this.vertexShaderHandle);
      this.vertexShaderHandle = o;
      this._attach$1(this.vertexShaderHandle);
    }
    o = $.index(props, 'FragmentProgram');
    if (!(o == null) && typeof o === 'number' && Math.floor(o) === o) {
      this._detach$1(this.fragmentShaderHandle);
      this.fragmentShaderHandle = o;
      this._attach$1(this.fragmentShaderHandle);
    }
    t1 = this.device;
    vertexShader = t1.getDeviceChild$1(this.vertexShaderHandle);
    fragmentShader = t1.getDeviceChild$1(this.fragmentShaderHandle);
    if (!(vertexShader == null) && !(fragmentShader == null))
      this.link$0();
  }
},
 link$0: function() {
  var t1, linkLog;
  t1 = this.device;
  t1.get$gl().linkProgram$1(this._program);
  linkLog = t1.get$gl().getProgramInfoLog$1(this._program);
  $.spectreLog.Info$1('Linked ' + this.name + ' - ' + $.S(linkLog));
  this.refreshUniforms$0();
  this.refreshAttributes$0();
},
 get$linked: function() {
  if (!(this._program == null))
    return this.device.get$gl().getProgramParameter$2(this._program, 35714);
  return false;
},
 refreshUniforms$0: function() {
  var t1, i, activeUniform;
  t1 = this.device;
  this.numUniforms = t1.get$gl().getProgramParameter$2(this._program, 35718);
  $.spectreLog.Info$1(this.name + ' has ' + $.S(this.numUniforms) + ' uniform variables');
  for (i = 0; $.ltB(i, this.numUniforms); ++i) {
    activeUniform = t1.get$gl().getActiveUniform$2(this._program, i);
    $.spectreLog.Info$1($.S(i) + ' - ' + $.UniformType_serialize(activeUniform.get$type()) + ' ' + $.S(activeUniform.get$name()) + ' (' + $.S(activeUniform.get$size()) + ')');
  }
},
 refreshAttributes$0: function() {
  var t1, i, activeUniform;
  t1 = this.device;
  this.numAttributes = t1.get$gl().getProgramParameter$2(this._program, 35721);
  $.spectreLog.Info$1(this.name + ' has ' + $.S(this.numAttributes) + ' attributes');
  for (i = 0; $.ltB(i, this.numAttributes); ++i) {
    activeUniform = t1.get$gl().getActiveAttrib$2(this._program, i);
    $.spectreLog.Info$1($.S(i) + ' - ' + $.UniformType_serialize(activeUniform.get$type()) + ' ' + $.S(activeUniform.get$name()) + ' (' + $.S(activeUniform.get$size()) + ')');
  }
},
 forEachUniforms$1: function(callback) {
  var t1, i, activeUniform, location$;
  t1 = this.device;
  this.numUniforms = t1.get$gl().getProgramParameter$2(this._program, 35718);
  for (i = 0; $.ltB(i, this.numUniforms); ++i) {
    activeUniform = t1.get$gl().getActiveUniform$2(this._program, i);
    location$ = t1.get$gl().getUniformLocation$2(this._program, activeUniform.get$name());
    callback.call$5(activeUniform.get$name(), i, $.UniformType_serialize(activeUniform.get$type()), activeUniform.get$size(), location$);
  }
},
 ShaderProgram$2: function(name$, device) {
  this.vertexShaderHandle = 0;
  this.fragmentShaderHandle = 0;
  this.numUniforms = 0;
  this.numAttributes = 0;
  this._program = null;
}
};

$$.Texture = {"": ["_target>", "_target_param>", "_textureFormat>", "_pixelFormat>", "_liblib3$_buffer>"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
  this._liblib3$_buffer = this.device.get$gl().createTexture$0();
},
 _configDeviceState$1: function(props) {
}
};

$$.Texture2D = {"": ["_target", "_target_param", "_width", "_height", "_textureFormat", "_pixelFormat", "_liblib3$_buffer", "name", "device", "_liblib3$_status", "fallback"],
 "super": "Texture",
 _createDeviceState$0: function() {
  $.Texture.prototype._createDeviceState$0.call(this);
},
 _configDeviceState$1: function(props) {
  var t1, pixels, oldBind, t2, t3, t4;
  $.Texture.prototype._configDeviceState$1.call(this, props);
  t1 = !(props == null);
  if (t1 && !($.index(props, 'pixels') == null)) {
    pixels = $.index(props, 'pixels');
    if (typeof pixels === 'object' && pixels !== null && pixels.is$CanvasElement()) {
      t1 = this.device;
      oldBind = t1.get$gl().getParameter$1(this._target_param);
      t1.get$gl().bindTexture$2(this._target, this._liblib3$_buffer);
      t2 = t1.get$gl();
      t3 = this._textureFormat;
      t2.texImage2D$6(3553, 0, t3, t3, this._pixelFormat, pixels);
      t1.get$gl().bindTexture$2(this._target, oldBind);
    }
  } else {
    if (t1) {
      this._width = !($.index(props, 'width') == null) ? $.index(props, 'width') : this._width;
      this._height = !($.index(props, 'height') == null) ? $.index(props, 'height') : this._height;
      this._textureFormat = !($.index(props, 'textureFormat') == null) ? $.index(props, 'textureFormat') : this._textureFormat;
      this._pixelFormat = !($.index(props, 'pixelFormat') == null) ? $.index(props, 'pixelFormat') : this._pixelFormat;
    }
    t1 = this.device;
    oldBind = t1.get$gl().getParameter$1(this._target_param);
    t1.get$gl().bindTexture$2(this._target, this._liblib3$_buffer);
    t1.get$gl().pixelStorei$2(37440, 1);
    t2 = t1.get$gl();
    t3 = this._target;
    t4 = this._textureFormat;
    t2.texImage2D$9(t3, 0, t4, this._width, this._height, 0, t4, this._pixelFormat, null);
    t1.get$gl().bindTexture$2(this._target, oldBind);
  }
},
 Texture2D$2: function(name$, device) {
  this._target = 3553;
  this._target_param = 32873;
  this._width = 1;
  this._height = 1;
  this._textureFormat = 6408;
  this._pixelFormat = 5121;
}
};

$$.SamplerState = {"": ["_liblib3$_wrapS>", "_liblib3$_wrapT>", "_liblib3$_magFilter>", "_liblib3$_minFilter>", "name", "device", "_liblib3$_status", "fallback"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
  $.DeviceChild.prototype._createDeviceState$0.call(this);
},
 filter$1: function(o) {
  if (typeof o === 'string')
    return $.index($.makeLiteralMap(['TextureWrapClampToEdge', 33071, 'TextureWrapMirroredRepeat', 33648, 'TextureWrapRepeat', 10497, 'TextureMagFilterLinear', 9729, 'TextureMagFilterNearest', 9728, 'TextureMinFilterLinear', 9729, 'TextureMinFilterNearest', 9728, 'TextureMinFilterNearestMipmapNearest', 9984, 'TextureMinFilterNearestMipmapLinear', 9986, 'TextureMinFilterLinearMipmapNearest', 9985, 'TextureMinFilterLinearMipmapLinear', 9987]), o);
  return o;
},
 _configDeviceState$1: function(props) {
  var o;
  if (!(props == null)) {
    o = $.index(props, 'wrapS');
    this._liblib3$_wrapS = !(o == null) ? this.filter$1(o) : this._liblib3$_wrapS;
    o = $.index(props, 'wrapT');
    this._liblib3$_wrapT = !(o == null) ? this.filter$1(o) : this._liblib3$_wrapT;
    o = $.index(props, 'minFilter');
    this._liblib3$_minFilter = !(o == null) ? this.filter$1(o) : this._liblib3$_minFilter;
    o = $.index(props, 'magFilter');
    this._liblib3$_magFilter = !(o == null) ? this.filter$1(o) : this._liblib3$_magFilter;
  }
},
 SamplerState$2: function(name$, device) {
  this._liblib3$_wrapS = 10497;
  this._liblib3$_wrapT = 10497;
  this._liblib3$_minFilter = 9986;
  this._liblib3$_magFilter = 9729;
}
};

$$.SpectreBuffer = {"": ["_liblib3$_buffer>", "_target>"],
 "super": "DeviceChild",
 _createDeviceState$0: function() {
  $.DeviceChild.prototype._createDeviceState$0.call(this);
  this._liblib3$_buffer = this.device.get$gl().createBuffer$0();
  this._usage = 35048;
},
 _configDeviceState$1: function(props) {
  var o;
  $.DeviceChild.prototype._configDeviceState$1.call(this, props);
  if (!(props == null)) {
    o = $.index(props, 'usage');
    if (!(o == null) && typeof o === 'string')
      switch (o) {
        case 'stream':
          this._usage = 35040;
          break;
        case 'dynamic':
          this._usage = 35048;
          break;
        case 'static':
          this._usage = 35044;
          break;
        default:
          $.spectreLog.Error$1($.S(o) + ' is not a valid buffer usage type');
          break;
      }
  }
},
 SpectreBuffer$2: function(name$, device) {
  this._liblib3$_buffer = null;
},
 is$SpectreBuffer: true
};

$$.IndexBuffer = {"": ["_liblib3$_buffer", "_target", "_param_target", "_usage", "name", "device", "_liblib3$_status", "fallback"],
 "super": "SpectreBuffer",
 _createDeviceState$0: function() {
  $.SpectreBuffer.prototype._createDeviceState$0.call(this);
},
 _configDeviceState$1: function(props) {
  $.SpectreBuffer.prototype._configDeviceState$1.call(this, props);
},
 IndexBuffer$2: function(name$, device) {
  this._target = 34963;
  this._param_target = 34965;
}
};

$$.VertexBuffer = {"": ["_liblib3$_buffer", "_target", "_param_target", "_usage", "name", "device", "_liblib3$_status", "fallback"],
 "super": "SpectreBuffer",
 _createDeviceState$0: function() {
  $.SpectreBuffer.prototype._createDeviceState$0.call(this);
},
 _configDeviceState$1: function(props) {
  $.SpectreBuffer.prototype._configDeviceState$1.call(this, props);
},
 VertexBuffer$2: function(name$, device) {
  this._target = 34962;
  this._param_target = 34964;
}
};

$$.GraphicsContext = {"": ["_device", "_primitiveTopology", "_indexBufferHandle", "_vertexBufferHandles", "_enabledVertexAttributeArrays", "_inputLayoutHandle", "_preparedInputLayoutHandle", "_shaderProgramHandle", "_samplerStateHandles", "_textureHandles", "_rasterizerStateHandle", "_viewportHandle", "_blendStateHandle", "_depthStateHandle", "_stencilStateHandle", "_renderTargetHandle"],
 "super": "Object",
 _logVertexAttributes$1: function(index) {
  var enabled, size, stride, type, normalized, binding;
  enabled = this._device.get$gl().getVertexAttrib$2(index, 34338);
  size = this._device.get$gl().getVertexAttrib$2(index, 34339);
  stride = this._device.get$gl().getVertexAttrib$2(index, 34340);
  type = this._device.get$gl().getVertexAttrib$2(index, 34341);
  normalized = this._device.get$gl().getVertexAttrib$2(index, 34922);
  binding = this._device.get$gl().getVertexAttrib$2(index, 34975);
  $.spectreLog.Info$1('Vertex Attribute ' + $.S(index) + ' ' + $.S(enabled) + ' ' + $.S(size) + ' ' + $.S(stride) + ' ' + $.S(type) + ' ' + $.S(normalized) + ' ' + $.S(binding));
},
 _prepareInputs$1: function(debug) {
  var inputLayout, t1, t2, t3, t4, t5, t6, vb, indexBuffer;
  if ($.eqB(this._inputLayoutHandle, 0)) {
    $.spectreLog.Error$1('Prepare for draw no input layout');
    return;
  }
  inputLayout = this._device.getDeviceChild$1(this._inputLayoutHandle);
  if (inputLayout == null) {
    $.spectreLog.Error$1('Prepare for draw no input layout.');
    return;
  }
  if ($.eqB(this._preparedInputLayoutHandle, this._inputLayoutHandle))
    return;
  this._preparedInputLayoutHandle = this._inputLayoutHandle;
  for (t1 = $.iterator(this._enabledVertexAttributeArrays); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.eqB(t2, 0))
      continue;
    this._device.get$gl().disableVertexAttribArray$1(t2);
  }
  t1 = this._enabledVertexAttributeArrays;
  $.getInterceptor(t1).clear$0(t1);
  t1 = inputLayout.get$_liblib3$_elements();
  if (t1 == null)
    return;
  for (t1 = $.iterator(t1), t2 = debug === true; t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t4 = this._device;
    t5 = this._vertexBufferHandles;
    t6 = t3.get$_vboSlot();
    if (t6 !== (t6 | 0))
      throw $.iae(t6);
    if (t6 < 0 || t6 >= t5.length)
      throw $.ioore(t6);
    vb = t4.getDeviceChild$1(t5[t6]);
    if (vb == null) {
      $.spectreLog.Error$1('Prepare for draw referenced a null vertex buffer object');
      continue;
    }
    this._device.get$gl().enableVertexAttribArray$1(t3.get$_attributeIndex());
    this._device.get$gl().bindBuffer$2(vb.get$_target(), vb.get$_liblib3$_buffer());
    t4 = this._device.get$gl();
    t5 = t3.get$_attributeIndex();
    t6 = t3.get$_attributeFormat();
    t4.vertexAttribPointer$6(t5, t6.get$count(), t6.get$type(), t6.get$normalized(), t3.get$_attributeStride(), t3.get$_vboOffset());
    t5 = this._enabledVertexAttributeArrays;
    $.getInterceptor(t5).add$1(t5, t3.get$_attributeIndex());
    if (t2)
      this._logVertexAttributes$1(t3.get$_attributeIndex());
  }
  t1 = !$.eqB(this._indexBufferHandle, 0);
  t3 = this._device;
  if (t1) {
    indexBuffer = t3.getDeviceChild$1(this._indexBufferHandle);
    this._device.get$gl().bindBuffer$2(indexBuffer.get$_target(), indexBuffer.get$_liblib3$_buffer());
    if (t2)
      $.print('Binding index buffer');
  } else {
    t3.get$gl().bindBuffer$2(34963, null);
    if (t2)
      $.print('No index buffer');
  }
},
 _prepareInputs$0: function() {
  return this._prepareInputs$1(false)
},
 _prepareTextures$0: function() {
  var i, t1, t2, s, t3, t;
  for (i = 0; i < 16; ++i) {
    t1 = this._device;
    t2 = this._samplerStateHandles;
    if (i >= t2.length)
      throw $.ioore(i);
    s = t1.getDeviceChild$1(t2[i]);
    t1 = this._device;
    t3 = this._textureHandles;
    if (i >= t3.length)
      throw $.ioore(i);
    t = t1.getDeviceChild$1(t3[i]);
    if (s == null || t == null)
      continue;
    this._device.get$gl().activeTexture$1(33984 + i);
    this._device.get$gl().bindTexture$2(t.get$_target(), t.get$_liblib3$_buffer());
    this._device.get$gl().texParameteri$3(t.get$_target(), 10242, s.get$_liblib3$_wrapS());
    this._device.get$gl().texParameteri$3(t.get$_target(), 10243, s.get$_liblib3$_wrapT());
    this._device.get$gl().texParameteri$3(t.get$_target(), 10241, s.get$_liblib3$_minFilter());
    this._device.get$gl().texParameteri$3(t.get$_target(), 10240, s.get$_liblib3$_magFilter());
  }
},
 reset$0: function() {
  var t1, t2, i, t3, t4;
  this._primitiveTopology = 0;
  for (t1 = $.iterator(this._enabledVertexAttributeArrays); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.eqB(t2, 0))
      continue;
    this._device.get$gl().disableVertexAttribArray$1(t2);
  }
  this._preparedInputLayoutHandle = 0;
  t1 = this._enabledVertexAttributeArrays;
  $.getInterceptor(t1).clear$0(t1);
  this._indexBufferHandle = 0;
  for (t1 = this._vertexBufferHandles, t2 = t1.length, i = 0; i < 2; ++i) {
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = 0;
  }
  this._inputLayoutHandle = 0;
  this._shaderProgramHandle = 0;
  for (t1 = this._samplerStateHandles, t2 = t1.length, t3 = this._textureHandles, t4 = t3.length, i = 0; i < 16; ++i) {
    if (i >= t2)
      throw $.ioore(i);
    t1[i] = 0;
    if (i >= t4)
      throw $.ioore(i);
    t3[i] = 0;
  }
  this._rasterizerStateHandle = 0;
  this._viewportHandle = 0;
  this._blendStateHandle = 0;
  this._depthStateHandle = 0;
  this._stencilStateHandle = 0;
  this._renderTargetHandle = 0;
},
 setPrimitiveTopology$1: function(topology) {
  this._primitiveTopology = topology;
},
 setIndexBuffer$1: function(indexBufferHandle) {
  this._indexBufferHandle = indexBufferHandle;
},
 setVertexBuffers$2: function(startSlot, vertexBufferHandles) {
  var t1, limit, t2, t3, i, t4;
  t1 = vertexBufferHandles.length;
  limit = t1 + startSlot;
  for (t2 = this._vertexBufferHandles, t3 = t2.length, i = startSlot; i < limit; ++i) {
    t4 = i - startSlot;
    if (t4 >= t1)
      throw $.ioore(t4);
    t4 = vertexBufferHandles[t4];
    if (i < 0)
      throw $.ioore(i);
    t2[i] = t4;
  }
},
 setInputLayout$1: function(inputLayoutHandle) {
  this._inputLayoutHandle = inputLayoutHandle;
},
 setShaderProgram$1: function(shaderProgramHandle) {
  var sp;
  if ($.eqB(this._shaderProgramHandle, shaderProgramHandle))
    return;
  this._shaderProgramHandle = shaderProgramHandle;
  sp = this._device.getDeviceChild$1(shaderProgramHandle);
  this._device.get$gl().useProgram$1(sp.get$_program());
},
 setRasterizerState$1: function(rasterizerStateHandle) {
  var rs, t1, t2;
  if ($.eqB(this._rasterizerStateHandle, rasterizerStateHandle))
    return;
  this._rasterizerStateHandle = rasterizerStateHandle;
  rs = this._device.getDeviceChild$1(rasterizerStateHandle);
  if (rs == null)
    return;
  this._device.get$gl().lineWidth$1(rs.get$lineWidth());
  t1 = rs.get$cullEnabled() === true;
  t2 = this._device;
  if (t1) {
    t2.get$gl().enable$1(2884);
    this._device.get$gl().cullFace$1(rs.get$cullMode());
    this._device.get$gl().frontFace$1(rs.get$cullFrontFace());
  } else
    t2.get$gl().disable$1(2884);
},
 setViewport$1: function(viewportHandle) {
  var t1, vp;
  t1 = this._viewportHandle;
  if (t1 == null ? viewportHandle == null : t1 === viewportHandle)
    return;
  vp = this._device.getDeviceChild$1(viewportHandle);
  if (vp == null)
    return;
  this._device.get$gl().viewport$4(vp.get$x(), vp.get$y(), vp.get$width(), vp.get$height());
},
 setBlendState$1: function(blendStateHandle) {
  var t1, bs;
  t1 = this._blendStateHandle;
  if (t1 == null ? blendStateHandle == null : t1 === blendStateHandle)
    return;
  bs = this._device.getDeviceChild$1(blendStateHandle);
  if (bs == null)
    return;
  this._device.get$gl().colorMask$4(bs.get$writeRenderTargetRed(), bs.get$writeRenderTargetGreen(), bs.get$writeRenderTargetBlue(), bs.get$writeRenderTargetAlpha());
  if ($.eqB(bs.get$blendEnable(), false)) {
    this._device.get$gl().disable$1(3042);
    return;
  }
  this._device.get$gl().enable$1(3042);
  this._device.get$gl().blendFuncSeparate$4(bs.get$blendSourceColorFunc(), bs.get$blendDestColorFunc(), bs.get$blendSourceAlphaFunc(), bs.get$blendDestAlphaFunc());
  this._device.get$gl().blendEquationSeparate$2(bs.get$blendColorOp(), bs.get$blendAlphaOp());
  this._device.get$gl().blendColor$4(bs.get$blendColorRed(), bs.get$blendColorGreen(), bs.get$blendColorBlue(), bs.get$blendColorAlpha());
},
 setDepthState$1: function(depthStateHandle) {
  var t1, ds, t2;
  t1 = this._depthStateHandle;
  if (t1 == null ? depthStateHandle == null : t1 === depthStateHandle)
    return;
  ds = this._device.getDeviceChild$1(depthStateHandle);
  if (ds == null)
    return;
  this._device.get$gl().depthRange$2(ds.get$depthNearVal(), ds.get$depthFarVal());
  t1 = $.eqB(ds.get$depthTestEnabled(), false);
  t2 = this._device;
  if (t1)
    t2.get$gl().disable$1(2929);
  else {
    t2.get$gl().enable$1(2929);
    this._device.get$gl().depthFunc$1(ds.get$depthComparisonOp());
  }
  this._device.get$gl().depthMask$1(ds.get$depthWriteEnabled());
  t1 = $.eqB(ds.get$polygonOffsetEnabled(), false);
  t2 = this._device;
  if (t1)
    t2.get$gl().disable$1(32823);
  else {
    t2.get$gl().enable$1(32823);
    this._device.get$gl().polygonOffset$2(ds.get$polygonOffsetFactor(), ds.get$polygonOffsetUnits());
  }
},
 setUniformMatrix3$3: function(name$, matrix, transpose) {
  var sp, index;
  sp = this._device.getDeviceChild$1(this._shaderProgramHandle);
  if (sp == null) {
    $.spectreLog.Error$1('Attempting to set uniform with invalid program bound.');
    return;
  }
  index = this._device.get$gl().getUniformLocation$2(sp.get$_program(), name$);
  if ($.eqB(index, -1)) {
    $.spectreLog.Error$1('Could not find uniform ' + $.S(name$) + ' in ' + $.S(sp.get$name()));
    return;
  }
  this._device.get$gl().uniformMatrix3fv$3(index, transpose, matrix);
},
 setUniformMatrix3$2: function(name$,matrix) {
  return this.setUniformMatrix3$3(name$,matrix,false)
},
 setUniformInt$2: function(name$, i) {
  var sp, index;
  sp = this._device.getDeviceChild$1(this._shaderProgramHandle);
  if (sp == null) {
    $.spectreLog.Error$1('Attempting to set uniform with invalid program bound.');
    return;
  }
  index = this._device.get$gl().getUniformLocation$2(sp.get$_program(), name$);
  if ($.eqB(index, -1)) {
    $.spectreLog.Error$1('Could not find uniform ' + $.S(name$) + ' in ' + $.S(sp.get$name()));
    return;
  }
  this._device.get$gl().uniform1i$2(index, i);
},
 setUniformNum$2: function(name$, i) {
  var sp, index;
  sp = this._device.getDeviceChild$1(this._shaderProgramHandle);
  if (sp == null) {
    $.spectreLog.Error$1('Attempting to set uniform with invalid program bound.');
    return;
  }
  index = this._device.get$gl().getUniformLocation$2(sp.get$_program(), name$);
  if ($.eqB(index, -1)) {
    $.spectreLog.Error$1('Could not find uniform ' + $.S(name$) + ' in ' + $.S(sp.get$name()));
    return;
  }
  this._device.get$gl().uniform1f$2(index, i);
},
 setUniformMatrix4$3: function(name$, matrix, transpose) {
  var sp, index;
  sp = this._device.getDeviceChild$1(this._shaderProgramHandle);
  if (sp == null) {
    $.spectreLog.Error$1('Attempting to set uniform with invalid program bound.');
    return;
  }
  index = this._device.get$gl().getUniformLocation$2(sp.get$_program(), name$);
  if ($.eqB(index, -1)) {
    $.spectreLog.Error$1('Could not find uniform ' + $.S(name$) + ' in ' + $.S(sp.get$name()));
    return;
  }
  this._device.get$gl().uniformMatrix4fv$3(index, transpose, matrix);
},
 setUniformMatrix4$2: function(name$,matrix) {
  return this.setUniformMatrix4$3(name$,matrix,false)
},
 setUniformVector4$2: function(name$, vector) {
  var sp, index;
  sp = this._device.getDeviceChild$1(this._shaderProgramHandle);
  if (sp == null) {
    $.spectreLog.Error$1('Attempting to set uniform with invalid program bound.');
    return;
  }
  index = this._device.get$gl().getUniformLocation$2(sp.get$_program(), name$);
  if ($.eqB(index, -1)) {
    $.spectreLog.Error$1('Could not find uniform ' + $.S(name$) + ' in ' + $.S(sp.get$name()));
    return;
  }
  this._device.get$gl().uniform4fv$2(index, vector);
},
 setUniformVector3$2: function(name$, vector) {
  var sp, index;
  sp = this._device.getDeviceChild$1(this._shaderProgramHandle);
  if (sp == null) {
    $.spectreLog.Error$1('Attempting to set uniform with invalid program bound.');
    return;
  }
  index = this._device.get$gl().getUniformLocation$2(sp.get$_program(), name$);
  if ($.eqB(index, -1)) {
    $.spectreLog.Error$1('Could not find uniform ' + $.S(name$) + ' in ' + $.S(sp.get$name()));
    return;
  }
  this._device.get$gl().uniform3fv$2(index, vector);
},
 setUniformVector2$2: function(name$, vector) {
  var sp, index;
  sp = this._device.getDeviceChild$1(this._shaderProgramHandle);
  if (sp == null) {
    $.spectreLog.Error$1('Attempting to set uniform with invalid program bound.');
    return;
  }
  index = this._device.get$gl().getUniformLocation$2(sp.get$_program(), name$);
  if ($.eqB(index, -1)) {
    $.spectreLog.Error$1('Could not find uniform ' + $.S(name$) + ' in ' + $.S(sp.get$name()));
    return;
  }
  this._device.get$gl().uniform2fv$2(index, vector);
},
 updateBuffer$3: function(bufferHandle, data, usage) {
  var buffer, oldBind, t1, t2;
  buffer = this._device.getDeviceChild$1(bufferHandle);
  if (!(typeof buffer === 'object' && buffer !== null && !!buffer.is$SpectreBuffer))
    return;
  oldBind = this._device.get$gl().getParameter$1(buffer._param_target);
  this._device.get$gl().bindBuffer$2(buffer._target, buffer._liblib3$_buffer);
  t1 = this._device.get$gl();
  t2 = buffer._target;
  t1.bufferData$3(t2, data, !(usage == null) ? usage : buffer._usage);
  this._device.get$gl().bindBuffer$2(buffer._target, oldBind);
},
 updateBuffer$2: function(bufferHandle,data) {
  return this.updateBuffer$3(bufferHandle,data,null)
},
 updateTexture2DFromResource$3: function(textureHandle, imageResourceHandle, rm) {
  var ir, tex, oldBind, t1, t2, t3;
  ir = rm.getResource$1(imageResourceHandle);
  if (ir == null)
    return;
  tex = this._device.getDeviceChild$2(textureHandle, true);
  if (tex == null)
    return;
  this._device.get$gl().activeTexture$1(33984);
  oldBind = this._device.get$gl().getParameter$1(tex.get$_target_param());
  this._device.get$gl().bindTexture$2(tex.get$_target(), tex.get$_liblib3$_buffer());
  t1 = this._device.get$gl();
  t2 = tex.get$_target();
  t3 = tex.get$_textureFormat();
  t1.texImage2D$6(t2, 0, t3, t3, tex.get$_pixelFormat(), ir.get$image());
  this._device.get$gl().bindTexture$2(tex.get$_target(), oldBind);
},
 generateMipmap$1: function(textureHandle) {
  var tex, oldBind;
  tex = this._device.getDeviceChild$2(textureHandle, true);
  if (tex == null)
    return;
  this._device.get$gl().activeTexture$1(33984);
  oldBind = this._device.get$gl().getParameter$1(tex.get$_target_param());
  this._device.get$gl().bindTexture$2(tex.get$_target(), tex.get$_liblib3$_buffer());
  this._device.get$gl().generateMipmap$1(tex.get$_target());
  this._device.get$gl().bindTexture$2(tex.get$_target(), oldBind);
  tex.set$ready(true);
},
 compileShader$2: function(shaderHandle, source) {
  var shader, shaderCompileLog;
  shader = this._device.getDeviceChild$1(shaderHandle);
  shader.set$source(source);
  shader.compile$0();
  shaderCompileLog = this._device.get$gl().getShaderInfoLog$1(shader.get$_shader());
  $.spectreLog.Info$1('Compiled ' + $.S(shader.get$name()) + ' - ' + $.S(shaderCompileLog));
},
 clearColorBuffer$4: function(r, g, b, a) {
  this._device.get$gl().clearColor$4(r, g, b, a);
  this._device.get$gl().clear$1(16384);
},
 clearDepthBuffer$1: function(depth) {
  this._device.get$gl().clearDepth$1(depth);
  this._device.get$gl().clear$1(256);
},
 setTextures$2: function(texUnitOffset, textureHandles) {
  var t1, t2, t3, i, t4;
  if (typeof textureHandles !== 'string' && (typeof textureHandles !== 'object' || textureHandles === null || textureHandles.constructor !== Array && !textureHandles.is$JavaScriptIndexingBehavior()))
    return this.setTextures$2$bailout(1, texUnitOffset, textureHandles);
  for (t1 = this._textureHandles, t2 = textureHandles.length, t3 = t1.length, i = texUnitOffset; i < t2; ++i) {
    t4 = i - texUnitOffset;
    if (t4 >= t2)
      throw $.ioore(t4);
    t4 = textureHandles[t4];
    if (i < 0 || i >= t3)
      throw $.ioore(i);
    t1[i] = t4;
  }
},
 setTextures$2$bailout: function(state0, texUnitOffset, textureHandles) {
  var i, t1, t2;
  for (i = texUnitOffset; $.ltB(i, $.get$length(textureHandles)); ++i) {
    t1 = this._textureHandles;
    t2 = $.index(textureHandles, i - texUnitOffset);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 setSamplers$2: function(texUnitOffset, samplerHandles) {
  var t1, t2, t3, i, t4;
  if (typeof samplerHandles !== 'string' && (typeof samplerHandles !== 'object' || samplerHandles === null || samplerHandles.constructor !== Array && !samplerHandles.is$JavaScriptIndexingBehavior()))
    return this.setSamplers$2$bailout(1, texUnitOffset, samplerHandles);
  for (t1 = this._samplerStateHandles, t2 = samplerHandles.length, t3 = t1.length, i = texUnitOffset; i < t2; ++i) {
    t4 = i - texUnitOffset;
    if (t4 >= t2)
      throw $.ioore(t4);
    t4 = samplerHandles[t4];
    if (i < 0 || i >= t3)
      throw $.ioore(i);
    t1[i] = t4;
  }
},
 setSamplers$2$bailout: function(state0, texUnitOffset, samplerHandles) {
  var i, t1, t2;
  for (i = texUnitOffset; $.ltB(i, $.get$length(samplerHandles)); ++i) {
    t1 = this._samplerStateHandles;
    t2 = $.index(samplerHandles, i - texUnitOffset);
    if (i < 0 || i >= t1.length)
      throw $.ioore(i);
    t1[i] = t2;
  }
},
 drawIndexed$2: function(numIndices, indexOffset) {
  if ($.eqB(numIndices, 0))
    return;
  this._prepareInputs$0();
  this._prepareTextures$0();
  this._device.get$gl().drawElements$4(this._primitiveTopology, numIndices, 5123, indexOffset);
},
 GraphicsContext$1: function(device) {
  this._device = device;
  this._vertexBufferHandles = $._ListImpl_List(2);
  this._samplerStateHandles = $._ListImpl_List(16);
  this._textureHandles = $._ListImpl_List(16);
  this._enabledVertexAttributeArrays = $._ListImpl_List(null);
}
};

$$.DeviceFormat = {"": ["type>", "count>", "normalized>"],
 "super": "Object",
 toString$0: function() {
  return '(' + $.S(this.type) + ', ' + $.S(this.count) + ', ' + $.S(this.normalized) + ')';
}
};

$$.InputElementDescription = {"": ["name>", "format>", "elementStride>", "vertexBufferSlot>", "vertexBufferOffset>"],
 "super": "Object"
};

$$._InputElementCheckerItem = {"": ["name>", "vertexBufferSlot>", "vertexBufferOffset>"],
 "super": "Object"
};

$$._InputElementChecker = {"": ["items"],
 "super": "Object",
 add$1: function(d) {
  var item, t1, t2, t3, t4, t5;
  item = $._InputElementCheckerItem$(d.get$name(), d.get$vertexBufferSlot(), d.get$vertexBufferOffset());
  for (t1 = $.iterator(this.items), t2 = item.name, t3 = item.vertexBufferSlot, t4 = item.vertexBufferOffset; t1.get$hasNext() === true;) {
    t5 = t1.next$0();
    if ($.eqB(t5.get$vertexBufferOffset(), t4) && $.eqB(t5.get$vertexBufferSlot(), t3))
      $.spectreLog.Warning$1('Input elements -  ' + $.S(t5.get$name()) + ' and ' + $.S(t2) + ' - share same offset. This is likely an error.');
  }
  t1 = this.items;
  $.getInterceptor(t1).add$1(t1, item);
},
 _InputElementChecker$0: function() {
  this.items = $._ListImpl_List(null);
}
};

$$.GraphicsDevice = {"": ["_liblib3$_context>", "_capabilities", "_gl", "_childrenHandles", "_childrenObjects", "_nameMapping", "_fallbackTextureID"],
 "super": "Object",
 _getPropertyMap$1: function(props) {
  if (typeof props === 'string')
    props = $.JSON_parse(props);
  if (!(typeof props === 'object' && props !== null && props.is$Map()))
    return;
  return props;
},
 get$context: function() {
  return this._liblib3$_context;
},
 get$gl: function() {
  return this._gl;
},
 _drawSquare$5: function(context2d, x, y, w, h) {
  context2d.save$0();
  context2d.beginPath$0();
  context2d.translate$2(x, y);
  context2d.set$fillStyle('#656565');
  context2d.fillRect$4(0, 0, w, h);
  context2d.restore$0();
},
 _drawGrid$5: function(context2d, width, height, horizSlices, vertSlices) {
  var sliceWidth, sliceHeight, sliceHalfWidth, i, t1, t2, j, t3, t4;
  sliceWidth = $.tdiv(width, horizSlices);
  sliceHeight = $.tdiv(height, vertSlices);
  sliceHalfWidth = $.tdiv(sliceWidth, 2);
  for (i = 0; i < horizSlices; ++i)
    for (t1 = i * sliceWidth, t2 = t1 + sliceHalfWidth, j = 0; j < vertSlices; ++j) {
      t3 = $.mod(j, 2) === 0;
      t4 = j * sliceHeight;
      if (t3)
        this._drawSquare$5(context2d, t1, t4, sliceHalfWidth, sliceHeight);
      else
        this._drawSquare$5(context2d, t2, t4, sliceHalfWidth, sliceHeight);
    }
},
 getDeviceChildHandle$1: function(name$) {
  var h = $.index(this._nameMapping, name$);
  if (h == null)
    return 4294967295;
  return h;
},
 getDeviceChild$2: function(handle, noFallback) {
  var t1, index, dc, t3;
  if (typeof handle !== 'number')
    return this.getDeviceChild$2$bailout(1, handle, noFallback);
  if (typeof noFallback !== 'boolean')
    return this.getDeviceChild$2$bailout(1, handle, noFallback);
  if (handle === 0)
    return;
  t1 = this._childrenHandles.validHandle$1(handle);
  if (typeof t1 !== 'boolean')
    return this.getDeviceChild$2$bailout(2, handle, noFallback, t1);
  if (!t1) {
    $.spectreLog.Warning$1($.S(handle) + ' is not a valid handle');
    return;
  }
  index = $.Handle_getIndex(handle);
  t1 = this._childrenObjects;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getDeviceChild$2$bailout(3, handle, noFallback, index, t1);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  dc = t1[index];
  if (dc == null) {
    $.spectreLog.Warning$1($.S(handle) + ' is not a valid handle [2]');
    return;
  }
  if (!noFallback) {
    t1 = dc.get$ready();
    if (typeof t1 !== 'boolean')
      return this.getDeviceChild$2$bailout(4, dc, index, t1);
    if (!t1) {
      t1 = dc.get$fallback();
      if (typeof t1 !== 'number')
        return this.getDeviceChild$2$bailout(5, dc, t1, index);
      t3 = !(t1 === 0);
      t1 = t3;
    } else
      t1 = false;
  } else
    t1 = false;
  if (t1) {
    t1 = this._childrenObjects;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.getDeviceChild$2$bailout(6, t1, index);
    if (index >= t1.length)
      throw $.ioore(index);
    return this.getDeviceChild$1(t1[index].get$fallback());
  }
  return dc;
},
 getDeviceChild$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      noFallback = env1;
      handle = env0;
      break;
    case 2:
      t1 = env2;
      noFallback = env1;
      handle = env0;
      break;
    case 3:
      t1 = env3;
      index = env2;
      noFallback = env1;
      handle = env0;
      break;
    case 4:
      t1 = env2;
      index = env1;
      dc = env0;
      break;
    case 5:
      index = env2;
      t1 = env1;
      dc = env0;
      break;
    case 6:
      index = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if ($.eqB(handle, 0))
        return;
      t1 = this._childrenHandles.validHandle$1(handle);
    case 2:
      state0 = 0;
      if ($.eqB(t1, false)) {
        $.spectreLog.Warning$1($.S(handle) + ' is not a valid handle');
        return;
      }
      index = $.Handle_getIndex(handle);
      t1 = this._childrenObjects;
    case 3:
      state0 = 0;
      dc = $.index(t1, index);
      if (dc == null) {
        $.spectreLog.Warning$1($.S(handle) + ' is not a valid handle [2]');
        return;
      }
    default:
      if (state0 === 5 || state0 === 4 || state0 === 0 && $.eqB(noFallback, false))
        switch (state0) {
          case 0:
            t1 = dc.get$ready();
          case 4:
            state0 = 0;
          case 5:
            if (state0 === 5 || state0 === 0 && $.eqB(t1, false))
              switch (state0) {
                case 0:
                  t1 = dc.get$fallback();
                case 5:
                  state0 = 0;
                  t3 = !$.eqB(t1, 0);
                  t1 = t3;
              }
            else
              t1 = false;
        }
      else
        t1 = false;
    case 6:
      var noFallback, handle, t1, index, dc, t3;
      if (state0 === 6 || state0 === 0 && t1)
        switch (state0) {
          case 0:
            t1 = this._childrenObjects;
          case 6:
            state0 = 0;
            return this.getDeviceChild$1($.index(t1, index).get$fallback());
        }
      return dc;
  }
},
 getDeviceChild$1: function(handle) {
  return this.getDeviceChild$2(handle,false)
},
 _setChildObject$2: function(handle, o) {
  var index = $.Handle_getIndex(handle);
  $.indexSet(this._childrenObjects, index, o);
},
 _registerHandle$2: function(name$, type) {
  var existingHandle, handleType, handle;
  existingHandle = this.getDeviceChildHandle$1(name$);
  if (!$.eqB(existingHandle, 4294967295)) {
    handleType = $.Handle_getType(existingHandle);
    if (!$.eqB(handleType, type))
      $.spectreLog.Error$1('Returning existing handle for ' + name$ + ' but types do not match. Requested type = ' + $.S(type) + ' found type = ' + $.S(handleType));
    return existingHandle;
  }
  handle = this._childrenHandles.allocateHandle$1(type);
  if ($.eqB(handle, 4294967295)) {
    $.spectreLog.Error$1('Spectre.Device._registerHandle - Registering dynamic handle failed.');
    return 4294967295;
  }
  $.Handle_getIndex(handle);
  $.indexSet(this._nameMapping, name$, handle);
  return handle;
},
 configureDeviceChild$2: function(handle, props) {
  var deviceChild = this.getDeviceChild$1(handle);
  if (deviceChild == null)
    return;
  deviceChild._configDeviceState$1(this._getPropertyMap$1(props));
},
 createIndexBuffer$2: function(name$, props) {
  var handle, ib;
  handle = this._registerHandle$2(name$, 1);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  ib = $.IndexBuffer$(name$, this);
  this._setChildObject$2(handle, ib);
  ib._createDeviceState$0();
  ib._configDeviceState$1(props);
  return handle;
},
 createVertexBuffer$2: function(name$, props) {
  var handle, vb;
  handle = this._registerHandle$2(name$, 1);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  vb = $.VertexBuffer$(name$, this);
  this._setChildObject$2(handle, vb);
  vb._createDeviceState$0();
  vb._configDeviceState$1(props);
  return handle;
},
 createTexture2D$2: function(name$, props) {
  var handle, tex;
  handle = this._registerHandle$2(name$, 4);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  tex = $.Texture2D$(name$, this);
  this._setChildObject$2(handle, tex);
  tex._createDeviceState$0();
  tex._configDeviceState$1(props);
  if (!(this._fallbackTextureID == null)) {
    tex.set$ready(false);
    tex.fallback = this._fallbackTextureID;
  }
  return handle;
},
 createVertexShader$2: function(name$, props) {
  var handle, vertexShader;
  handle = this._registerHandle$2(name$, 6);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  vertexShader = $.VertexShader$(name$, this);
  this._setChildObject$2(handle, vertexShader);
  vertexShader._createDeviceState$0();
  vertexShader._configDeviceState$1(props);
  return handle;
},
 createFragmentShader$2: function(name$, props) {
  var handle, fragmentShader;
  handle = this._registerHandle$2(name$, 6);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  fragmentShader = $.FragmentShader$(name$, this);
  this._setChildObject$2(handle, fragmentShader);
  fragmentShader._createDeviceState$0();
  fragmentShader._configDeviceState$1(props);
  return handle;
},
 createShaderProgram$2: function(name$, props) {
  var handle, shaderProgram;
  handle = this._registerHandle$2(name$, 7);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  shaderProgram = $.ShaderProgram$(name$, this);
  this._setChildObject$2(handle, shaderProgram);
  shaderProgram._createDeviceState$0();
  shaderProgram._configDeviceState$1(props);
  return handle;
},
 createSamplerState$2: function(name$, props) {
  var handle, sampler;
  handle = this._registerHandle$2(name$, 5);
  if (typeof handle !== 'number')
    return this.createSamplerState$2$bailout(1, name$, props, handle);
  if (handle === 4294967295)
    return handle;
  props = this._getPropertyMap$1(props);
  sampler = $.SamplerState$(name$, this);
  this._setChildObject$2(handle, sampler);
  sampler._createDeviceState$0();
  sampler._configDeviceState$1(props);
  return handle;
},
 createSamplerState$2$bailout: function(state0, name$, props, handle) {
  var sampler;
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  sampler = $.SamplerState$(name$, this);
  this._setChildObject$2(handle, sampler);
  sampler._createDeviceState$0();
  sampler._configDeviceState$1(props);
  return handle;
},
 createViewport$2: function(name$, props) {
  var handle, viewport;
  handle = this._registerHandle$2(name$, 8);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  viewport = $.Viewport$(name$, this);
  this._setChildObject$2(handle, viewport);
  viewport._createDeviceState$0();
  viewport._configDeviceState$1(props);
  return handle;
},
 createDepthState$2: function(name$, props) {
  var handle, depthState;
  handle = this._registerHandle$2(name$, 9);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  depthState = $.DepthState$(name$, this);
  this._setChildObject$2(handle, depthState);
  depthState._createDeviceState$0();
  depthState._configDeviceState$1(props);
  return handle;
},
 createBlendState$2: function(name$, props) {
  var handle, blendState;
  handle = this._registerHandle$2(name$, 10);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  blendState = $.BlendState$(name$, this);
  this._setChildObject$2(handle, blendState);
  blendState._createDeviceState$0();
  blendState._configDeviceState$1(props);
  return handle;
},
 createRasterizerState$2: function(name$, props) {
  var handle, rasterizerState;
  handle = this._registerHandle$2(name$, 11);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  rasterizerState = $.RasterizerState$(name$, this);
  this._setChildObject$2(handle, rasterizerState);
  rasterizerState._createDeviceState$0();
  rasterizerState._configDeviceState$1(props);
  return handle;
},
 createInputLayout$2: function(name$, props) {
  var handle, il;
  handle = this._registerHandle$2(name$, 12);
  if ($.eqB(handle, 4294967295))
    return handle;
  props = this._getPropertyMap$1(props);
  il = $.InputLayout$(name$, this);
  this._setChildObject$2(handle, il);
  il._createDeviceState$0();
  il._configDeviceState$1(props);
  return handle;
},
 GraphicsDevice$1: function(gl) {
  var canvas;
  this._gl = gl;
  this._childrenHandles = $.HandleSystem$(2048, 0);
  this._childrenObjects = $._ListImpl_List(2048);
  this._nameMapping = $.Map_Map();
  this._liblib3$_context = $.GraphicsContext$(this);
  this._capabilities = $.GraphicsDeviceCapabilities$_fromContext(gl);
  this._fallbackTextureID = this.createTexture2D$2('Device.Fallback', $.makeLiteralMap(['width', 512, 'height', 512, 'textureFormat', 6408, 'pixelFormat', 5121]));
  canvas = $.CanvasElement_CanvasElement($, $);
  canvas.set$width(512);
  canvas.set$height(512);
  this._drawGrid$5(canvas.getContext$1('2d'), 512, 512, 8, 8);
  this.configureDeviceChild$2(this._fallbackTextureID, $.makeLiteralMap(['pixels', canvas]));
  this._liblib3$_context.generateMipmap$1(this._fallbackTextureID);
}
};

$$.GraphicsDeviceCapabilities = {"": ["_vendor", "_renderer", "_liblib3$_textureUnits", "_vertexShaderTextureUnits", "_maxTextureSize", "_maxCubeMapTextureSize", "_maxVertexAttribs", "_maxVaryingVectors", "_maxVertexShaderUniforms", "_maxFragmentShaderUniforms", "_floatTextures", "_halfFloatTextures", "_standardDerivatives", "_vertexArrayObjects", "_debugRendererInfo", "_debugShaders", "_unsignedIntIndices", "_anisotropicFiltering", "_loseContext", "_compressedTextureS3TC", "_depthTextures", "_compressedTextureATC", "_compressedTexturePVRTC"],
 "super": "Object",
 get$textureUnits: function() {
  return this._liblib3$_textureUnits;
},
 toString$0: function() {
  var vendorString, rendererString;
  vendorString = $.get$isEmpty(this._vendor) === true ? 'Unknown' : this._vendor;
  rendererString = $.get$isEmpty(this._renderer) === true ? 'Unknown' : this._renderer;
  return 'Vendor: ' + $.S(vendorString) + '\r\nRenderer: ' + $.S(rendererString) + '\r\n\r\nDevice stats\r\nTexture Units: ' + $.S(this._liblib3$_textureUnits) + '\r\nVertex Texture Units: ' + $.S(this._vertexShaderTextureUnits) + '\r\nMax Texture Size: ' + $.S(this._maxTextureSize) + 'x' + $.S(this._maxTextureSize) + '\r\nMax Cube Map Size: ' + $.S(this._maxCubeMapTextureSize) + 'x' + $.S(this._maxCubeMapTextureSize) + '\r\nMax Vertex Attributes: ' + $.S(this._maxVertexAttribs) + '\r\nMax Varying Vectors: ' + $.S(this._maxVaryingVectors) + '\r\nMax Vertex Shader Uniforms: ' + $.S(this._maxVertexShaderUniforms) + '\r\nMax Fragment Shader Uniforms: ' + $.S(this._maxFragmentShaderUniforms) + '\r\n\r\nExtensions\r\nOES_texture_float: ' + $.S(this._floatTextures) + '\r\nOES_texture_half_float: ' + $.S(this._halfFloatTextures) + '\r\nOES_standard_derivatives: ' + $.S(this._standardDerivatives) + '\r\nOES_vertex_array_object: ' + $.S(this._vertexArrayObjects) + '\r\nWEBGL_debug_renderer_info: ' + $.S(this._debugRendererInfo) + '\r\nWEBGL_debug_shaders: ' + $.S(this._debugShaders) + '\r\nOES_element_index_uint: ' + $.S(this._unsignedIntIndices) + '\r\nEXT_texture_filter_anisotropic: ' + $.S(this._anisotropicFiltering) + '\r\nWEBGL_lose_context: ' + $.S(this._loseContext) + '\r\nWEBGL_compressed_texture_s3tc: ' + $.S(this._compressedTextureS3TC) + '\r\nWEBGL_depth_texture: ' + $.S(this._depthTextures) + '\r\nWEBGL_compressed_texture_atc: ' + $.S(this._compressedTextureATC) + '\r\nWEBGL_compressed_texture_pvrtc: ' + $.S(this._compressedTexturePVRTC) + '\r\n        ';
},
 _queryDeviceInfo$1: function(gl) {
  this._liblib3$_textureUnits = gl.getParameter$1(34930);
  this._vertexShaderTextureUnits = gl.getParameter$1(35660);
  this._maxTextureSize = gl.getParameter$1(3379);
  this._maxCubeMapTextureSize = gl.getParameter$1(34076);
  this._maxVertexAttribs = gl.getParameter$1(34921);
  this._maxVaryingVectors = gl.getParameter$1(36348);
  this._maxVertexShaderUniforms = gl.getParameter$1(36347);
  this._maxFragmentShaderUniforms = gl.getParameter$1(36349);
},
 _queryExtensionInfo$1: function(gl) {
  this._floatTextures = !(gl.getExtension$1('OES_texture_float') == null);
  this._halfFloatTextures = !(gl.getExtension$1('OES_texture_half_float') == null);
  this._standardDerivatives = !(gl.getExtension$1('OES_standard_derivatives') == null);
  this._vertexArrayObjects = !(gl.getExtension$1('OES_vertex_array_object') == null);
  this._debugRendererInfo = !(gl.getExtension$1('WEBGL_debug_renderer_info') == null);
  this._debugShaders = !(gl.getExtension$1('WEBGL_debug_shaders') == null);
  this._unsignedIntIndices = false;
  this._anisotropicFiltering = !(gl.getExtension$1('EXT_texture_filter_anisotropic') == null);
  this._loseContext = !(gl.getExtension$1('WEBGL_lose_context') == null);
  this._compressedTextureS3TC = !(gl.getExtension$1('WEBGL_compressed_texture_s3tc') == null);
  this._depthTextures = !(gl.getExtension$1('WEBGL_depth_texture') == null);
  this._compressedTextureATC = !(gl.getExtension$1('WEBGL_compressed_texture_atc') == null);
  this._compressedTexturePVRTC = !(gl.getExtension$1('WEBGL_compressed_texture_pvrtc') == null);
},
 GraphicsDeviceCapabilities$_fromContext$1: function(gl) {
  this._queryDeviceInfo$1(gl);
  this._queryExtensionInfo$1(gl);
  if (this._debugRendererInfo === true) {
    this._vendor = gl.getParameter$1(37445);
    this._renderer = gl.getParameter$1(37446);
  } else {
    this._vendor = '';
    this._renderer = '';
  }
}
};

$$.InputLayoutDescription = {"": ["meshAttributeName>", "vertexBufferIndex>", "shaderAttributeName>"],
 "super": "Object"
};

$$.PrintLogger = {"": [],
 "super": "Object",
 Error$1: function(e) {
  $.print('Error: ' + e);
},
 Warning$1: function(w) {
  $.print('Warning: ' + w);
},
 Info$1: function(i) {
  $.print(i);
}
};

$$.MouseKeyboardCameraController = {"": ["up", "down", "strafeLeft<", "strafeRight<", "forward<", "backward<", "floatVelocity", "strafeVelocity", "forwardVelocity", "mouseSensitivity", "accumDX=", "accumDY="],
 "super": "CameraController",
 UpdateCamera$2: function(seconds, cam) {
  this._MoveFloat$4(seconds, this.up, this.down, cam);
  this._MoveStrafe$4(seconds, this.strafeRight, this.strafeLeft, cam);
  this._MoveForward$4(seconds, this.forward, this.backward, cam);
  this._RotateView$2(seconds, cam);
},
 _MoveFloat$4: function(dt, positive, negative, cam) {
  var scale, scale0, upDirection, t1;
  scale = positive ? 1 : 0;
  if (negative)
    --scale;
  if (scale === 0)
    return;
  if (typeof dt !== 'number')
    throw $.iae(dt);
  scale0 = scale * dt * this.floatVelocity;
  upDirection = $.vec3$raw(0, 1, 0);
  upDirection.scale$1(scale0);
  t1 = cam.get$focusPosition();
  $.getInterceptor(t1).add$1(t1, upDirection);
  t1 = cam.get$position();
  $.getInterceptor(t1).add$1(t1, upDirection);
},
 _MoveStrafe$4: function(dt, positive, negative, cam) {
  var scale, scale0, frontDirection, strafeDirection, t1;
  scale = positive === true ? 1 : 0;
  if (negative === true)
    --scale;
  if (scale === 0)
    return;
  if (typeof dt !== 'number')
    throw $.iae(dt);
  scale0 = scale * dt * this.strafeVelocity;
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  strafeDirection = frontDirection.cross$1($.vec3$raw(0, 1, 0));
  strafeDirection.scale$1(scale0);
  t1 = cam.get$focusPosition();
  $.getInterceptor(t1).add$1(t1, strafeDirection);
  t1 = cam.get$position();
  $.getInterceptor(t1).add$1(t1, strafeDirection);
},
 _MoveForward$4: function(dt, positive, negative, cam) {
  var scale, scale0, frontDirection, t1;
  scale = positive === true ? 1 : 0;
  if (negative === true)
    --scale;
  if (scale === 0)
    return;
  if (typeof dt !== 'number')
    throw $.iae(dt);
  scale0 = scale * dt * this.forwardVelocity;
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  frontDirection.scale$1(scale0);
  t1 = cam.get$focusPosition();
  $.getInterceptor(t1).add$1(t1, frontDirection);
  t1 = cam.get$position();
  $.getInterceptor(t1).add$1(t1, frontDirection);
},
 _RotateView$2: function(dt, cam) {
  var frontDirection, upDirection, strafeDirection, mouseYawDelta, mousePitchDelta;
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  upDirection = $.vec3$raw(0, 1, 0);
  strafeDirection = frontDirection.cross$1(upDirection);
  strafeDirection.normalize$0();
  mouseYawDelta = $.div(this.accumDX, this.mouseSensitivity);
  mousePitchDelta = $.div(this.accumDY, this.mouseSensitivity);
  this.accumDX = 0;
  this.accumDY = 0;
  $.degrees($.acos(frontDirection.dot$1(upDirection), null), null);
  $.degrees(0.785398163, null);
  $.degrees(2.35619449, null);
  this._RotateEyeAndLook$3(mousePitchDelta, strafeDirection, cam);
  this._RotateEyeAndLook$3(mouseYawDelta, upDirection, cam);
},
 _RotateEyeAndLook$3: function(delta_angle, axis, cam) {
  var q, frontDirection;
  q = $.quat$(axis, delta_angle, null, null);
  frontDirection = cam.get$frontDirection();
  frontDirection.normalize$0();
  q.rotate$1(frontDirection);
  frontDirection.normalize$0();
  cam.set$focusPosition($.add(cam.get$position(), frontDirection));
},
 MouseKeyboardCameraController$0: function() {
  this.floatVelocity = 5;
  this.strafeVelocity = 5;
  this.forwardVelocity = 5;
  this.up = false;
  this.down = false;
  this.strafeLeft = false;
  this.strafeRight = false;
  this.forward = false;
  this.backward = false;
  this.accumDX = 0;
  this.accumDY = 0;
  this.mouseSensitivity = 360;
}
};

$$.ResourceEvents = {"": ["update", "unloaded", "_idCounter"],
 "super": "Object",
 update$1: function(arg0) { return this.update.call$1(arg0); },
 addUpdate$1: function(cb) {
  var t1;
  this._idCounter = this._idCounter + 1;
  t1 = this._idCounter;
  if (t1 === 0)
    this._idCounter = t1 + 1;
  $.indexSet(this.update, this._idCounter, cb);
  return this._idCounter;
},
 addUnloaded$1: function(cb) {
  var t1;
  this._idCounter = this._idCounter + 1;
  t1 = this._idCounter;
  if (t1 === 0)
    this._idCounter = t1 + 1;
  $.indexSet(this.unloaded, this._idCounter, cb);
  return this._idCounter;
},
 ResourceEvents$0: function() {
  this.update = $.HashMap_HashMap();
  this.unloaded = $.HashMap_HashMap();
  this._idCounter = 0;
}
};

$$.ResourceBase = {"": ["_isLoaded<", "on>"],
 "super": "Object",
 get$isLoaded: function() {
  return this._isLoaded;
},
 get$url: function() {
  return this._url;
},
 load$1: function(result) {
  this._isLoaded = true;
  this._fireUpdated$0();
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 update$1: function(state) {
  this._isLoaded = true;
  this._fireUpdated$0();
},
 unload$0: function() {
  this._isLoaded = false;
  this._fireUnloaded$0();
},
 _fireUpdated$0: function() {
  var t1 = this.on.update;
  $.getInterceptor(t1).forEach$1(t1, new $.ResourceBase__fireUpdated_anon(this));
},
 _fireUnloaded$0: function() {
  var t1 = this.on.unloaded;
  $.getInterceptor(t1).forEach$1(t1, new $.ResourceBase__fireUnloaded_anon(this));
},
 ResourceBase$2: function(_url, _rm) {
  this._isLoaded = false;
  this.on = $.ResourceEvents$();
}
};

$$.MeshResource = {"": ["meshData", "vertexArray>", "indexArray>", "_isLoaded", "_url", "on", "_rm"],
 "super": "ResourceBase",
 get$numIndices: function() {
  return $.get$length($.index($.index($.index(this.meshData, 'meshes'), 0), 'indices'));
},
 load$1: function(result) {
  if ($.eqB(result.get$success(), false))
    return;
  this.meshData = $.JSON_parse(result.get$data());
  this.indexArray = $.Uint16Array_Uint16Array$fromList($.index($.index($.index(this.meshData, 'meshes'), 0), 'indices'));
  this.vertexArray = $.Float32Array_Float32Array$fromList($.index($.index($.index(this.meshData, 'meshes'), 0), 'vertices'));
  this._fireUpdated$0();
  result.get$completer().complete$1(result.get$handle());
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 unload$0: function() {
  this._fireUnloaded$0();
  this.vertexArray = null;
  this.indexArray = null;
  this.meshData = null;
},
 is$MeshResource: true
};

$$.ShaderResource = {"": ["source=", "_isLoaded", "_url", "on", "_rm"],
 "super": "ResourceBase",
 load$1: function(result) {
  if ($.eqB(result.get$success(), false))
    return;
  this.source = result.get$data();
  this._fireUpdated$0();
  result.get$completer().complete$1(result.get$handle());
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 update$1: function(state) {
  var o = $.index(state, 'source');
  if (!(o == null) && typeof o === 'string') {
    this.source = o;
    this._fireUpdated$0();
  }
},
 unload$0: function() {
  this._fireUnloaded$0();
  this.source = null;
},
 ShaderResource$2: function(url, rm) {
  this.source = '';
}
};

$$.ShaderProgramResource = {"": ["vertexShaderSource<", "fragmentShaderSource<", "_isLoaded", "_url", "on", "_rm"],
 "super": "ResourceBase",
 load$1: function(result) {
  var t1, futures, t2, spdata, inlineVertexShader, inlineFragmentShader, fetchVertexShader, fetchFragmentShader;
  t1 = {};
  $.ResourceBase.prototype.load$1.call(this, result);
  if ($.eqB(result.get$success(), false))
    return;
  futures = $._ListImpl_List(null);
  t1.fetchedVertex_1 = false;
  t1.fetchedFragment_2 = false;
  t2 = result.get$data();
  if (typeof t2 === 'string') {
    spdata = $.JSON_parse(result.get$data());
    inlineVertexShader = $.index(spdata, 'inlineVertexShader');
    inlineFragmentShader = $.index(spdata, 'inlineFragmentShader');
    fetchVertexShader = $.index(spdata, 'fetchVertexShader');
    fetchFragmentShader = $.index(spdata, 'fetchFragmentShader');
    if (!(inlineVertexShader == null))
      this.vertexShaderSource = inlineVertexShader;
    if (!(fetchVertexShader == null)) {
      t1.fetchedVertex_1 = true;
      $.getInterceptor(futures).add$1(futures, $._ShaderResourceLoader$().load$1(this._rm._baseURL + $.S(fetchVertexShader)));
    }
    if (!(inlineFragmentShader == null))
      this.fragmentShaderSource = inlineFragmentShader;
    if (!(fetchFragmentShader == null)) {
      t1.fetchedFragment_2 = true;
      $.getInterceptor(futures).add$1(futures, $._ShaderResourceLoader$().load$1(this._rm._baseURL + $.S(fetchFragmentShader)));
    }
  }
  if (futures.length > 0)
    $.Futures_wait(futures).then$1(new $.ShaderProgramResource_load_anon(t1, result, this));
  else {
    this._fireUpdated$0();
    this._isLoaded = true;
    result.get$completer().complete$1(result.get$handle());
  }
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 update$1: function(state) {
  var o = $.index(state, 'vertexShaderSource');
  if (!(o == null) && typeof o === 'string')
    this.vertexShaderSource = o;
  o = $.index(state, 'fragmentShaderSource');
  if (!(o == null) && typeof o === 'string')
    this.fragmentShaderSource = o;
  this._fireUpdated$0();
},
 unload$0: function() {
  this._fireUnloaded$0();
  this.vertexShaderSource = null;
  this.fragmentShaderSource = null;
},
 ShaderProgramResource$2: function(url, rm) {
  this.vertexShaderSource = '';
  this.fragmentShaderSource = '';
}
};

$$.ImageResource = {"": ["_image", "_isLoaded", "_url", "on", "_rm"],
 "super": "ResourceBase",
 get$image: function() {
  return this._image;
},
 load$1: function(result) {
  this._isLoaded = true;
  if ($.eqB(result.get$success(), false))
    return;
  this._image = result.get$data();
  this._fireUpdated$0();
  result.get$completer().complete$1(result.get$handle());
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 update$1: function(state) {
  var o = $.index(state, 'image');
  if (!(o == null) && typeof o === 'object' && o !== null && o.is$ImageElement()) {
    this._image = o;
    this._fireUpdated$0();
  }
},
 unload$0: function() {
  this._fireUnloaded$0();
  this._image = null;
}
};

$$.PackResource = {"": ["childResources", "_isLoaded", "_url", "on", "_rm"],
 "super": "ResourceBase",
 load$1: function(result) {
  var t1, futures, pack, t2, handle, t3;
  t1 = this.childResources;
  if (t1.length > 0) {
    this._rm.batchUnload$1(t1);
    t1 = this.childResources;
    $.getInterceptor(t1).clear$0(t1);
  }
  if (result.get$success() === true) {
    futures = $._ListImpl_List(null);
    t1 = result.get$data();
    if (typeof t1 === 'string') {
      pack = $.JSON_parse(result.get$data());
      if (!(pack == null))
        for (t1 = $.iterator($.index(pack, 'packContents')), t2 = this._rm; t1.get$hasNext() === true;) {
          handle = t2.registerResource$1(t1.next$0());
          t3 = this.childResources;
          $.getInterceptor(t3).add$1(t3, handle);
          if (!$.eqB(handle, 4294967295))
            $.getInterceptor(futures).add$1(futures, t2.loadResource$1(handle));
        }
    }
    this._fireUpdated$0();
    $.Futures_wait(futures).then$1(new $.PackResource_load_anon(result));
  }
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 unload$0: function() {
  this._rm.batchUnload$1(this.childResources);
},
 PackResource$2: function(url, rm) {
  this.childResources = $._ListImpl_List(null);
}
};

$$.RenderConfigResource = {"": ["renderConfig", "_isLoaded", "_url", "on", "_rm"],
 "super": "ResourceBase",
 load$1: function(result) {
  this.renderConfig = $.JSON_parse(result.get$data());
  this._fireUpdated$0();
  result.get$completer().complete$1(result.get$handle());
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 unload$0: function() {
  this._fireUnloaded$0();
  this.renderConfig = null;
},
 RenderConfigResource$2: function(url, rm) {
  this.renderConfig = null;
}
};

$$.SceneResource = {"": ["sceneDescription", "_isLoaded", "_url", "on", "_rm"],
 "super": "ResourceBase",
 load$1: function(result) {
  this.sceneDescription = $.JSON_parse(result.get$data());
  this._fireUpdated$0();
  result.get$completer().complete$1(result.get$handle());
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 unload$0: function() {
  this._fireUnloaded$0();
  this.sceneDescription = null;
},
 SceneResource$2: function(url, rm) {
  this.sceneDescription = null;
}
};

$$._ResourceLoaderResult = {"": ["success>", "data>", "handle=", "completer="],
 "super": "Object",
 _ResourceLoaderResult$2: function(success, data) {
  this.handle = 0;
}
};

$$._ResourceLoader = {"": [],
 "super": "Object",
 canLoad$2: function(URL, extension) {
  return false;
},
 createResource$2: function(URL, rm) {
  return;
}
};

$$._ImageResourceLoader = {"": [],
 "super": "_ResourceLoader",
 canLoad$2: function(URL, extension) {
  if (typeof extension !== 'string')
    return this.canLoad$2$bailout(1, extension);
  return extension === 'jpeg' || extension === 'jpg' || extension === 'png' || extension === 'gif';
},
 canLoad$2$bailout: function(state0, extension) {
  return $.eqB(extension, 'jpeg') || $.eqB(extension, 'jpg') || $.eqB(extension, 'png') || $.eqB(extension, 'gif');
},
 load$1: function(url) {
  var image, completer, t1;
  image = $.ImageElement_ImageElement($, $, $);
  completer = $.Completer_Completer();
  t1 = image.get$on().get$load();
  $.getInterceptor(t1).add$1(t1, new $._ImageResourceLoader_load_anon(completer, url, image));
  t1 = image.get$on().get$error();
  $.getInterceptor(t1).add$1(t1, new $._ImageResourceLoader_load_anon0(completer, url, image));
  image.set$src(url);
  return completer.get$future();
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); },
 createResource$2: function(url, rm) {
  return $.ImageResource$(url, rm);
}
};

$$._HttpResourceLoader = {"": [],
 "super": "_ResourceLoader",
 load$1: function(url) {
  var completer, req, t1;
  completer = $.Completer_Completer();
  req = $.HttpRequest_HttpRequest();
  req.open$3('GET', url, true);
  t1 = req.get$on().get$load();
  $.getInterceptor(t1).add$1(t1, new $._HttpResourceLoader_load_anon(req, completer, url));
  t1 = req.get$on().get$error();
  $.getInterceptor(t1).add$1(t1, new $._HttpResourceLoader_load_anon0(req, completer, url));
  req.send$0();
  return completer.get$future();
},
 get$load: function() { return new $.BoundClosure(this, 'load$1'); }
};

$$._MeshResourceLoader = {"": [],
 "super": "_HttpResourceLoader",
 canLoad$2: function(URL, extension) {
  if (typeof extension !== 'string')
    return this.canLoad$2$bailout1(1, extension);
  return extension === 'mesh';
},
 canLoad$2$bailout1: function(state0, extension) {
  return $.eq(extension, 'mesh');
},
 createResource$2: function(url, rm) {
  return $.MeshResource$(url, rm);
}
};

$$._ShaderResourceLoader = {"": [],
 "super": "_HttpResourceLoader",
 canLoad$2: function(URL, extension) {
  if (typeof extension !== 'string')
    return this.canLoad$2$bailout0(1, extension);
  return extension === 'vs' || extension === 'fs';
},
 canLoad$2$bailout0: function(state0, extension) {
  return $.eqB(extension, 'vs') || $.eqB(extension, 'fs');
},
 createResource$2: function(url, rm) {
  return $.ShaderResource$(url, rm);
}
};

$$._ShaderProgramResourceLoader = {"": [],
 "super": "_HttpResourceLoader",
 canLoad$2: function(URL, extension) {
  if (typeof extension !== 'string')
    return this.canLoad$2$bailout3(1, extension);
  return extension === 'sp';
},
 canLoad$2$bailout3: function(state0, extension) {
  return $.eq(extension, 'sp');
},
 createResource$2: function(url, rm) {
  return $.ShaderProgramResource$(url, rm);
}
};

$$._PackResourceLoader = {"": [],
 "super": "_HttpResourceLoader",
 canLoad$2: function(URL, extension) {
  if (typeof extension !== 'string')
    return this.canLoad$2$bailout2(1, extension);
  return extension === 'pack';
},
 canLoad$2$bailout2: function(state0, extension) {
  return $.eq(extension, 'pack');
},
 createResource$2: function(url, rm) {
  return $.PackResource$(url, rm);
}
};

$$._RenderConfigResourceLoader = {"": [],
 "super": "_HttpResourceLoader",
 canLoad$2: function(URL, extension) {
  if (typeof extension !== 'string')
    return this.canLoad$2$bailout4(1, extension);
  return extension === 'rc';
},
 canLoad$2$bailout4: function(state0, extension) {
  return $.eq(extension, 'rc');
},
 createResource$2: function(url, rm) {
  return $.RenderConfigResource$(url, rm);
}
};

$$._SceneResourceLoader = {"": [],
 "super": "_HttpResourceLoader",
 canLoad$2: function(URL, extension) {
  if (typeof extension !== 'string')
    return this.canLoad$2$bailout5(1, extension);
  return extension === 'scene';
},
 canLoad$2$bailout5: function(state0, extension) {
  return $.eq(extension, 'scene');
},
 createResource$2: function(url, rm) {
  return $.SceneResource$(url, rm);
}
};

$$.ResourceLoaders = {"": ["_resourceLoaders"],
 "super": "Object",
 findResourceLoader$1: function(URL) {
  var extension, t1, t2;
  extension = $.ResourceLoaders_urlExtension(URL);
  for (t1 = $.iterator(this._resourceLoaders); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2.canLoad$2(URL, extension) === true)
      return t2;
  }
  return;
},
 ResourceLoaders$0: function() {
  this._resourceLoaders = $._ListImpl_List(null);
  var t1 = this._resourceLoaders;
  $.getInterceptor(t1).add$1(t1, $._ImageResourceLoader$());
  t1 = this._resourceLoaders;
  $.getInterceptor(t1).add$1(t1, $._ShaderResourceLoader$());
  t1 = this._resourceLoaders;
  $.getInterceptor(t1).add$1(t1, $._MeshResourceLoader$());
  t1 = this._resourceLoaders;
  $.getInterceptor(t1).add$1(t1, $._PackResourceLoader$());
  t1 = this._resourceLoaders;
  $.getInterceptor(t1).add$1(t1, $._ShaderProgramResourceLoader$());
  t1 = this._resourceLoaders;
  $.getInterceptor(t1).add$1(t1, $._RenderConfigResourceLoader$());
  t1 = this._resourceLoaders;
  $.getInterceptor(t1).add$1(t1, $._SceneResourceLoader$());
}
};

$$.ResourceManager = {"": ["_loaders", "_handleSystem", "_resources", "_baseURL", "_urlToHandle"],
 "super": "Object",
 getResource$1: function(handle) {
  var index, t1;
  if ($.eqB(handle, 0))
    return;
  if ($.eqB(this._handleSystem.validHandle$1(handle), false)) {
    $.spectreLog.Warning$1('getResource - ' + $.S(handle) + ' is not a valid handle');
    return;
  }
  index = $.Handle_getIndex(handle);
  t1 = this._resources;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 getResourceHandle$1: function(url) {
  var handle = $.index(this._urlToHandle, url);
  if (handle == null)
    return 4294967295;
  return handle;
},
 registerResource$2: function(url, handle) {
  var existingHandle, rl, rb, t1, t2, index;
  existingHandle = this.getResourceHandle$1(url);
  if (!$.eqB(existingHandle, 4294967295)) {
    $.print('RR: ' + $.S(url) + ' ' + $.S(existingHandle));
    return existingHandle;
  }
  rl = this._loaders.findResourceLoader$1(url);
  if (rl == null) {
    $.spectreLog.Error$1('Resource Manager cannot load ' + $.S(url) + '.');
    return 4294967295;
  }
  rb = rl.createResource$2(url, this);
  t1 = !$.eqB(handle, 4294967295);
  t2 = this._handleSystem;
  if (t1) {
    if (!$.eqB(t2.setStaticHandle$1(handle), handle)) {
      $.spectreLog.Error$1('Registering a static handle ' + $.S(handle) + ' failed.');
      return 4294967295;
    }
  } else {
    handle = t2.allocateHandle$1(1);
    if ($.eqB(handle, 4294967295)) {
      $.spectreLog.Error$1('Registering dynamic handle failed.');
      return 4294967295;
    }
  }
  index = $.Handle_getIndex(handle);
  t1 = this._resources;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1[index] = rb;
  $.indexSet(this._urlToHandle, url, handle);
  return handle;
},
 registerResource$1: function(url) {
  return this.registerResource$2(url,4294967295)
},
 loadResource$2: function(handle, force) {
  var rb, rl, completer;
  rb = this.getResource$1(handle);
  if (rb == null)
    return;
  rl = this._loaders.findResourceLoader$1(rb.get$url());
  if (rl == null)
    return;
  completer = $.Completer_Completer();
  if (rb.get$isLoaded() === true && $.eqB(force, false))
    completer.complete$1(handle);
  else
    rl.load$1(this._baseURL + $.S(rb.get$url())).then$1(new $.ResourceManager_loadResource_anon(rb, handle, completer));
  return completer.get$future();
},
 loadResource$1: function(handle) {
  return this.loadResource$2(handle,true)
},
 unloadResource$1: function(handle) {
  var t1, index;
  if (typeof handle !== 'number')
    return this.unloadResource$1$bailout(1, handle);
  if (handle === 0)
    return;
  t1 = this._handleSystem.validHandle$1(handle);
  if (typeof t1 !== 'boolean')
    return this.unloadResource$1$bailout(2, handle, t1);
  if (!t1) {
    $.spectreLog.Warning$1('deregisterHandle - ' + $.S(handle) + ' is not a valid handle');
    return;
  }
  index = $.Handle_getIndex(handle);
  t1 = this._resources;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (!(t1 == null))
    t1.unload$0();
},
 unloadResource$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      handle = env0;
      break;
    case 2:
      t1 = env1;
      handle = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if ($.eqB(handle, 0))
        return;
      t1 = this._handleSystem.validHandle$1(handle);
    case 2:
      var handle, t1, index;
      state0 = 0;
      if ($.eqB(t1, false)) {
        $.spectreLog.Warning$1('deregisterHandle - ' + $.S(handle) + ' is not a valid handle');
        return;
      }
      index = $.Handle_getIndex(handle);
      t1 = this._resources;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      t1 = t1[index];
      if (!(t1 == null))
        t1.unload$0();
  }
},
 batchUnload$1: function(handles) {
  var t1;
  for (t1 = $.iterator(handles); t1.get$hasNext() === true;)
    this.unloadResource$1(t1.next$0());
},
 addEventCallback$3: function(resourceHandle, eventType, callback) {
  var rb = this.getResource$1(resourceHandle);
  if (rb == null)
    return 0;
  if (eventType === 1)
    return rb.get$on().addUpdate$1(callback);
  else if (eventType === 2)
    return rb.get$on().addUnloaded$1(callback);
  return 0;
}
};

$$.vec2 = {"": ["x=", "y="],
 "super": "Object",
 makeZero$0: function() {
  this.x = 0;
  this.y = 0;
  return this;
},
 makeRaw$2: function(x_, y_) {
  this.x = $.toDouble(x_);
  this.y = $.toDouble(y_);
  return this;
},
 toString$0: function() {
  return $.S(this.x) + ',' + $.S(this.y);
},
 operator$negate$0: function() {
  return $.vec2$raw($.neg(this.x), $.neg(this.y));
},
 operator$sub$1: function(other) {
  return $.vec2$raw($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()));
},
 operator$add$1: function(other) {
  return $.vec2$raw($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$div$1: function(other) {
  var o;
  if (typeof other === 'number') {
    o = $.toDouble(other);
    return $.vec2$raw($.div(this.x, other), $.div(this.y, o));
  }
  if (typeof other === 'object' && other !== null && !!other.is$vec2)
    return $.vec2$raw($.div(this.x, other.x), $.div(this.y, other.y));
},
 operator$mul$1: function(other) {
  var o;
  if (typeof other === 'number') {
    o = $.toDouble(other);
    return $.vec2$raw($.mul(this.x, other), $.mul(this.y, o));
  }
  if (typeof other === 'object' && other !== null && !!other.is$vec2)
    return $.vec2$raw($.mul(this.x, other.x), $.mul(this.y, other.y));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
  }
  return 0;
},
 oprator$indexSet$2: function(i, v) {
  switch (i) {
    case 0:
      this.x = v;
      break;
    case 1:
      this.y = v;
      break;
  }
},
 get$length: function() {
  var t1, sum;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = this.y;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.sqrt(sum + t1);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  return this;
},
 normalized$1: function(out) {
  var l;
  if (out == null)
    out = $.vec2$raw(this.x, this.y);
  l = $.get$length(out);
  if ($.eqB(l, 0))
    return out;
  out.set$x($.div(out.get$x(), l));
  out.set$y($.div(out.get$y(), l));
  return out;
},
 get$normalized: function() { return new $.BoundClosure5(this, 'normalized$1'); },
 dot$1: function(other) {
  var t1, sum;
  t1 = $.mul(this.x, other.x);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = $.mul(this.y, other.y);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return sum + t1;
},
 cross$1: function(other) {
  return $.sub($.mul(this.x, other.get$y()), $.mul(this.y, other.get$x()));
},
 set$xy: function(arg) {
  this.x = arg.get$x();
  this.y = arg.get$y();
},
 get$xy: function() {
  return $.vec2$(this.x, this.y);
},
 add$1: function(arg) {
  var t1, t3, t5, t7;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.add$1$bailout1(1, arg, t1);
  t3 = arg.get$x();
  if (typeof t3 !== 'number')
    return this.add$1$bailout1(2, arg, t3, t1);
  this.x = t1 + t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.add$1$bailout1(3, arg, t5);
  t7 = arg.get$y();
  if (typeof t7 !== 'number')
    return this.add$1$bailout1(4, t5, t7);
  this.y = t5 + t7;
  return this;
},
 add$1$bailout1: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      arg = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      arg = env0;
      break;
    case 3:
      t5 = env1;
      arg = env0;
      break;
    case 4:
      t7 = env1;
      t5 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = arg.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = arg.get$y();
    case 4:
      var t1, arg, t3, t5, t7;
      state0 = 0;
      this.y = $.add(t5, t7);
      return this;
  }
},
 multiply$1: function(arg) {
  this.x = $.mul(this.x, arg.get$x());
  this.y = $.mul(this.y, arg.get$y());
  return this;
},
 scale$1: function(arg) {
  var a = $.toDouble(arg);
  this.x = $.mul(this.x, a);
  this.y = $.mul(this.y, a);
  return this;
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.x);
  i = $.add(offset, 1);
  $.indexSet(array, i, this.y);
  $.add(i, 1);
},
 copyIntoArray$1: function(array) {
  return this.copyIntoArray$2(array,0)
},
 vec2$zero$0: function() {
  this.makeZero$0();
},
 vec2$raw$2: function(x_, y_) {
  this.makeRaw$2(x_, y_);
},
 vec2$2: function(x_, y_) {
  var t1;
  this.y = 0;
  this.x = 0;
  if (typeof x_ === 'object' && x_ !== null && !!x_.is$vec2) {
    this.set$xy(x_.get$xy());
    return;
  }
  if (typeof x_ === 'number' && typeof y_ === 'number') {
    this.x = $.toDouble(x_);
    this.y = $.toDouble(y_);
    return;
  }
  if (typeof x_ === 'number') {
    t1 = $.toDouble(x_);
    this.y = t1;
    this.x = t1;
    return;
  }
  throw $.$$throw($.ArgumentError$('Invalid arguments'));
},
 is$vec2: true
};

$$.vec3 = {"": ["x=", "y=", "z="],
 "super": "Object",
 makeZero$0: function() {
  this.x = 0;
  this.y = 0;
  this.z = 0;
  return this;
},
 makeRaw$3: function(x_, y_, z_) {
  this.x = $.toDouble(x_);
  this.y = $.toDouble(y_);
  this.z = $.toDouble(z_);
  return this;
},
 toString$0: function() {
  return $.S(this.x) + ',' + $.S(this.y) + ',' + $.S(this.z);
},
 operator$negate$0: function() {
  return $.vec3$raw($.neg(this.x), $.neg(this.y), $.neg(this.z));
},
 operator$sub$1: function(other) {
  return $.vec3$raw($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()), $.sub(this.z, other.get$z()));
},
 operator$add$1: function(other) {
  return $.vec3$raw($.add(this.x, other.get$x()), $.add(this.y, other.get$y()), $.add(this.z, other.get$z()));
},
 operator$div$1: function(other) {
  var o;
  if (typeof other === 'number') {
    o = $.toDouble(other);
    return $.vec3$raw($.div(this.x, other), $.div(this.y, o), $.div(this.z, o));
  }
  if (typeof other === 'object' && other !== null && !!other.is$vec3)
    return $.vec3$raw($.div(this.x, other.x), $.div(this.y, other.y), $.div(this.z, other.z));
},
 operator$mul$1: function(other) {
  var o;
  if (typeof other === 'number') {
    o = $.toDouble(other);
    return $.vec3$raw($.mul(this.x, other), $.mul(this.y, o), $.mul(this.z, o));
  }
  if (typeof other === 'object' && other !== null && !!other.is$vec3)
    return $.vec3$raw($.mul(this.x, other.x), $.mul(this.y, other.y), $.mul(this.z, other.z));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
    case 2:
      return this.z;
  }
  return 0;
},
 oprator$indexSet$2: function(i, v) {
  switch (i) {
    case 0:
      this.x = v;
      break;
    case 1:
      this.y = v;
      break;
    case 2:
      this.z = v;
      break;
  }
},
 get$length: function() {
  var t1, sum;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = this.y;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = this.z;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.sqrt(sum + t1);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  this.z = $.div(this.z, l);
  return this;
},
 normalized$1: function(out) {
  var l;
  if (out == null)
    out = $.vec3$raw(this.x, this.y, this.z);
  l = $.get$length(out);
  if ($.eqB(l, 0))
    return out;
  out.set$x($.div(out.get$x(), l));
  out.set$y($.div(out.get$y(), l));
  out.set$z($.div(out.get$z(), l));
  return out;
},
 get$normalized: function() { return new $.BoundClosure6(this, 'normalized$1'); },
 dot$1: function(other) {
  var t1, sum;
  t1 = $.mul(this.x, other.x);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = $.mul(this.y, other.y);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = $.mul(this.z, other.z);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return sum + t1;
},
 cross$2: function(other, out) {
  if (out == null)
    out = $.vec3$zero();
  out.set$x($.sub($.mul(this.y, other.get$z()), $.mul(this.z, other.get$y())));
  out.set$y($.sub($.mul(this.z, other.get$x()), $.mul(this.x, other.get$z())));
  out.set$z($.sub($.mul(this.x, other.get$y()), $.mul(this.y, other.get$x())));
  return out;
},
 cross$1: function(other) {
  return this.cross$2(other,null)
},
 set$xy: function(arg) {
  this.x = arg.get$x();
  this.y = arg.get$y();
},
 set$yz: function(arg) {
  this.y = arg.get$x();
  this.z = arg.get$y();
},
 set$xyz: function(arg) {
  this.x = arg.get$x();
  this.y = arg.get$y();
  this.z = arg.get$z();
},
 get$xy: function() {
  return $.vec2$(this.x, this.y);
},
 get$xyz: function() {
  return $.vec3$(this.x, this.y, this.z);
},
 add$1: function(arg) {
  var t1, t3, t5, t7, t9, t11;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.add$1$bailout4(1, arg, t1);
  t3 = arg.get$x();
  if (typeof t3 !== 'number')
    return this.add$1$bailout4(2, arg, t1, t3);
  this.x = t1 + t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.add$1$bailout4(3, arg, t5);
  t7 = arg.get$y();
  if (typeof t7 !== 'number')
    return this.add$1$bailout4(4, arg, t7, t5);
  this.y = t5 + t7;
  t9 = this.z;
  if (typeof t9 !== 'number')
    return this.add$1$bailout4(5, t9, arg);
  t11 = arg.get$z();
  if (typeof t11 !== 'number')
    return this.add$1$bailout4(6, t9, t11);
  this.z = t9 + t11;
  return this;
},
 add$1$bailout4: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      arg = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      arg = env0;
      break;
    case 3:
      t5 = env1;
      arg = env0;
      break;
    case 4:
      t5 = env2;
      t7 = env1;
      arg = env0;
      break;
    case 5:
      arg = env1;
      t9 = env0;
      break;
    case 6:
      t11 = env1;
      t9 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = arg.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = arg.get$y();
    case 4:
      state0 = 0;
      this.y = $.add(t5, t7);
      t9 = this.z;
    case 5:
      state0 = 0;
      t11 = arg.get$z();
    case 6:
      var t1, arg, t3, t5, t7, t9, t11;
      state0 = 0;
      this.z = $.add(t9, t11);
      return this;
  }
},
 multiply$1: function(arg) {
  this.x = $.mul(this.x, arg.get$x());
  this.y = $.mul(this.y, arg.get$y());
  this.z = $.mul(this.z, arg.get$z());
  return this;
},
 scale$1: function(arg) {
  var a = $.toDouble(arg);
  this.x = $.mul(this.x, a);
  this.y = $.mul(this.y, a);
  this.z = $.mul(this.z, a);
  return this;
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.x);
  i = $.add(offset, 1);
  $.indexSet(array, i, this.y);
  i = $.add(i, 1);
  $.indexSet(array, i, this.z);
  $.add(i, 1);
},
 copyIntoArray$1: function(array) {
  return this.copyIntoArray$2(array,0)
},
 vec3$zero$0: function() {
  this.makeZero$0();
},
 vec3$3: function(x_, y_, z_) {
  var t1;
  this.z = 0;
  this.y = 0;
  this.x = 0;
  if (typeof x_ === 'object' && x_ !== null && !!x_.is$vec2 && typeof y_ === 'number') {
    this.set$xy(x_.get$xy());
    this.z = $.toDouble(y_);
  }
  if (typeof x_ === 'number' && typeof y_ === 'object' && y_ !== null && !!y_.is$vec2) {
    this.x = $.toDouble(x_);
    this.set$yz(y_.get$xy());
  }
  if (typeof x_ === 'object' && x_ !== null && !!x_.is$vec2 && y_ == null) {
    this.set$xy(x_.get$xy());
    this.z = 0;
  }
  if (typeof x_ === 'object' && x_ !== null && !!x_.is$vec3) {
    this.set$xyz(x_.get$xyz());
    return;
  }
  if (typeof x_ === 'number' && typeof y_ === 'number' && typeof z_ === 'number') {
    this.x = $.toDouble(x_);
    this.y = $.toDouble(y_);
    this.z = $.toDouble(z_);
    return;
  }
  if (typeof x_ === 'number') {
    t1 = $.toDouble(x_);
    this.z = t1;
    this.y = t1;
    this.x = t1;
    return;
  }
  throw $.$$throw($.ArgumentError$('Invalid arguments'));
},
 vec3$raw$3: function(x_, y_, z_) {
  this.makeRaw$3(x_, y_, z_);
},
 is$vec3: true
};

$$.vec4 = {"": ["x=", "y=", "z=", "w="],
 "super": "Object",
 makeZero$0: function() {
  this.x = 0;
  this.y = 0;
  this.z = 0;
  this.w = 0;
  return this;
},
 makeRaw$4: function(x_, y_, z_, w_) {
  this.x = $.toDouble(x_);
  this.y = $.toDouble(y_);
  this.z = $.toDouble(z_);
  this.w = $.toDouble(w_);
  return this;
},
 toString$0: function() {
  return $.S(this.x) + ',' + $.S(this.y) + ',' + $.S(this.z) + ',' + $.S(this.w);
},
 operator$negate$0: function() {
  return $.vec4$raw($.neg(this.x), $.neg(this.y), $.neg(this.z), $.neg(this.w));
},
 operator$sub$1: function(other) {
  return $.vec4$raw($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()), $.sub(this.z, other.get$z()), $.sub(this.w, other.get$w()));
},
 operator$add$1: function(other) {
  return $.vec4$raw($.add(this.x, other.get$x()), $.add(this.y, other.get$y()), $.add(this.z, other.get$z()), $.add(this.w, other.get$w()));
},
 operator$div$1: function(other) {
  var o;
  if (typeof other === 'number') {
    o = $.toDouble(other);
    return $.vec4$raw($.div(this.x, other), $.div(this.y, o), $.div(this.z, o), $.div(this.w, o));
  }
  if (typeof other === 'object' && other !== null && !!other.is$vec4)
    return $.vec4$raw($.div(this.x, other.x), $.div(this.y, other.y), $.div(this.z, other.z), $.div(this.w, other.w));
},
 operator$mul$1: function(other) {
  var o;
  if (typeof other === 'number') {
    o = $.toDouble(other);
    return $.vec4$raw($.mul(this.x, other), $.mul(this.y, o), $.mul(this.z, o), $.mul(this.w, o));
  }
  if (typeof other === 'object' && other !== null && !!other.is$vec4)
    return $.vec4$raw($.mul(this.x, other.x), $.mul(this.y, other.y), $.mul(this.z, other.z), $.mul(this.w, other.w));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
    case 2:
      return this.z;
    case 3:
      return this.w;
  }
  return 0;
},
 oprator$indexSet$2: function(i, v) {
  switch (i) {
    case 0:
      this.x = v;
      break;
    case 1:
      this.y = v;
      break;
    case 2:
      this.z = v;
      break;
    case 3:
      this.w = v;
      break;
  }
},
 get$length: function() {
  var t1, sum;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = this.y;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = this.z;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = this.w;
  t1 = $.mul(t1, t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.sqrt(sum + t1);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  this.z = $.div(this.z, l);
  this.w = $.div(this.w, l);
  return this;
},
 normalized$1: function(out) {
  var l;
  if (out == null)
    out = $.vec4$raw(this.x, this.y, this.z, this.w);
  l = $.get$length(out);
  if ($.eqB(l, 0))
    return out;
  out.set$x($.div(out.get$x(), l));
  out.set$y($.div(out.get$y(), l));
  out.set$z($.div(out.get$z(), l));
  out.set$w($.div(out.get$w(), l));
  return out;
},
 get$normalized: function() { return new $.BoundClosure7(this, 'normalized$1'); },
 dot$1: function(other) {
  var t1, sum;
  t1 = $.mul(this.x, other.x);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum = 0 + t1;
  t1 = $.mul(this.y, other.y);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = $.mul(this.z, other.z);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  sum += t1;
  t1 = $.mul(this.w, other.get$w());
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return sum + t1;
},
 set$xyz: function(arg) {
  this.x = arg.get$x();
  this.y = arg.get$y();
  this.z = arg.get$z();
},
 get$xy: function() {
  return $.vec2$(this.x, this.y);
},
 add$1: function(arg) {
  var t1, t3, t5, t7, t9, t11, t13, t15;
  t1 = this.x;
  if (typeof t1 !== 'number')
    return this.add$1$bailout2(1, arg, t1);
  t3 = arg.get$x();
  if (typeof t3 !== 'number')
    return this.add$1$bailout2(2, arg, t1, t3);
  this.x = t1 + t3;
  t5 = this.y;
  if (typeof t5 !== 'number')
    return this.add$1$bailout2(3, arg, t5);
  t7 = arg.get$y();
  if (typeof t7 !== 'number')
    return this.add$1$bailout2(4, arg, t7, t5);
  this.y = t5 + t7;
  t9 = this.z;
  if (typeof t9 !== 'number')
    return this.add$1$bailout2(5, arg, t9);
  t11 = arg.get$z();
  if (typeof t11 !== 'number')
    return this.add$1$bailout2(6, arg, t9, t11);
  this.z = t9 + t11;
  t13 = this.w;
  if (typeof t13 !== 'number')
    return this.add$1$bailout2(7, arg, t13);
  t15 = arg.get$w();
  if (typeof t15 !== 'number')
    return this.add$1$bailout2(8, t15, t13);
  this.w = t13 + t15;
  return this;
},
 add$1$bailout2: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      arg = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      arg = env0;
      break;
    case 3:
      t5 = env1;
      arg = env0;
      break;
    case 4:
      t5 = env2;
      t7 = env1;
      arg = env0;
      break;
    case 5:
      t9 = env1;
      arg = env0;
      break;
    case 6:
      t11 = env2;
      t9 = env1;
      arg = env0;
      break;
    case 7:
      t13 = env1;
      arg = env0;
      break;
    case 8:
      t13 = env1;
      t15 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.x;
    case 1:
      state0 = 0;
      t3 = arg.get$x();
    case 2:
      state0 = 0;
      this.x = $.add(t1, t3);
      t5 = this.y;
    case 3:
      state0 = 0;
      t7 = arg.get$y();
    case 4:
      state0 = 0;
      this.y = $.add(t5, t7);
      t9 = this.z;
    case 5:
      state0 = 0;
      t11 = arg.get$z();
    case 6:
      state0 = 0;
      this.z = $.add(t9, t11);
      t13 = this.w;
    case 7:
      state0 = 0;
      t15 = arg.get$w();
    case 8:
      var t1, arg, t3, t5, t7, t9, t11, t13, t15;
      state0 = 0;
      this.w = $.add(t13, t15);
      return this;
  }
},
 multiply$1: function(arg) {
  this.x = $.mul(this.x, arg.get$x());
  this.y = $.mul(this.y, arg.get$y());
  this.z = $.mul(this.z, arg.get$z());
  this.w = $.mul(this.w, arg.get$w());
  return this;
},
 scale$1: function(arg) {
  var a = $.toDouble(arg);
  this.x = $.mul(this.x, a);
  this.y = $.mul(this.y, a);
  this.z = $.mul(this.z, a);
  this.w = $.mul(this.w, a);
  return this;
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.x);
  i = $.add(offset, 1);
  $.indexSet(array, i, this.y);
  i = $.add(i, 1);
  $.indexSet(array, i, this.z);
  i = $.add(i, 1);
  $.indexSet(array, i, this.w);
  $.add(i, 1);
},
 copyIntoArray$1: function(array) {
  return this.copyIntoArray$2(array,0)
},
 vec4$raw$4: function(x_, y_, z_, w_) {
  this.makeRaw$4(x_, y_, z_, w_);
},
 vec4$zero$0: function() {
  this.makeZero$0();
},
 is$vec4: true
};

$$.mat4 = {"": ["col0>", "col1>", "col2>", "col3>"],
 "super": "Object",
 toString$0: function() {
  return '[0] ' + $.S(this.getRow$1(0)) + '\n' + '[1] ' + $.S(this.getRow$1(1)) + '\n' + '[2] ' + $.S(this.getRow$1(2)) + '\n' + '[3] ' + $.S(this.getRow$1(3)) + '\n';
},
 get$rows: function() {
  return 4;
},
 get$cols: function() {
  return 4;
},
 get$length: function() {
  return 4;
},
 operator$index$1: function(column) {
  switch (column) {
    case 0:
      return this.col0;
    case 1:
      return this.col1;
    case 2:
      return this.col2;
    case 3:
      return this.col3;
  }
  throw $.$$throw($.ArgumentError$(column));
},
 oprator$indexSet$2: function(column, arg) {
  switch (column) {
    case 0:
      this.col0 = arg;
      break;
    case 1:
      this.col1 = arg;
      break;
    case 2:
      this.col2 = arg;
      break;
    case 3:
      this.col3 = arg;
      break;
  }
  throw $.$$throw($.ArgumentError$(column));
},
 getRow$1: function(row) {
  var r = $.vec4$zero();
  r.x = $.index(this.col0, row);
  r.y = $.index(this.col1, row);
  r.z = $.index(this.col2, row);
  r.w = $.index(this.col3, row);
  return r;
},
 operator$mul$1: function(arg) {
  var r, t1;
  if (typeof arg === 'number') {
    r = $.mat4$zero();
    t1 = $.mul(this.col0.get$x(), arg);
    r.col0.set$x(t1);
    t1 = $.mul(this.col0.get$y(), arg);
    r.col0.set$y(t1);
    t1 = $.mul(this.col0.get$z(), arg);
    r.col0.set$z(t1);
    t1 = $.mul(this.col0.get$w(), arg);
    r.col0.set$w(t1);
    t1 = $.mul(this.col1.get$x(), arg);
    r.col1.set$x(t1);
    t1 = $.mul(this.col1.get$y(), arg);
    r.col1.set$y(t1);
    t1 = $.mul(this.col1.get$z(), arg);
    r.col1.set$z(t1);
    t1 = $.mul(this.col1.get$w(), arg);
    r.col1.set$w(t1);
    t1 = $.mul(this.col2.get$x(), arg);
    r.col2.set$x(t1);
    t1 = $.mul(this.col2.get$y(), arg);
    r.col2.set$y(t1);
    t1 = $.mul(this.col2.get$z(), arg);
    r.col2.set$z(t1);
    t1 = $.mul(this.col2.get$w(), arg);
    r.col2.set$w(t1);
    t1 = $.mul(this.col3.get$x(), arg);
    r.col3.set$x(t1);
    t1 = $.mul(this.col3.get$y(), arg);
    r.col3.set$y(t1);
    t1 = $.mul(this.col3.get$z(), arg);
    r.col3.set$z(t1);
    t1 = $.mul(this.col3.get$w(), arg);
    r.col3.set$w(t1);
    return r;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    r = $.vec4$zero();
    r.x = $.add($.add($.add($.mul(this.col0.get$x(), arg.x), $.mul(this.col1.get$x(), arg.y)), $.mul(this.col2.get$x(), arg.z)), $.mul(this.col3.get$x(), arg.w));
    r.y = $.add($.add($.add($.mul(this.col0.get$y(), arg.x), $.mul(this.col1.get$y(), arg.y)), $.mul(this.col2.get$y(), arg.z)), $.mul(this.col3.get$y(), arg.w));
    r.z = $.add($.add($.add($.mul(this.col0.get$z(), arg.x), $.mul(this.col1.get$z(), arg.y)), $.mul(this.col2.get$z(), arg.z)), $.mul(this.col3.get$z(), arg.w));
    r.w = $.add($.add($.add($.mul(this.col0.get$w(), arg.x), $.mul(this.col1.get$w(), arg.y)), $.mul(this.col2.get$w(), arg.z)), $.mul(this.col3.get$w(), arg.w));
    return r;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    r = $.vec3$zero();
    r.x = $.add($.add($.add($.mul(this.col0.get$x(), arg.x), $.mul(this.col1.get$x(), arg.y)), $.mul(this.col2.get$x(), arg.z)), this.col3.get$x());
    r.y = $.add($.add($.add($.mul(this.col0.get$y(), arg.x), $.mul(this.col1.get$y(), arg.y)), $.mul(this.col2.get$y(), arg.z)), this.col3.get$y());
    r.z = $.add($.add($.add($.mul(this.col0.get$z(), arg.x), $.mul(this.col1.get$z(), arg.y)), $.mul(this.col2.get$z(), arg.z)), this.col3.get$z());
    return r;
  }
  if (4 === arg.get$rows()) {
    if ($.eqB(arg.get$cols(), 4)) {
      r = $.mat4$zero();
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col0().get$x()), $.mul(this.col1.get$x(), arg.get$col0().get$y())), $.mul(this.col2.get$x(), arg.get$col0().get$z())), $.mul(this.col3.get$x(), arg.get$col0().get$w()));
      r.col0.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col1().get$x()), $.mul(this.col1.get$x(), arg.get$col1().get$y())), $.mul(this.col2.get$x(), arg.get$col1().get$z())), $.mul(this.col3.get$x(), arg.get$col1().get$w()));
      r.col1.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col2().get$x()), $.mul(this.col1.get$x(), arg.get$col2().get$y())), $.mul(this.col2.get$x(), arg.get$col2().get$z())), $.mul(this.col3.get$x(), arg.get$col2().get$w()));
      r.col2.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$x(), arg.get$col3().get$x()), $.mul(this.col1.get$x(), arg.get$col3().get$y())), $.mul(this.col2.get$x(), arg.get$col3().get$z())), $.mul(this.col3.get$x(), arg.get$col3().get$w()));
      r.col3.set$x(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col0().get$x()), $.mul(this.col1.get$y(), arg.get$col0().get$y())), $.mul(this.col2.get$y(), arg.get$col0().get$z())), $.mul(this.col3.get$y(), arg.get$col0().get$w()));
      r.col0.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col1().get$x()), $.mul(this.col1.get$y(), arg.get$col1().get$y())), $.mul(this.col2.get$y(), arg.get$col1().get$z())), $.mul(this.col3.get$y(), arg.get$col1().get$w()));
      r.col1.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col2().get$x()), $.mul(this.col1.get$y(), arg.get$col2().get$y())), $.mul(this.col2.get$y(), arg.get$col2().get$z())), $.mul(this.col3.get$y(), arg.get$col2().get$w()));
      r.col2.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$y(), arg.get$col3().get$x()), $.mul(this.col1.get$y(), arg.get$col3().get$y())), $.mul(this.col2.get$y(), arg.get$col3().get$z())), $.mul(this.col3.get$y(), arg.get$col3().get$w()));
      r.col3.set$y(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col0().get$x()), $.mul(this.col1.get$z(), arg.get$col0().get$y())), $.mul(this.col2.get$z(), arg.get$col0().get$z())), $.mul(this.col3.get$z(), arg.get$col0().get$w()));
      r.col0.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col1().get$x()), $.mul(this.col1.get$z(), arg.get$col1().get$y())), $.mul(this.col2.get$z(), arg.get$col1().get$z())), $.mul(this.col3.get$z(), arg.get$col1().get$w()));
      r.col1.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col2().get$x()), $.mul(this.col1.get$z(), arg.get$col2().get$y())), $.mul(this.col2.get$z(), arg.get$col2().get$z())), $.mul(this.col3.get$z(), arg.get$col2().get$w()));
      r.col2.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$z(), arg.get$col3().get$x()), $.mul(this.col1.get$z(), arg.get$col3().get$y())), $.mul(this.col2.get$z(), arg.get$col3().get$z())), $.mul(this.col3.get$z(), arg.get$col3().get$w()));
      r.col3.set$z(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col0().get$x()), $.mul(this.col1.get$w(), arg.get$col0().get$y())), $.mul(this.col2.get$w(), arg.get$col0().get$z())), $.mul(this.col3.get$w(), arg.get$col0().get$w()));
      r.col0.set$w(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col1().get$x()), $.mul(this.col1.get$w(), arg.get$col1().get$y())), $.mul(this.col2.get$w(), arg.get$col1().get$z())), $.mul(this.col3.get$w(), arg.get$col1().get$w()));
      r.col1.set$w(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col2().get$x()), $.mul(this.col1.get$w(), arg.get$col2().get$y())), $.mul(this.col2.get$w(), arg.get$col2().get$z())), $.mul(this.col3.get$w(), arg.get$col2().get$w()));
      r.col2.set$w(t1);
      t1 = $.add($.add($.add($.mul(this.col0.get$w(), arg.get$col3().get$x()), $.mul(this.col1.get$w(), arg.get$col3().get$y())), $.mul(this.col2.get$w(), arg.get$col3().get$z())), $.mul(this.col3.get$w(), arg.get$col3().get$w()));
      r.col3.set$w(t1);
      return r;
    }
    return;
  }
  throw $.$$throw($.ArgumentError$(arg));
},
 operator$add$1: function(arg) {
  var r, t1;
  r = $.mat4$zero();
  t1 = $.add(this.col0.get$x(), arg.get$col0().get$x());
  r.col0.set$x(t1);
  t1 = $.add(this.col0.get$y(), arg.get$col0().get$y());
  r.col0.set$y(t1);
  t1 = $.add(this.col0.get$z(), arg.get$col0().get$z());
  r.col0.set$z(t1);
  t1 = $.add(this.col0.get$w(), arg.get$col0().get$w());
  r.col0.set$w(t1);
  t1 = $.add(this.col1.get$x(), arg.get$col1().get$x());
  r.col1.set$x(t1);
  t1 = $.add(this.col1.get$y(), arg.get$col1().get$y());
  r.col1.set$y(t1);
  t1 = $.add(this.col1.get$z(), arg.get$col1().get$z());
  r.col1.set$z(t1);
  t1 = $.add(this.col1.get$w(), arg.get$col1().get$w());
  r.col1.set$w(t1);
  t1 = $.add(this.col2.get$x(), arg.get$col2().get$x());
  r.col2.set$x(t1);
  t1 = $.add(this.col2.get$y(), arg.get$col2().get$y());
  r.col2.set$y(t1);
  t1 = $.add(this.col2.get$z(), arg.get$col2().get$z());
  r.col2.set$z(t1);
  t1 = $.add(this.col2.get$w(), arg.get$col2().get$w());
  r.col2.set$w(t1);
  t1 = $.add(this.col3.get$x(), arg.get$col3().get$x());
  r.col3.set$x(t1);
  t1 = $.add(this.col3.get$y(), arg.get$col3().get$y());
  r.col3.set$y(t1);
  t1 = $.add(this.col3.get$z(), arg.get$col3().get$z());
  r.col3.set$z(t1);
  t1 = $.add(this.col3.get$w(), arg.get$col3().get$w());
  r.col3.set$w(t1);
  return r;
},
 operator$sub$1: function(arg) {
  var r, t1;
  r = $.mat4$zero();
  t1 = $.sub(this.col0.get$x(), arg.get$col0().get$x());
  r.col0.set$x(t1);
  t1 = $.sub(this.col0.get$y(), arg.get$col0().get$y());
  r.col0.set$y(t1);
  t1 = $.sub(this.col0.get$z(), arg.get$col0().get$z());
  r.col0.set$z(t1);
  t1 = $.sub(this.col0.get$w(), arg.get$col0().get$w());
  r.col0.set$w(t1);
  t1 = $.sub(this.col1.get$x(), arg.get$col1().get$x());
  r.col1.set$x(t1);
  t1 = $.sub(this.col1.get$y(), arg.get$col1().get$y());
  r.col1.set$y(t1);
  t1 = $.sub(this.col1.get$z(), arg.get$col1().get$z());
  r.col1.set$z(t1);
  t1 = $.sub(this.col1.get$w(), arg.get$col1().get$w());
  r.col1.set$w(t1);
  t1 = $.sub(this.col2.get$x(), arg.get$col2().get$x());
  r.col2.set$x(t1);
  t1 = $.sub(this.col2.get$y(), arg.get$col2().get$y());
  r.col2.set$y(t1);
  t1 = $.sub(this.col2.get$z(), arg.get$col2().get$z());
  r.col2.set$z(t1);
  t1 = $.sub(this.col2.get$w(), arg.get$col2().get$w());
  r.col2.set$w(t1);
  t1 = $.sub(this.col3.get$x(), arg.get$col3().get$x());
  r.col3.set$x(t1);
  t1 = $.sub(this.col3.get$y(), arg.get$col3().get$y());
  r.col3.set$y(t1);
  t1 = $.sub(this.col3.get$z(), arg.get$col3().get$z());
  r.col3.set$z(t1);
  t1 = $.sub(this.col3.get$w(), arg.get$col3().get$w());
  r.col3.set$w(t1);
  return r;
},
 translate$3: function(x, y, z) {
  var tw, tx, ty, tz, t1, t2, t3, t4;
  tw = typeof x === 'object' && x !== null && !!x.is$vec4 ? x.w : 1;
  if (typeof x === 'object' && x !== null && !!x.is$vec3 || typeof x === 'object' && x !== null && !!x.is$vec4) {
    tx = x.get$x();
    ty = x.get$y();
    tz = x.get$z();
  } else {
    tz = z;
    ty = y;
    tx = x;
  }
  t1 = $.add($.add($.add($.mul(this.col0.get$x(), tx), $.mul(this.col1.get$x(), ty)), $.mul(this.col2.get$x(), tz)), $.mul(this.col3.get$x(), tw));
  t2 = $.add($.add($.add($.mul(this.col0.get$y(), tx), $.mul(this.col1.get$y(), ty)), $.mul(this.col2.get$y(), tz)), $.mul(this.col3.get$y(), tw));
  t3 = $.add($.add($.add($.mul(this.col0.get$z(), tx), $.mul(this.col1.get$z(), ty)), $.mul(this.col2.get$z(), tz)), $.mul(this.col3.get$z(), tw));
  t4 = $.add($.add($.add($.mul(this.col0.get$w(), tx), $.mul(this.col1.get$w(), ty)), $.mul(this.col2.get$w(), tz)), $.mul(this.col3.get$w(), tw));
  this.col3.set$x(t1);
  this.col3.set$y(t2);
  this.col3.set$z(t3);
  this.col3.set$w(t4);
  return this;
},
 translate$2: function(x,y) {
  return this.translate$3(x,y,0)
},
 scale$3: function(x, y, z) {
  var sw, sx, sy, sz, t1;
  sw = typeof x === 'object' && x !== null && !!x.is$vec4 ? x.w : 1;
  if (typeof x === 'object' && x !== null && !!x.is$vec3 || typeof x === 'object' && x !== null && !!x.is$vec4) {
    sx = x.get$x();
    sy = x.get$y();
    sz = x.get$z();
  } else {
    sy = y == null ? x : $.toDouble(y);
    sz = z == null ? x : $.toDouble(z);
    sx = x;
  }
  t1 = this.col0;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col1;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col2;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col3;
  t1.set$x($.mul(t1.get$x(), sx));
  t1 = this.col0;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col1;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col2;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col3;
  t1.set$y($.mul(t1.get$y(), sy));
  t1 = this.col0;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col1;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col2;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col3;
  t1.set$z($.mul(t1.get$z(), sz));
  t1 = this.col0;
  t1.set$w($.mul(t1.get$w(), sw));
  t1 = this.col1;
  t1.set$w($.mul(t1.get$w(), sw));
  t1 = this.col2;
  t1.set$w($.mul(t1.get$w(), sw));
  t1 = this.col3;
  t1.set$w($.mul(t1.get$w(), sw));
  return this;
},
 scale$1: function(x) {
  return this.scale$3(x,null,null)
},
 operator$negate$0: function() {
  var r = $.mat4$zero();
  r.oprator$indexSet$2(0, $.neg(this.operator$index$1(0)));
  r.oprator$indexSet$2(1, $.neg(this.operator$index$1(1)));
  r.oprator$indexSet$2(2, $.neg(this.operator$index$1(2)));
  r.oprator$indexSet$2(3, $.neg(this.operator$index$1(3)));
  return r;
},
 transposed$0: function() {
  var r, t1;
  r = $.mat4$zero();
  t1 = this.col0.get$x();
  r.col0.set$x(t1);
  t1 = this.col1.get$x();
  r.col0.set$y(t1);
  t1 = this.col2.get$x();
  r.col0.set$z(t1);
  t1 = this.col3.get$x();
  r.col0.set$w(t1);
  t1 = this.col0.get$y();
  r.col1.set$x(t1);
  t1 = this.col1.get$y();
  r.col1.set$y(t1);
  t1 = this.col2.get$y();
  r.col1.set$z(t1);
  t1 = this.col3.get$y();
  r.col1.set$w(t1);
  t1 = this.col0.get$z();
  r.col2.set$x(t1);
  t1 = this.col1.get$z();
  r.col2.set$y(t1);
  t1 = this.col2.get$z();
  r.col2.set$z(t1);
  t1 = this.col3.get$z();
  r.col2.set$w(t1);
  t1 = this.col0.get$w();
  r.col3.set$x(t1);
  t1 = this.col1.get$w();
  r.col3.set$y(t1);
  t1 = this.col2.get$w();
  r.col3.set$z(t1);
  t1 = this.col3.get$w();
  r.col3.set$w(t1);
  return r;
},
 setRotationX$1: function(radians) {
  var radians_, c, s, t1;
  radians_ = $.toDouble(radians);
  c = $.cos(radians_);
  s = $.sin(radians_);
  this.col0.set$x(1);
  this.col0.set$y(0);
  this.col0.set$z(0);
  this.col1.set$x(0);
  this.col1.set$y(c);
  this.col1.set$z(s);
  this.col2.set$x(0);
  t1 = -s;
  this.col2.set$y(t1);
  this.col2.set$z(c);
  this.col0.set$w(0);
  this.col1.set$w(0);
  this.col2.set$w(0);
},
 add$1: function(o) {
  var t1, t2, t4, t6, t8, t10, t12, t14, t16, t18, t20, t22, t24, t26, t28, t30, t32, t34, t36, t38, t40, t42, t44, t46, t48, t50, t52, t54, t56, t58, t60, t62, t64;
  t1 = this.col0;
  t2 = t1.get$x();
  if (typeof t2 !== 'number')
    return this.add$1$bailout3(1, o, t2);
  t4 = o.get$col0().get$x();
  if (typeof t4 !== 'number')
    return this.add$1$bailout3(2, o, t2, t4);
  t1.set$x(t2 + t4);
  t1 = this.col0;
  t6 = t1.get$y();
  if (typeof t6 !== 'number')
    return this.add$1$bailout3(3, o, t6);
  t8 = o.get$col0().get$y();
  if (typeof t8 !== 'number')
    return this.add$1$bailout3(4, o, t6, t8);
  t1.set$y(t6 + t8);
  t1 = this.col0;
  t10 = t1.get$z();
  if (typeof t10 !== 'number')
    return this.add$1$bailout3(5, o, t10);
  t12 = o.get$col0().get$z();
  if (typeof t12 !== 'number')
    return this.add$1$bailout3(6, o, t10, t12);
  t1.set$z(t10 + t12);
  t1 = this.col0;
  t14 = t1.get$w();
  if (typeof t14 !== 'number')
    return this.add$1$bailout3(7, o, t14);
  t16 = o.get$col0().get$w();
  if (typeof t16 !== 'number')
    return this.add$1$bailout3(8, o, t14, t16);
  t1.set$w(t14 + t16);
  t1 = this.col1;
  t18 = t1.get$x();
  if (typeof t18 !== 'number')
    return this.add$1$bailout3(9, o, t18);
  t20 = o.get$col1().get$x();
  if (typeof t20 !== 'number')
    return this.add$1$bailout3(10, o, t18, t20);
  t1.set$x(t18 + t20);
  t1 = this.col1;
  t22 = t1.get$y();
  if (typeof t22 !== 'number')
    return this.add$1$bailout3(11, o, t22);
  t24 = o.get$col1().get$y();
  if (typeof t24 !== 'number')
    return this.add$1$bailout3(12, o, t22, t24);
  t1.set$y(t22 + t24);
  t1 = this.col1;
  t26 = t1.get$z();
  if (typeof t26 !== 'number')
    return this.add$1$bailout3(13, o, t26);
  t28 = o.get$col1().get$z();
  if (typeof t28 !== 'number')
    return this.add$1$bailout3(14, o, t26, t28);
  t1.set$z(t26 + t28);
  t1 = this.col1;
  t30 = t1.get$w();
  if (typeof t30 !== 'number')
    return this.add$1$bailout3(15, o, t30);
  t32 = o.get$col1().get$w();
  if (typeof t32 !== 'number')
    return this.add$1$bailout3(16, o, t30, t32);
  t1.set$w(t30 + t32);
  t1 = this.col2;
  t34 = t1.get$x();
  if (typeof t34 !== 'number')
    return this.add$1$bailout3(17, o, t34);
  t36 = o.get$col2().get$x();
  if (typeof t36 !== 'number')
    return this.add$1$bailout3(18, o, t34, t36);
  t1.set$x(t34 + t36);
  t1 = this.col2;
  t38 = t1.get$y();
  if (typeof t38 !== 'number')
    return this.add$1$bailout3(19, o, t38);
  t40 = o.get$col2().get$y();
  if (typeof t40 !== 'number')
    return this.add$1$bailout3(20, o, t38, t40);
  t1.set$y(t38 + t40);
  t1 = this.col2;
  t42 = t1.get$z();
  if (typeof t42 !== 'number')
    return this.add$1$bailout3(21, o, t42);
  t44 = o.get$col2().get$z();
  if (typeof t44 !== 'number')
    return this.add$1$bailout3(22, o, t42, t44);
  t1.set$z(t42 + t44);
  t1 = this.col2;
  t46 = t1.get$w();
  if (typeof t46 !== 'number')
    return this.add$1$bailout3(23, o, t46);
  t48 = o.get$col2().get$w();
  if (typeof t48 !== 'number')
    return this.add$1$bailout3(24, o, t46, t48);
  t1.set$w(t46 + t48);
  t1 = this.col3;
  t50 = t1.get$x();
  if (typeof t50 !== 'number')
    return this.add$1$bailout3(25, o, t50);
  t52 = o.get$col3().get$x();
  if (typeof t52 !== 'number')
    return this.add$1$bailout3(26, o, t50, t52);
  t1.set$x(t50 + t52);
  t1 = this.col3;
  t54 = t1.get$y();
  if (typeof t54 !== 'number')
    return this.add$1$bailout3(27, o, t54);
  t56 = o.get$col3().get$y();
  if (typeof t56 !== 'number')
    return this.add$1$bailout3(28, o, t54, t56);
  t1.set$y(t54 + t56);
  t1 = this.col3;
  t58 = t1.get$z();
  if (typeof t58 !== 'number')
    return this.add$1$bailout3(29, o, t58);
  t60 = o.get$col3().get$z();
  if (typeof t60 !== 'number')
    return this.add$1$bailout3(30, o, t58, t60);
  t1.set$z(t58 + t60);
  t1 = this.col3;
  t62 = t1.get$w();
  if (typeof t62 !== 'number')
    return this.add$1$bailout3(31, o, t62);
  t64 = o.get$col3().get$w();
  if (typeof t64 !== 'number')
    return this.add$1$bailout3(32, t62, t64);
  t1.set$w(t62 + t64);
  return this;
},
 add$1$bailout3: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env1;
      o = env0;
      break;
    case 2:
      t3 = env2;
      t1 = env1;
      o = env0;
      break;
    case 3:
      t3 = env1;
      o = env0;
      break;
    case 4:
      t5 = env2;
      t3 = env1;
      o = env0;
      break;
    case 5:
      t5 = env1;
      o = env0;
      break;
    case 6:
      t7 = env2;
      t5 = env1;
      o = env0;
      break;
    case 7:
      t7 = env1;
      o = env0;
      break;
    case 8:
      t9 = env2;
      t7 = env1;
      o = env0;
      break;
    case 9:
      t9 = env1;
      o = env0;
      break;
    case 10:
      t11 = env2;
      t9 = env1;
      o = env0;
      break;
    case 11:
      t11 = env1;
      o = env0;
      break;
    case 12:
      t13 = env2;
      t11 = env1;
      o = env0;
      break;
    case 13:
      t13 = env1;
      o = env0;
      break;
    case 14:
      t15 = env2;
      t13 = env1;
      o = env0;
      break;
    case 15:
      t15 = env1;
      o = env0;
      break;
    case 16:
      t17 = env2;
      t15 = env1;
      o = env0;
      break;
    case 17:
      t17 = env1;
      o = env0;
      break;
    case 18:
      t19 = env2;
      t17 = env1;
      o = env0;
      break;
    case 19:
      t19 = env1;
      o = env0;
      break;
    case 20:
      t21 = env2;
      t19 = env1;
      o = env0;
      break;
    case 21:
      t21 = env1;
      o = env0;
      break;
    case 22:
      t23 = env2;
      t21 = env1;
      o = env0;
      break;
    case 23:
      t23 = env1;
      o = env0;
      break;
    case 24:
      t25 = env2;
      t23 = env1;
      o = env0;
      break;
    case 25:
      t25 = env1;
      o = env0;
      break;
    case 26:
      t27 = env2;
      t25 = env1;
      o = env0;
      break;
    case 27:
      t27 = env1;
      o = env0;
      break;
    case 28:
      t29 = env2;
      t27 = env1;
      o = env0;
      break;
    case 29:
      t29 = env1;
      o = env0;
      break;
    case 30:
      t31 = env2;
      t29 = env1;
      o = env0;
      break;
    case 31:
      t31 = env1;
      o = env0;
      break;
    case 32:
      t33 = env1;
      t31 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.col0.get$x();
    case 1:
      state0 = 0;
      t3 = o.get$col0().get$x();
    case 2:
      state0 = 0;
      t3 = $.add(t1, t3);
      this.col0.set$x(t3);
      t3 = this.col0.get$y();
    case 3:
      state0 = 0;
      t5 = o.get$col0().get$y();
    case 4:
      state0 = 0;
      t5 = $.add(t3, t5);
      this.col0.set$y(t5);
      t5 = this.col0.get$z();
    case 5:
      state0 = 0;
      t7 = o.get$col0().get$z();
    case 6:
      state0 = 0;
      t7 = $.add(t5, t7);
      this.col0.set$z(t7);
      t7 = this.col0.get$w();
    case 7:
      state0 = 0;
      t9 = o.get$col0().get$w();
    case 8:
      state0 = 0;
      t9 = $.add(t7, t9);
      this.col0.set$w(t9);
      t9 = this.col1.get$x();
    case 9:
      state0 = 0;
      t11 = o.get$col1().get$x();
    case 10:
      state0 = 0;
      t11 = $.add(t9, t11);
      this.col1.set$x(t11);
      t11 = this.col1.get$y();
    case 11:
      state0 = 0;
      t13 = o.get$col1().get$y();
    case 12:
      state0 = 0;
      t13 = $.add(t11, t13);
      this.col1.set$y(t13);
      t13 = this.col1.get$z();
    case 13:
      state0 = 0;
      t15 = o.get$col1().get$z();
    case 14:
      state0 = 0;
      t15 = $.add(t13, t15);
      this.col1.set$z(t15);
      t15 = this.col1.get$w();
    case 15:
      state0 = 0;
      t17 = o.get$col1().get$w();
    case 16:
      state0 = 0;
      t17 = $.add(t15, t17);
      this.col1.set$w(t17);
      t17 = this.col2.get$x();
    case 17:
      state0 = 0;
      t19 = o.get$col2().get$x();
    case 18:
      state0 = 0;
      t19 = $.add(t17, t19);
      this.col2.set$x(t19);
      t19 = this.col2.get$y();
    case 19:
      state0 = 0;
      t21 = o.get$col2().get$y();
    case 20:
      state0 = 0;
      t21 = $.add(t19, t21);
      this.col2.set$y(t21);
      t21 = this.col2.get$z();
    case 21:
      state0 = 0;
      t23 = o.get$col2().get$z();
    case 22:
      state0 = 0;
      t23 = $.add(t21, t23);
      this.col2.set$z(t23);
      t23 = this.col2.get$w();
    case 23:
      state0 = 0;
      t25 = o.get$col2().get$w();
    case 24:
      state0 = 0;
      t25 = $.add(t23, t25);
      this.col2.set$w(t25);
      t25 = this.col3.get$x();
    case 25:
      state0 = 0;
      t27 = o.get$col3().get$x();
    case 26:
      state0 = 0;
      t27 = $.add(t25, t27);
      this.col3.set$x(t27);
      t27 = this.col3.get$y();
    case 27:
      state0 = 0;
      t29 = o.get$col3().get$y();
    case 28:
      state0 = 0;
      t29 = $.add(t27, t29);
      this.col3.set$y(t29);
      t29 = this.col3.get$z();
    case 29:
      state0 = 0;
      t31 = o.get$col3().get$z();
    case 30:
      state0 = 0;
      t31 = $.add(t29, t31);
      this.col3.set$z(t31);
      t31 = this.col3.get$w();
    case 31:
      state0 = 0;
      t33 = o.get$col3().get$w();
    case 32:
      var t1, o, t3, t5, t7, t9, t11, t13, t15, t17, t19, t21, t23, t25, t27, t29, t31, t33;
      state0 = 0;
      t33 = $.add(t31, t33);
      this.col3.set$w(t33);
      return this;
  }
},
 multiply$1: function(arg) {
  var t1, m00, t2, m01, t3, m02, t4, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33, n00, n01, n02, n03, n10, n11, n12, n13, n20, n21, n22, n23, n30, n31, n32, n33;
  t1 = this.col0;
  m00 = t1.get$x();
  t2 = this.col1;
  m01 = t2.get$x();
  t3 = this.col2;
  m02 = t3.get$x();
  t4 = this.col3;
  m03 = t4.get$x();
  m10 = t1.get$y();
  m11 = t2.get$y();
  m12 = t3.get$y();
  m13 = t4.get$y();
  m20 = t1.get$z();
  m21 = t2.get$z();
  m22 = t3.get$z();
  m23 = t4.get$z();
  m30 = t1.get$w();
  m31 = t2.get$w();
  m32 = t3.get$w();
  m33 = t4.get$w();
  t4 = arg.col0;
  n00 = t4.get$x();
  t3 = arg.col1;
  n01 = t3.get$x();
  t2 = arg.col2;
  n02 = t2.get$x();
  t1 = arg.col3;
  n03 = t1.get$x();
  n10 = t4.get$y();
  n11 = t3.get$y();
  n12 = t2.get$y();
  n13 = t1.get$y();
  n20 = t4.get$z();
  n21 = t3.get$z();
  n22 = t2.get$z();
  n23 = t1.get$z();
  n30 = t4.get$w();
  n31 = t3.get$w();
  n32 = t2.get$w();
  n33 = t1.get$w();
  t1 = $.add($.add($.add($.mul(m00, n00), $.mul(m01, n10)), $.mul(m02, n20)), $.mul(m03, n30));
  this.col0.set$x(t1);
  t1 = $.add($.add($.add($.mul(m00, n01), $.mul(m01, n11)), $.mul(m02, n21)), $.mul(m03, n31));
  this.col1.set$x(t1);
  t1 = $.add($.add($.add($.mul(m00, n02), $.mul(m01, n12)), $.mul(m02, n22)), $.mul(m03, n32));
  this.col2.set$x(t1);
  t1 = $.add($.add($.add($.mul(m00, n03), $.mul(m01, n13)), $.mul(m02, n23)), $.mul(m03, n33));
  this.col3.set$x(t1);
  t1 = $.add($.add($.add($.mul(m10, n00), $.mul(m11, n10)), $.mul(m12, n20)), $.mul(m13, n30));
  this.col0.set$y(t1);
  t1 = $.add($.add($.add($.mul(m10, n01), $.mul(m11, n11)), $.mul(m12, n21)), $.mul(m13, n31));
  this.col1.set$y(t1);
  t1 = $.add($.add($.add($.mul(m10, n02), $.mul(m11, n12)), $.mul(m12, n22)), $.mul(m13, n32));
  this.col2.set$y(t1);
  t1 = $.add($.add($.add($.mul(m10, n03), $.mul(m11, n13)), $.mul(m12, n23)), $.mul(m13, n33));
  this.col3.set$y(t1);
  t1 = $.add($.add($.add($.mul(m20, n00), $.mul(m21, n10)), $.mul(m22, n20)), $.mul(m23, n30));
  this.col0.set$z(t1);
  t1 = $.add($.add($.add($.mul(m20, n01), $.mul(m21, n11)), $.mul(m22, n21)), $.mul(m23, n31));
  this.col1.set$z(t1);
  t1 = $.add($.add($.add($.mul(m20, n02), $.mul(m21, n12)), $.mul(m22, n22)), $.mul(m23, n32));
  this.col2.set$z(t1);
  t1 = $.add($.add($.add($.mul(m20, n03), $.mul(m21, n13)), $.mul(m22, n23)), $.mul(m23, n33));
  this.col3.set$z(t1);
  t1 = $.add($.add($.add($.mul(m30, n00), $.mul(m31, n10)), $.mul(m32, n20)), $.mul(m33, n30));
  this.col0.set$w(t1);
  t1 = $.add($.add($.add($.mul(m30, n01), $.mul(m31, n11)), $.mul(m32, n21)), $.mul(m33, n31));
  this.col1.set$w(t1);
  t1 = $.add($.add($.add($.mul(m30, n02), $.mul(m31, n12)), $.mul(m32, n22)), $.mul(m33, n32));
  this.col2.set$w(t1);
  t1 = $.add($.add($.add($.mul(m30, n03), $.mul(m31, n13)), $.mul(m32, n23)), $.mul(m33, n33));
  this.col3.set$w(t1);
  return this;
},
 copyIntoArray$2: function(array, offset) {
  var i;
  $.indexSet(array, offset, this.col0.get$x());
  i = $.add(offset, 1);
  $.indexSet(array, i, this.col0.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col0.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col0.get$w());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$x());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col1.get$w());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$x());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col2.get$w());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$x());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$y());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$z());
  i = $.add(i, 1);
  $.indexSet(array, i, this.col3.get$w());
  $.add(i, 1);
},
 copyIntoArray$1: function(array) {
  return this.copyIntoArray$2(array,0)
},
 mat4$rotationX$1: function(radians_) {
  this.col0 = $.vec4$zero();
  this.col1 = $.vec4$zero();
  this.col2 = $.vec4$zero();
  this.col3 = $.vec4$zero();
  this.col3.set$w(1);
  this.setRotationX$1(radians_);
},
 mat4$zero$0: function() {
  this.col0 = $.vec4$zero();
  this.col1 = $.vec4$zero();
  this.col2 = $.vec4$zero();
  this.col3 = $.vec4$zero();
  this.col0.set$x(0);
  this.col0.set$y(0);
  this.col0.set$z(0);
  this.col0.set$w(0);
  this.col1.set$x(0);
  this.col1.set$y(0);
  this.col1.set$z(0);
  this.col1.set$w(0);
  this.col2.set$x(0);
  this.col2.set$y(0);
  this.col2.set$z(0);
  this.col2.set$w(0);
  this.col3.set$x(0);
  this.col3.set$y(0);
  this.col3.set$z(0);
  this.col3.set$w(0);
},
 mat4$identity$0: function() {
  this.col0 = $.vec4$zero();
  this.col1 = $.vec4$zero();
  this.col2 = $.vec4$zero();
  this.col3 = $.vec4$zero();
  this.col0.set$x(1);
  this.col1.set$y(1);
  this.col2.set$z(1);
  this.col3.set$w(1);
}
};

$$.quat = {"": ["x=", "y=", "z=", "w="],
 "super": "Object",
 setAxisAngle$2: function(axis, radians) {
  var len, halfSin;
  len = $.get$length(axis);
  if ($.eqB(len, 0))
    return;
  halfSin = $.div($.sin0($.mul(radians, 0.5), null), len);
  this.x = $.mul(axis.get$x(), halfSin);
  this.y = $.mul(axis.get$y(), halfSin);
  this.z = $.mul(axis.get$z(), halfSin);
  this.w = $.cos0($.mul(radians, 0.5), null);
},
 normalize$0: function() {
  var l = this.get$length();
  if ($.eqB(l, 0))
    return this;
  this.x = $.div(this.x, l);
  this.y = $.div(this.y, l);
  this.z = $.div(this.z, l);
  this.w = $.div(this.w, l);
  return this;
},
 normalized$1: function(out) {
  return (out == null ? $.quat$copy(this) : out).normalize$0();
},
 get$normalized: function() { return new $.BoundClosure8(this, 'normalized$1'); },
 get$length2: function() {
  var t1, t2, t3, t4;
  t1 = this.x;
  t1 = $.mul(t1, t1);
  t2 = this.y;
  t1 = $.add(t1, $.mul(t2, t2));
  t3 = this.z;
  t1 = $.add(t1, $.mul(t3, t3));
  t4 = this.w;
  return $.add(t1, $.mul(t4, t4));
},
 get$length: function() {
  return $.sqrt(this.get$length2());
},
 rotate$1: function(v) {
  var tix, tiy, tiz, tiw, tx, ty, tz, tw, result_x, result_y, result_z;
  tix = $.neg(this.x);
  tiy = $.neg(this.y);
  tiz = $.neg(this.z);
  tiw = this.w;
  tx = $.sub($.add($.add($.mul(tiw, v.get$x()), $.mul(tix, 0)), $.mul(tiy, v.get$z())), $.mul(tiz, v.get$y()));
  ty = $.sub($.add($.add($.mul(tiw, v.get$y()), $.mul(tiy, 0)), $.mul(tiz, v.get$x())), $.mul(tix, v.get$z()));
  tz = $.sub($.add($.add($.mul(tiw, v.get$z()), $.mul(tiz, 0)), $.mul(tix, v.get$y())), $.mul(tiy, v.get$x()));
  tw = $.sub($.sub($.sub($.mul(tiw, 0), $.mul(tix, v.get$x())), $.mul(tiy, v.get$y())), $.mul(tiz, v.get$z()));
  result_x = $.sub($.add($.add($.mul(tw, this.x), $.mul(tx, this.w)), $.mul(ty, this.z)), $.mul(tz, this.y));
  result_y = $.sub($.add($.add($.mul(tw, this.y), $.mul(ty, this.w)), $.mul(tz, this.x)), $.mul(tx, this.z));
  result_z = $.sub($.add($.add($.mul(tw, this.z), $.mul(tz, this.w)), $.mul(tx, this.y)), $.mul(ty, this.x));
  v.set$x(result_x);
  v.set$y(result_y);
  v.set$z(result_z);
  return v;
},
 operator$div$1: function(scale) {
  return $.quat$($.div(this.x, scale), $.div(this.y, scale), $.div(this.z, scale), $.div(this.w, scale));
},
 operator$mul$1: function(other) {
  if (typeof other === 'number')
    return $.quat$($.mul(this.x, other), $.mul(this.y, other), $.mul(this.z, other), $.mul(this.w, other));
  if (typeof other === 'object' && other !== null && !!other.is$quat)
    return $.quat$($.sub($.add($.add($.mul(this.w, other.x), $.mul(this.x, other.w)), $.mul(this.y, other.z)), $.mul(this.z, other.y)), $.sub($.add($.add($.mul(this.w, other.y), $.mul(this.y, other.w)), $.mul(this.z, other.x)), $.mul(this.x, other.z)), $.sub($.add($.add($.mul(this.w, other.z), $.mul(this.z, other.w)), $.mul(this.x, other.y)), $.mul(this.y, other.x)), $.sub($.sub($.sub($.mul(this.w, other.w), $.mul(this.x, other.x)), $.mul(this.y, other.y)), $.mul(this.z, other.z)));
},
 operator$add$1: function(other) {
  return $.quat$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()), $.add(this.z, other.get$z()), $.add(this.w, other.get$w()));
},
 operator$sub$1: function(other) {
  return $.quat$($.sub(this.x, other.get$x()), $.sub(this.y, other.get$y()), $.sub(this.z, other.get$z()), $.sub(this.w, other.get$w()));
},
 operator$negate$0: function() {
  return $.quat$($.neg(this.x), $.neg(this.y), $.neg(this.z), $.neg(this.w));
},
 operator$index$1: function(i) {
  switch (i) {
    case 0:
      return this.x;
    case 1:
      return this.y;
    case 2:
      return this.z;
    case 3:
      return this.w;
  }
  return 0;
},
 oprator$indexSet$2: function(i, arg) {
  switch (i) {
    case 0:
      this.x = arg;
      break;
    case 1:
      this.y = arg;
      break;
    case 2:
      this.z = arg;
      break;
    case 3:
      this.w = arg;
      break;
  }
},
 toString$0: function() {
  return $.S(this.x) + ', ' + $.S(this.y) + ', ' + $.S(this.z) + ' @ ' + $.S(this.w);
},
 quat$copy$1: function(original) {
  this.x = original.get$x();
  this.y = original.get$y();
  this.z = original.get$z();
  this.w = original.get$w();
},
 quat$4: function(a, b, c, d) {
  var trace, s, i, j, k;
  this.x = 0;
  this.y = 0;
  this.z = 0;
  this.w = 1;
  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number' && typeof d === 'number') {
    this.x = a;
    this.y = b;
    this.z = c;
    this.w = d;
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$vec3 && typeof b === 'number') {
    this.setAxisAngle$2(a, b);
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$vec3) {
    this.x = a.x;
    this.y = a.y;
    this.z = a.z;
    this.w = 0;
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$quat) {
    this.x = a.x;
    this.y = a.y;
    this.z = a.z;
    this.w = a.w;
    return;
  }
  if (typeof a === 'object' && a !== null && !!a.is$mat3) {
    trace = a.trace$0();
    if ($.gtB(trace, 0)) {
      s = $.sqrt($.add(trace, 1));
      this.w = s * 0.5;
      s = 0.5 / s;
      this.x = $.mul($.sub(a.col1.get$z(), a.col2.get$y()), s);
      this.y = $.mul($.sub(a.col2.get$x(), a.col0.get$z()), s);
      this.z = $.mul($.sub(a.col0.get$y(), a.col1.get$x()), s);
    } else {
      if ($.ltB(a.col0.get$x(), a.col1.get$y()))
        i = $.ltB(a.col1.get$y(), a.col2.get$z()) ? 2 : 1;
      else
        i = $.ltB(a.col0.get$x(), a.col2.get$z()) ? 2 : 0;
      j = $.mod(i + 1, 3);
      k = $.mod(i + 2, 3);
      s = $.sqrt($.add($.sub($.sub($.index(a.operator$index$1(i), i), $.index(a.operator$index$1(j), j)), $.index(a.operator$index$1(k), k)), 1));
      this.oprator$indexSet$2(i, s * 0.5);
      s = 0.5 / s;
      this.oprator$indexSet$2(3, $.mul($.sub($.index(a.operator$index$1(j), k), $.index(a.operator$index$1(k), j)), s));
      this.oprator$indexSet$2(j, $.mul($.add($.index(a.operator$index$1(i), j), $.index(a.operator$index$1(j), i)), s));
      this.oprator$indexSet$2(k, $.mul($.add($.index(a.operator$index$1(i), k), $.index(a.operator$index$1(k), i)), s));
    }
  }
},
 is$quat: true
};

$$.HandleSystem = {"": ["_handles", "_totalCapacity", "_staticCapacity", "_freeHead", "_dynamicUsed", "_dynamicCapacity"],
 "super": "Object",
 setStaticHandle$1: function(handle) {
  var index, t1;
  index = $.and($.shr(handle, 0), 1048575);
  if ($.eqB(this._isStaticHandle$1(handle), false))
    return 4294967295;
  t1 = this._handles;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1[index] = handle;
  return t1[index];
},
 allocateHandle$1: function(type) {
  var t1, index, t2, t3, handle, t4;
  t1 = this._dynamicUsed;
  if (t1 === this._dynamicCapacity)
    return 4294967295;
  this._dynamicUsed = t1 + 1;
  index = this._freeHead;
  t2 = this._handles;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t2.length)
    throw $.ioore(index);
  this._freeHead = $.and($.shr(t2[index], 0), 1048575);
  t3 = this._handles;
  if (index >= t3.length)
    throw $.ioore(index);
  handle = $.Handle_setType($.or($.Handle_clearStatusFlag($.Handle_nextSerial($.Handle_setIndex(t3[index], index)), 2), 268435456), type);
  t4 = this._handles;
  if (index >= t4.length)
    throw $.ioore(index);
  t4[index] = handle;
  return handle;
},
 validHandle$1: function(handle) {
  var index, t1;
  index = $.and($.shr(handle, 0), 1048575);
  if ($.ltB(index, 0) || $.geB(index, this._totalCapacity))
    return false;
  t1 = this._handles;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return $.eq(handle, t1[index]);
},
 _isStaticHandle$1: function(handle) {
  var index = $.and($.shr(handle, 0), 1048575);
  return $.eqB($.and($.shr(handle, 20), 15), 15) && $.geB(index, 0) && $.ltB(index, this._staticCapacity);
},
 HandleSystem$2: function(_totalCapacity, _staticCapacity) {
  var t1, i, t2, t3, next, next0;
  t1 = this._totalCapacity;
  this._handles = $._ListImpl_List(t1);
  for (i = 0; t2 = this._staticCapacity, i < t2; ++i) {
    t2 = this._handles;
    t3 = $.Handle_makeStaticHandle(i, 0, 0);
    if (i >= t2.length)
      throw $.ioore(i);
    t2[i] = t3;
  }
  this._freeHead = i;
  for (; i < t1; i = next) {
    next = i + 1;
    next0 = next === t1 ? 1048575 : next;
    t3 = this._handles;
    next0 = $.Handle_makeNextPointer(0, next0);
    if (i >= t3.length)
      throw $.ioore(i);
    t3[i] = next0;
  }
  this._dynamicUsed = 0;
  this._dynamicCapacity = t1 - t2;
}
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"": ["arg2_5", "arg1_4", "closure_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_3.call$2(this.arg1_4, this.arg2_5);
}
};

$$.Maps__emitMap_anon = {"": ["visiting_3", "box_0", "result_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true) {
    t2 = this.result_2;
    $.getInterceptor(t2).add$1(t2, ', ');
  }
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor(t1).add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_3;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_3;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["writeSlot_8", "readSlot_7", "findSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_6.call$1(e);
    t1.copy_1 = this.readSlot_7.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_8.call$2(slot, t1.copy_1);
    $.getInterceptor(e).forEach$1(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_6.call$1(e);
    t2 = this.readSlot_7;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_8.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_8;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, elementCopy, length$, copy, slot, i);
          for (t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, i, copy);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$('structured clone of other type'));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      i = env6;
      slot = env5;
      copy = env4;
      length$ = env3;
      elementCopy = env2;
      t3 = env1;
      e = env0;
      break;
    case 3:
      copy = env3;
      i = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_6.call$1(e);
        t1.copy_1 = this.readSlot_7.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_8.call$2(slot, t1.copy_1);
        $.getInterceptor(e).forEach$1(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(t1, this));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, copy, t3, i, element, elementCopy, j;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.get$length(e);
            slot = this.findSlot_6.call$1(e);
            t2 = this.readSlot_7;
            copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_8.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t3 = this.writeSlot_8;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$('structured clone of other type'));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["box_0", "walk_9"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.DoubleLinkedQueue_length_anon = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.NoSuchMethodError_toString_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_2, 0)) {
    t2 = t1.sb_1;
    $.getInterceptor(t2).add$1(t2, ', ');
  }
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, key);
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, ': ');
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, $.NoSuchMethodError_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$.CssClassSet_clear_anon = {"": [],
 "super": "Closure",
 call$1: function(s) {
  return $.getInterceptor(s).clear$0(s);
}
};

$$._HashSetImpl_forEach_anon = {"": ["f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$.CssClassSet_add_anon = {"": ["value_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.getInterceptor(s).add$1(s, this.value_0);
}
};

$$.Game_mesh_anon = {"": ["this_0"],
 "super": "Closure",
 call$2: function(type, resource) {
  var elements, t1;
  elements = [$.InputLayoutHelper_inputElementDescriptionFromMesh($.InputLayoutDescription$('vPosition', 0, 'POSITION'), resource, 0), $.InputLayoutHelper_inputElementDescriptionFromMesh($.InputLayoutDescription$('vTexCoord', 0, 'TEXCOORD0'), resource, 0)];
  t1 = this.this_0;
  t1.get$_graphicsDevice().configureDeviceChild$2(t1.get$_meshInputLayout(), $.makeLiteralMap(['elements', elements]));
  t1.get$_graphicsDevice().configureDeviceChild$2(t1.get$_meshInputLayout(), $.makeLiteralMap(['shaderProgram', t1.get$_shaderProgram()]));
  t1.set$_meshIndexCount(resource.get$numIndices());
  t1.get$_context().updateBuffer$2(t1.get$_meshVertexBuffer(), resource.get$vertexArray());
  t1.get$_context().updateBuffer$2(t1.get$_meshIndexBuffer(), resource.get$indexArray());
}
};

$$.Game_setTextureAt_anon = {"": ["i_2", "this_1", "textureResource_0"],
 "super": "Closure",
 call$2: function(type, resource) {
  var t1, texture;
  t1 = this.this_1;
  texture = $.index(t1.get$_textures(), this.i_2);
  t1.get$_context().updateTexture2DFromResource$3(texture, this.textureResource_0, t1.get$_resourceManager());
  t1.get$_context().generateMipmap$1(texture);
}
};

$$.Viewer_loadWorkspace_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(workspace) {
  var t1 = this.this_0;
  t1.set$_currentWorkspace(workspace);
  t1.get$_currentWorkspace().loadVertexShader$0().then$1(new $.Viewer_loadWorkspace__anon(t1));
}
};

$$.Viewer_loadWorkspace__anon = {"": ["this_1"],
 "super": "Closure",
 call$1: function(vertexSource) {
  var t1 = this.this_1;
  t1.get$_vertexShaderEditor().set$source(vertexSource);
  t1.get$_currentWorkspace().loadFragmentShader$0().then$1(new $.Viewer_loadWorkspace___anon(t1));
}
};

$$.Viewer_loadWorkspace___anon = {"": ["this_2"],
 "super": "Closure",
 call$1: function(fragmentSource) {
  var t1 = this.this_2;
  t1.get$_fragmentShaderEditor().set$source(fragmentSource);
  t1.get$_currentWorkspace().loadState$0().then$1(new $.Viewer_loadWorkspace____anon(t1));
}
};

$$.Viewer_loadWorkspace____anon = {"": ["this_3"],
 "super": "Closure",
 call$1: function(state) {
  var t1 = this.this_3;
  t1.deserialize$1(state);
  t1._updateWorkspace$0();
}
};

$$.Viewer_saveWorkspaceAs_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(workspace) {
  var t1, originalPath, copyPath, t2, t3, texturePath;
  t1 = this.this_0;
  originalPath = t1.get$_currentWorkspace().get$path();
  copyPath = workspace.get$path();
  t1.set$_currentWorkspace(workspace);
  for (t2 = $.iterator(t1.get$_textureSelection().get$textureUnits()); t2.get$hasNext() === true;) {
    t3 = t2.next$0();
    texturePath = t3.get$texture();
    t3.set$texture($.getInterceptor(texturePath).replaceAll$2(texturePath, originalPath, copyPath));
  }
  t1._saveWorkspaceState$0();
}
};

$$.ApplicationFileSystem_copyWorkspace_anon = {"": ["name_2", "workspaceCreation_1", "this_0"],
 "super": "Closure",
 call$1: function(newDirectory) {
  var t1, copy, t2;
  t1 = this.name_2;
  copy = $.Workspace$(newDirectory, t1);
  t2 = this.this_0.get$_workspaces();
  $.getInterceptor(t2).add$1(t2, copy);
  copy.saveMetadata$1('{ "name": "' + $.S(t1) + '" }').then$1(new $.ApplicationFileSystem_copyWorkspace__anon(this.workspaceCreation_1, copy));
}
};

$$.ApplicationFileSystem_copyWorkspace__anon = {"": ["workspaceCreation_4", "copy_3"],
 "super": "Closure",
 call$1: function(_) {
  this.workspaceCreation_4.complete$1(this.copy_3);
}
};

$$.Workspace__writeFile_anon = {"": ["completer_3", "data_2"],
 "super": "Closure",
 call$1: function(fileEntry) {
  fileEntry.createWriter$1(new $.Workspace__writeFile__anon(this.completer_3, fileEntry, this.data_2));
}
};

$$.Workspace__writeFile__anon = {"": ["completer_6", "fileEntry_5", "data_4"],
 "super": "Closure",
 call$1: function(fileWriter) {
  var t1, t2;
  t1 = {};
  t1.truncated_1 = false;
  t2 = fileWriter.get$on().get$writeEnd();
  $.getInterceptor(t2).add$1(t2, new $.Workspace__writeFile___anon(t1, fileWriter, this.fileEntry_5, this.completer_6, this.data_4));
  fileWriter.truncate$1(0);
}
};

$$.Workspace__writeFile___anon = {"": ["box_0", "fileWriter_10", "fileEntry_9", "completer_8", "data_7"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.box_0;
  if (t1.truncated_1 === true)
    this.completer_8.complete$1(this.fileEntry_9.toURL$0());
  else {
    this.fileWriter_10.write$1(this.data_7);
    t1.truncated_1 = true;
  }
}
};

$$._convertDartToNative_Dictionary_anon = {"": ["object_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.object_0[key] = value;
}
};

$$.anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(result) {
  var t1 = $.index(result, 'name');
  this.this_0.set$_name(t1);
}
};

$$.Workspace__readJson_anon = {"": ["completer_0"],
 "super": "Closure",
 call$1: function(value) {
  this.completer_0.complete$1($.JSON_parse(value));
}
};

$$.Workspace__readText_anon = {"": ["completer_0"],
 "super": "Closure",
 call$1: function(fileEntry) {
  fileEntry.file$1(new $.Workspace__readText__anon(this.completer_0));
}
};

$$.Workspace__readText__anon = {"": ["completer_1"],
 "super": "Closure",
 call$1: function(file) {
  var fileReader, t1;
  fileReader = $.FileReader_FileReader();
  t1 = fileReader.get$on().get$loadEnd();
  $.getInterceptor(t1).add$1(t1, new $.Workspace__readText___anon(fileReader, this.completer_1));
  fileReader.readAsText$1(file);
}
};

$$.Workspace__readText___anon = {"": ["fileReader_3", "completer_2"],
 "super": "Closure",
 call$1: function(_) {
  this.completer_2.complete$1(this.fileReader_3.get$result());
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"": ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout2(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_1;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout2: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_1;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"": ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"": ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"": ["readSlot_7", "findSlot_6", "mustCopy_5", "writeSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout1(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout1(2, e, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_5 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout1(3, e, length$, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout1: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.get$length(e);
            copy = this.mustCopy_5 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.Workspace__clearWorkspace_anon = {"": ["directoryReader_1", "this_0"],
 "super": "Closure",
 call$1: function(results) {
  var t1, t2;
  if (!$.eqB($.get$length(results), 0)) {
    for (t1 = $.iterator(results); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t2.remove$2(new $.Workspace__clearWorkspace__anon(t2), $.ApplicationFileSystem__onFileSystemError);
    }
    this.this_0._clearWorkspace$1(this.directoryReader_1);
  }
}
};

$$.Workspace__clearWorkspace__anon = {"": ["entry_2"],
 "super": "Closure",
 call$0: function() {
  $.print('Removed ' + $.S(this.entry_2.get$name()));
}
};

$$._DateImpl_toString_fourDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  var absN, sign;
  absN = $.abs(n);
  sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$.Viewer__saveWorkspaceState_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.this_0;
  return t1.get$_currentWorkspace().saveVertexShader$1(t1.get$_vertexShaderEditor().get$source());
}
};

$$.Viewer__saveWorkspaceState_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.this_1;
  return t1.get$_currentWorkspace().saveFragmentShader$1(t1.get$_fragmentShaderEditor().get$source());
}
};

$$.Viewer__saveWorkspaceState_anon1 = {"": [],
 "super": "Closure",
 call$1: function(_) {
  $.print('Worspace saved');
}
};

$$._FutureImpl_chain_anon = {"": ["this_2", "completer_1", "transformation_0"],
 "super": "Closure",
 call$1: function(v, exception) {
  var future, t1, ex, stackTrace, t2;
  future = null;
  try {
    future = this.transformation_0.call$1(v);
  } catch (exception) {
    t1 = $.unwrapException(exception);
    ex = t1;
    stackTrace = $.getTraceFromException(exception);
    this.completer_1.completeException$2(ex, stackTrace);
    return;
  }

  t1 = future;
  t2 = this.completer_1;
  this.this_2._forwardException$2(t1, t2);
  t1.then$1(t2.get$complete());
}
};

$$._FutureImpl__forwardException_anon = {"": ["completer_1", "future_0"],
 "super": "Closure",
 call$1: function(e) {
  this.completer_1.completeException$2(e, this.future_0.get$stackTrace());
  return true;
}
};

$$.Viewer__serialize_anon = {"": ["data_0"],
 "super": "Closure",
 call$2: function(key, value) {
  $.indexSet(this.data_0, key, value);
}
};

$$.Viewer__serialize_anon0 = {"": ["data_1"],
 "super": "Closure",
 call$2: function(key, value) {
  $.indexSet(this.data_1, key, value);
}
};

$$.Viewer__serialize_anon1 = {"": ["data_2"],
 "super": "Closure",
 call$2: function(key, value) {
  $.indexSet(this.data_2, key, value);
}
};

$$._JsonStringifier_stringifyJsonValue_anon = {"": ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.box_0;
  t2 = t1.first_10 !== true;
  t3 = this.this_2;
  if (t2) {
    t2 = t3.get$sb();
    $.getInterceptor(t2).add$1(t2, ',"');
  } else {
    t2 = t3.get$sb();
    $.getInterceptor(t2).add$1(t2, '"');
  }
  t2 = this.this_2;
  $._JsonStringifier_escape(t2.get$sb(), key);
  t3 = t2.get$sb();
  $.getInterceptor(t3).add$1(t3, '":');
  t2.stringifyValue$1(value);
  t1.first_10 = false;
}
};

$$.anon0 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(grantedBytes) {
  var t1 = this.this_0;
  t1.set$_bytesGranted(grantedBytes);
  $.window().webkitRequestFileSystem$4(1, grantedBytes, t1.get$_onFileSystemCreated(), $.ApplicationFileSystem__onFileSystemError);
}
};

$$.ApplicationFileSystem__onFileSystemCreated_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(workspace) {
  var t1 = this.this_0;
  t1.set$_tempWorkspace(workspace);
  if (!(t1.get$_fileSystemReadyCallback() == null))
    t1._fileSystemReadyCallback$0();
}
};

$$.ApplicationFileSystem__createWorkspace_anon = {"": ["workspaceCreation_1", "name_0"],
 "super": "Closure",
 call$1: function(directoryEntry) {
  var workspace = $.Workspace$(directoryEntry, this.name_0);
  this.workspaceCreation_1.complete$1(workspace);
}
};

$$.ApplicationFileSystem__searchForWorkspaces_anon = {"": ["directoryReader_1", "this_0"],
 "super": "Closure",
 call$1: function(results) {
  var t1, t2, t3, workspace;
  if (!$.eqB($.get$length(results), 0)) {
    for (t1 = $.iterator(results), t2 = this.this_0; t1.get$hasNext() === true;) {
      t3 = t1.next$0();
      if (t3.get$isDirectory() === true) {
        $.print(t3.get$name());
        workspace = $.Workspace$(t3, '');
        if ($.eqB(t3.get$name(), 'temp'))
          t2.set$_tempWorkspace(workspace);
        else {
          t3 = t2.get$_workspaces();
          $.getInterceptor(t3).add$1(t3, workspace);
        }
      }
    }
    t2._searchForWorkspaces$1(this.directoryReader_1);
  }
}
};

$$.TabbedElement_addTab_anon = {"": ["index_1", "this_0"],
 "super": "Closure",
 call$1: function(_) {
  this.this_0._onSelected$1(this.index_1);
}
};

$$.RendererSelection__setupBlendState_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  this.this_0._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  this.this_1._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon1 = {"": ["this_2"],
 "super": "Closure",
 call$1: function(_) {
  this.this_2._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon2 = {"": ["this_3"],
 "super": "Closure",
 call$1: function(_) {
  this.this_3._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon3 = {"": ["this_4"],
 "super": "Closure",
 call$1: function(_) {
  this.this_4._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon4 = {"": ["this_5"],
 "super": "Closure",
 call$1: function(_) {
  this.this_5._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon5 = {"": ["this_6"],
 "super": "Closure",
 call$1: function(_) {
  this.this_6._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon6 = {"": ["this_7"],
 "super": "Closure",
 call$1: function(_) {
  this.this_7._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon7 = {"": ["this_8"],
 "super": "Closure",
 call$1: function(_) {
  this.this_8._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon8 = {"": ["this_9"],
 "super": "Closure",
 call$1: function(_) {
  this.this_9._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupBlendState_anon9 = {"": ["this_10"],
 "super": "Closure",
 call$1: function(_) {
  this.this_10._onBlendStateChanged$0();
}
};

$$.RendererSelection__setupDepthState_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  this.this_0._onDepthStateChanged$0();
}
};

$$.RendererSelection__setupDepthState_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  this.this_1._onDepthStateChanged$0();
}
};

$$.RendererSelection__setupDepthState_anon1 = {"": ["this_2"],
 "super": "Closure",
 call$1: function(_) {
  this.this_2._onDepthStateChanged$0();
}
};

$$.RendererSelection__setupRasterizerState_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  this.this_0._onRasterizerStateChanged$0();
}
};

$$.RendererSelection__setupRasterizerState_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  this.this_1._onRasterizerStateChanged$0();
}
};

$$.RendererSelection__setupRasterizerState_anon1 = {"": ["this_2"],
 "super": "Closure",
 call$1: function(_) {
  this.this_2._onRasterizerStateChanged$0();
}
};

$$.UniformSelection__createVariableTable_anon = {"": ["table_0"],
 "super": "Closure",
 call$2: function(name$, info) {
  var row, t1, cell, toolTip;
  row = $.TableRowElement_TableRowElement();
  t1 = this.table_0.get$nodes();
  $.getInterceptor(t1).add$1(t1, row);
  cell = $.TableCellElement_TableCellElement();
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, cell);
  t1 = cell.get$classes();
  $.getInterceptor(t1).add$1(t1, 'variable_name');
  cell.set$innerHTML($.S($.index(info, 'type')) + ' ' + $.S(name$));
  cell = $.TableCellElement_TableCellElement();
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, cell);
  t1 = cell.get$classes();
  $.getInterceptor(t1).add$1(t1, 'variable_tool_tip');
  toolTip = $.ToolTip$($.index(info, 'description'));
  t1 = cell.get$nodes();
  $.getInterceptor(t1).add$1(t1, toolTip.get$element());
}
};

$$.anon1 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.this_0.get$_liblib1$_element().get$classes();
  $.getInterceptor(t1).add$1(t1, 'tool_tip');
}
};

$$.anon2 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  this.this_1.get$_liblib1$_element().get$classes().remove$1('tool_tip');
}
};

$$.CssClassSet_addAll_anon = {"": ["collection_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.getInterceptor(s).addAll$1(s, this.collection_0);
}
};

$$._HashSetImpl_addAll_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.FilteredElementList__filtered_anon = {"": [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._HashSetImpl_filter_anon = {"": ["result_1", "f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1;
  if (this.f_0.call$1(key) === true) {
    t1 = this.result_1;
    $.getInterceptor(t1).add$1(t1, key);
  }
}
};

$$._ChildrenElementList_filter_anon = {"": ["f_1", "output_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1;
  if (this.f_1.call$1(element) === true) {
    t1 = this.output_0;
    $.getInterceptor(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {"": [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.anon3 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.this_0;
  $.print('Scroll height ' + $.S(t1.get$_sourceCode().get$scrollHeight()));
  t1.set$_compileSourceAt($.add($.Date_Date$now().get$millisecondsSinceEpoch(), 1000));
  t1._calculateLineNumbers$0();
  $.Timer_Timer(1000, new $._anon(t1));
}
};

$$._anon = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  this.this_1._onSourceChanged$0();
}
};

$$.TextureUnit__createSelectElement_anon = {"": ["select_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var option, t1;
  option = $.OptionElement_OptionElement($, $, $, $);
  option.set$text(key);
  option.set$value(value);
  t1 = this.select_0.get$nodes();
  $.getInterceptor(t1).add$1(t1, option);
}
};

$$.TextureUnit__createTextureDrop_anon = {"": ["textureDropArea_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.textureDropArea_0;
  t1.get$classes().remove$1('drag_none');
  t1 = t1.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drag_over');
}
};

$$.TextureUnit__createTextureDrop_anon0 = {"": ["textureDropArea_1"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.textureDropArea_1;
  t1.get$classes().remove$1('drag_over');
  t1 = t1.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drag_none');
}
};

$$.TextureUnit__createTextureDrop_anon1 = {"": [],
 "super": "Closure",
 call$1: function(e) {
  e.stopPropagation$0();
  e.preventDefault$0();
}
};

$$.TextureUnit__createTextureDrop_anon2 = {"": ["textureDropArea_3", "this_2"],
 "super": "Closure",
 call$1: function(e) {
  var t1;
  e.stopPropagation$0();
  e.preventDefault$0();
  t1 = this.textureDropArea_3;
  t1.get$classes().remove$1('drag_over');
  t1 = t1.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drag_none');
  this.this_2._onTextureChanged$1(e.get$dataTransfer().get$files());
}
};

$$.TextureUnit__createTextureDrop_anon3 = {"": ["dropText_4"],
 "super": "Closure",
 call$1: function(_) {
  this.dropText_4.get$classes().remove$1('hidden');
}
};

$$.TextureUnit__createTextureDrop_anon4 = {"": ["dropText_5"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.dropText_5.get$classes();
  $.getInterceptor(t1).add$1(t1, 'hidden');
}
};

$$.ModelSelection__setupModelLoadArea_anon = {"": ["modelDropArea_0"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.modelDropArea_0;
  t1.get$classes().remove$1('drag_none');
  t1 = t1.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drag_over');
}
};

$$.ModelSelection__setupModelLoadArea_anon0 = {"": ["modelDropArea_1"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.modelDropArea_1;
  t1.get$classes().remove$1('drag_over');
  t1 = t1.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drag_over');
}
};

$$.ModelSelection__setupModelLoadArea_anon1 = {"": [],
 "super": "Closure",
 call$1: function(e) {
  e.stopPropagation$0();
  e.preventDefault$0();
}
};

$$.ModelSelection__setupModelLoadArea_anon2 = {"": ["this_3", "modelDropArea_2"],
 "super": "Closure",
 call$1: function(e) {
  var t1;
  e.stopPropagation$0();
  e.preventDefault$0();
  t1 = this.modelDropArea_2;
  t1.get$classes().remove$1('drag_over');
  t1 = t1.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drag_over');
  this.this_3._onModelLoaded$1(e.get$dataTransfer().get$files());
}
};

$$.ModelSelection__setupModelLoadArea_anon3 = {"": ["dropText_4"],
 "super": "Closure",
 call$1: function(_) {
  this.dropText_4.get$classes().remove$1('hidden');
}
};

$$.ModelSelection__setupModelLoadArea_anon4 = {"": ["dropText_5"],
 "super": "Closure",
 call$1: function(_) {
  var t1 = this.dropText_5.get$classes();
  $.getInterceptor(t1).add$1(t1, 'hidden');
}
};

$$.ModelSelection__setupStandardModels_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  this.this_0._onModelChanged$2('web/resources/meshes/cube.mesh', 0);
}
};

$$.ModelSelection__setupStandardModels_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  this.this_1._onModelChanged$2('web/resources/meshes/sphere.mesh', 1);
}
};

$$.ModelSelection__setupStandardModels_anon1 = {"": ["this_2"],
 "super": "Closure",
 call$1: function(_) {
  this.this_2._onModelChanged$2('web/resources/meshes/plane.mesh', 2);
}
};

$$.ModelSelection__setupStandardModels_anon2 = {"": ["this_3"],
 "super": "Closure",
 call$1: function(_) {
  this.this_3._onModelChanged$2('web/resources/meshes/cylinder.mesh', 3);
}
};

$$.UniformSelection_uniformTypes_anon = {"": ["updateValues_1", "this_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  if ($.get$UniformSelection__builtinUniformNames().containsKey$1(key) !== true) {
    t1 = this.this_0;
    t2 = t1.get$_uniforms().containsKey$1(key) === true;
    t3 = this.updateValues_1;
    if (t2)
      $.indexSet(t3, key, $.index(t1.get$_uniforms(), key));
    else
      $.indexSet(t3, key, $.UniformSelection__createUniformValue(key, value));
  }
}
};

$$.UniformSelection__updateUniformValues_anon = {"": [],
 "super": "Closure",
 call$2: function(_, value) {
  value.set$changeCallback(null);
  value.get$element().remove$0();
}
};

$$.UniformSelection__updateUniformValues_anon0 = {"": ["box_0", "this_2"],
 "super": "Closure",
 call$2: function(_, value) {
  var element, t1, t2, t3;
  element = value.get$element();
  element.get$classes().remove$1('first');
  element.get$classes().remove$1('second');
  t1 = element.get$classes();
  t2 = $.getInterceptor(t1);
  t3 = this.box_0;
  t2.add$1(t1, $.eqB($.mod(t3.count_1, 2), 0) ? 'first' : 'second');
  t1 = this.this_2;
  value.set$changeCallback(t1.get$_onValueChanged());
  t2 = t1.get$_liblib1$_parent().get$nodes();
  $.getInterceptor(t2).add$1(t2, element);
  t3.count_1 = $.add(t3.count_1, 1);
}
};

$$.UniformSelection_uniformValues_anon = {"": ["values_0"],
 "super": "Closure",
 call$2: function(key, uniform) {
  var value = $.Map_Map();
  $.indexSet(value, 'type', uniform.get$uniformType());
  $.indexSet(value, 'value', uniform.get$value());
  $.indexSet(this.values_0, key, value);
}
};

$$.UniformSamplerValue__createElement_anon = {"": ["this_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var option, t1;
  option = $.OptionElement_OptionElement($, $, $, $);
  option.set$text(key);
  option.set$value(value);
  t1 = this.this_0.get$_liblib1$_value().get$nodes();
  $.getInterceptor(t1).add$1(t1, option);
}
};

$$.Viewer__onTextureChanged_anon = {"": ["this_1", "textureUnit_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, t2;
  $.print('Texture changed ' + $.S(value));
  t1 = this.this_1.get$_textureSelection().get$textureUnits();
  t2 = this.textureUnit_0;
  $.index(t1, t2).set$texture(value);
  $.Game_instance().setTextureAt$2(t2, value);
}
};

$$.Viewer__onModelLoaded_anon = {"": [],
 "super": "Closure",
 call$1: function(value) {
  $.print('Model changed ' + $.S(value));
  $.Game_instance().set$mesh(value);
}
};

$$.Viewer__setupMenuBar_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  this.this_0.newWorkspace$0();
}
};

$$.Viewer__setupMenuBar_anon0 = {"": ["this_1"],
 "super": "Closure",
 call$1: function(_) {
  this.this_1.get$_loadDialog().show$0();
}
};

$$.Viewer__setupMenuBar_anon1 = {"": ["this_2"],
 "super": "Closure",
 call$1: function(_) {
  this.this_2.saveWorkspace$0();
}
};

$$.Viewer__setupMenuBar_anon2 = {"": ["this_3"],
 "super": "Closure",
 call$1: function(_) {
  this.this_3.get$_saveDialog().show$0();
}
};

$$.Viewer__setupMenuBar_anon3 = {"": ["this_4"],
 "super": "Closure",
 call$1: function(_) {
  this.this_4.get$_aboutDialog().show$0();
}
};

$$.Viewer__setupMenuBar_anon4 = {"": [],
 "super": "Closure",
 call$1: function(_) {
  $.Game_instance().set$fullscreen(true);
}
};

$$.FileSystemDialog__createFileList_anon = {"": ["box_0", "this_2"],
 "super": "Closure",
 call$1: function(_) {
  this.this_2._selectFile$1(this.box_0.i_1);
}
};

$$.Viewer__setupDialogs_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(_) {
  this.this_0._onFileSystemTimeout$0();
}
};

$$.anon4 = {"": [],
 "super": "Closure",
 call$1: function(e) {
  e.stopPropagation$0();
}
};

$$.ResourceManager_loadResource_anon = {"": ["rb_2", "handle_1", "completer_0"],
 "super": "Closure",
 call$1: function(result) {
  result.set$handle(this.handle_1);
  result.set$completer(this.completer_0);
  this.rb_2.load$1(result);
}
};

$$._ImageResourceLoader_load_anon = {"": ["completer_2", "url_1", "image_0"],
 "super": "Closure",
 call$1: function(event$) {
  var r = $._ResourceLoaderResult$(true, this.image_0);
  $.spectreLog.Info$1('Request for ' + $.S(this.url_1) + ' succesful.');
  this.completer_2.complete$1(r);
}
};

$$._ImageResourceLoader_load_anon0 = {"": ["completer_5", "url_4", "image_3"],
 "super": "Closure",
 call$1: function(event$) {
  var r = $._ResourceLoaderResult$(false, this.image_3);
  $.spectreLog.Info$1('Request for ' + $.S(this.url_4) + ' failed..');
  this.completer_5.complete$1(r);
}
};

$$._HttpResourceLoader_load_anon = {"": ["req_2", "completer_1", "url_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, r;
  t1 = this.req_2.get$response();
  r = $._ResourceLoaderResult$(!(t1 == null), t1);
  $.spectreLog.Info$1('Request for ' + $.S(this.url_0) + ' succesful.');
  this.completer_1.complete$1(r);
}
};

$$._HttpResourceLoader_load_anon0 = {"": ["req_5", "completer_4", "url_3"],
 "super": "Closure",
 call$1: function(event$) {
  var r = $._ResourceLoaderResult$(false, this.req_5.get$response());
  $.spectreLog.Info$1('Request for ' + $.S(this.url_3) + ' failed.');
  this.completer_4.complete$1(r);
}
};

$$.ResourceBase__fireUpdated_anon = {"": ["this_0"],
 "super": "Closure",
 call$2: function(key, value) {
  value.call$2(1, this.this_0);
}
};

$$.PackResource_load_anon = {"": ["result_0"],
 "super": "Closure",
 call$1: function(_unused) {
  var t1 = this.result_0;
  t1.get$completer().complete$1(t1.get$handle());
}
};

$$.Futures_wait_anon = {"": ["box_0", "pos_5", "result_4", "completer_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, t2, remaining;
  t1 = this.values_2;
  $.indexSet(t1, this.pos_5, value);
  t2 = this.box_0;
  remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_4.get$isComplete() !== true)
    this.completer_3.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"": ["future_8", "result_7", "completer_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_7.get$isComplete() !== true)
    this.completer_6.completeException$2(exception, this.future_8.get$stackTrace());
  return true;
}
};

$$.ResourceBase__fireUnloaded_anon = {"": ["this_0"],
 "super": "Closure",
 call$2: function(key, value) {
  value.call$2(1, this.this_0);
}
};

$$.ShaderProgramResource_load_anon = {"": ["box_0", "result_4", "this_3"],
 "super": "Closure",
 call$1: function(results) {
  var t1, vsResult, t2, index, fsResult;
  t1 = this.box_0;
  if (t1.fetchedVertex_1 === true) {
    vsResult = $.index(results, 0);
    if (vsResult.get$success() === true) {
      t2 = vsResult.get$data();
      this.this_3.set$vertexShaderSource(t2);
    }
    index = 1;
  } else
    index = 0;
  if (t1.fetchedFragment_2 === true) {
    fsResult = $.index(results, index);
    if (fsResult.get$success() === true) {
      t1 = fsResult.get$data();
      this.this_3.set$fragmentShaderSource(t1);
    }
  }
  t1 = this.this_3;
  t1._fireUpdated$0();
  t1.set$_isLoaded(true);
  t1 = this.result_4;
  t1.get$completer().complete$1(t1.get$handle());
}
};

$$.Game__setUniformValues_anon = {"": ["this_0"],
 "super": "Closure",
 call$2: function(name$, uniform) {
  var type, value;
  type = $.index(uniform, 'type');
  value = $.index(uniform, 'value');
  switch (type) {
    case 'sampler2D':
    case 'samplerCube':
    case 'int':
      this.this_0.get$_context().setUniformInt$2(name$, value);
      break;
    case 'float':
      this.this_0.get$_context().setUniformNum$2(name$, value);
      break;
    case 'vec2':
      this.this_0.get$_context().setUniformVector2$2(name$, value);
      break;
    case 'vec3':
      this.this_0.get$_context().setUniformVector3$2(name$, value);
      break;
    case 'vec4':
      this.this_0.get$_context().setUniformVector4$2(name$, value);
      break;
    case 'mat2':
      break;
    case 'mat3':
      this.this_0.get$_context().setUniformMatrix3$2(name$, value);
      break;
    case 'mat4':
      this.this_0.get$_context().setUniformMatrix4$2(name$, value);
      break;
    case 'ivec2':
      break;
    case 'ivec3':
      break;
    case 'vec4':
      break;
    case 'bool':
      break;
    case 'bvec2':
      break;
    case 'bvec3':
      break;
    case 'bvec4':
      break;
  }
}
};

$$.startRootIsolate_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"": ["completer_1", "port_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  var t1, t2;
  this.port_0.close$0();
  t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  t2 = this.completer_1;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"": ["replyTo_2", "message_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, workerMessage, t3;
  t1 = this.this_0;
  t2 = this.replyTo_2;
  t1._checkReplyTo$1(t2);
  workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_1, 'replyTo', t2]));
  t2 = $._globalState().get$isWorker() === true;
  t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"": ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$._PendingSendPortFinder_visitMap_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$.Storage_values_anon = {"": ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.values_0;
  return $.getInterceptor(t1).add$1(t1, v);
}
};

$$._LinkedHashMapImpl_values_anon = {"": ["box_0", "list_2"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$._HashMapImpl_values_anon = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$._PendingSendPortFinder_visitList_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"": ["message_5", "replyTo_4", "this_3"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, t3, isolate, shouldSerialize, msg;
  t1 = {};
  t2 = this.this_3;
  t3 = this.replyTo_4;
  t2._checkReplyTo$1(t3);
  isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_callback() == null)
    return;
  shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  msg = this.message_5;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t2, t1, shouldSerialize), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send__anon = {"": ["this_7", "box_0", "shouldSerialize_6"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.this_7;
  if (!(t1.get$_receivePort().get$_callback() == null)) {
    if (this.shouldSerialize_6 === true) {
      t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$.Storage_keys_anon = {"": ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.keys_0;
  return $.getInterceptor(t1).add$1(t1, k);
}
};

$$._LinkedHashMapImpl_keys_anon = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._HashMapImpl_keys_anon = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_11;
  t2.i_11 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._Copier_visitMap_anon = {"": ["box_0", "this_2"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1, t2;
  t1 = this.box_0.copy_10;
  t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon5 = {"": ["callback_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_1.call$1(this.this_0);
}
};

$$.anon6 = {"": ["callback_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_1.call$1(this.this_0);
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure1 = {'':
['self', 'target'],
'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$$.BoundClosure2 = {'':
['self', 'target'],
'super': 'Closure',
call$5: function(p0, p1, p2, p3, p4) { return this.self[this.target](p0, p1, p2, p3, p4); }
};
$$.BoundClosure3 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$$.BoundClosure4 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1($)
}
};
$$.BoundClosure5 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1(null)
}
};
$$.BoundClosure6 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1(null)
}
};
$$.BoundClosure7 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1(null)
}
};
$$.BoundClosure8 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); },
 call$0: function() {
  return this.call$1(null)
}
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.Set_Set = function() {
  return $._HashSetImpl$();
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.oprator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC3));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      return $.NullPointerException$(null, $.CTC3);
    else if ($.eqB(type, 'undefined_method'))
      return $.NoSuchMethodError$('', name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.getInterceptor(message).endsWith$1(message, 'is null') === true || $.getInterceptor(message).endsWith$1(message, 'is undefined') === true || $.getInterceptor(message).endsWith$1(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC3);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], $.makeLiteralMap([]), null);
      }
    return $._ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowError$();
  return ex;
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(arg2, arg1, closure));
  else
    throw $.$$throw($._ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.Handle_makeHandle = function(index, serial, type, status$) {
  var index0, serial0, type0, status0;
  index0 = $.shl($.and(index, 1048575), 0);
  serial0 = $.shl($.and(serial, 15), 20);
  type0 = $.shl($.and(type, 15), 24);
  status0 = $.shl($.and(status$, 15), 28);
  return $.or($.or($.or(index0, serial0), type0), status0);
};

$.Handle_setIndex = function(handle, index) {
  return $.Handle_makeHandle(index, $.and($.shr(handle, 20), 15), $.and($.shr(handle, 24), 15), $.and($.shr(handle, 28), 15));
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$.Handle_makeStaticHandle = function(index, type, status$) {
  return $.Handle_makeHandle(index, 15, type, status$);
};

$.propertyTypeCastError = function(value, property) {
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), $.getInterceptor(property).substring$2(property, 3, $.get$length(property))));
};

$.callTypeCast = function(value, property) {
  var t1;
  if (!(value == null))
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.ResourceLoaders$ = function() {
  var t1 = new $.ResourceLoaders(null);
  t1.ResourceLoaders$0();
  return t1;
};

$.stringLastIndexOfUnchecked = function(receiver, element, start) {
  return receiver.lastIndexOf(element, start);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer_StringBuffer('');
  $._JsonStringifier$(output).stringifyValue$1(object);
  return $.toString(output);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$.Handle_makeNextPointer = function(serial, nextIndex) {
  return $.Handle_makeHandle(nextIndex, serial, 0, 2);
};

$.Handle_getType = function(handle) {
  return $.and($.shr(handle, 24), 15);
};

$.Handle_getIndex = function(handle) {
  return $.and($.shr(handle, 0), 1048575);
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return 'Null';
  constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$._JsonStringifier_escape = function(sb, s) {
  var length$, charCodes, needsEscape, i, charCode, t1, t2;
  length$ = $.get$length(s);
  charCodes = $._ListImpl_List(null);
  for (needsEscape = false, i = 0; $.ltB(i, length$); ++i) {
    charCode = $.getInterceptor(s).charCodeAt$1(s, i);
    if ($.ltB(charCode, 32)) {
      $.getInterceptor(charCodes).add$1(charCodes, 92);
      switch (charCode) {
        case 8:
          $.getInterceptor(charCodes).add$1(charCodes, 98);
          break;
        case 9:
          $.getInterceptor(charCodes).add$1(charCodes, 116);
          break;
        case 10:
          $.getInterceptor(charCodes).add$1(charCodes, 110);
          break;
        case 12:
          $.getInterceptor(charCodes).add$1(charCodes, 102);
          break;
        case 13:
          $.getInterceptor(charCodes).add$1(charCodes, 114);
          break;
        default:
          $.getInterceptor(charCodes).add$1(charCodes, 117);
          t1 = $.getInterceptor(charCodes);
          t2 = $.and($.shr(charCode, 12), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          t1.add$1(charCodes, t2);
          t2 = $.getInterceptor(charCodes);
          t1 = $.and($.shr(charCode, 8), 15);
          if ($.ltB(t1, 10)) {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 48 + t1;
          } else {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 87 + t1;
          }
          t2.add$1(charCodes, t1);
          t1 = $.getInterceptor(charCodes);
          t2 = $.and($.shr(charCode, 4), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          t1.add$1(charCodes, t2);
          t2 = $.getInterceptor(charCodes);
          t1 = $.and(charCode, 15);
          if ($.ltB(t1, 10)) {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 48 + t1;
          } else {
            if (typeof t1 !== 'number')
              throw $.iae(t1);
            t1 = 87 + t1;
          }
          t2.add$1(charCodes, t1);
          break;
      }
      needsEscape = true;
    } else if ($.eqB(charCode, 34) || $.eqB(charCode, 92)) {
      $.getInterceptor(charCodes).add$1(charCodes, 92);
      $.getInterceptor(charCodes).add$1(charCodes, charCode);
      needsEscape = true;
    } else
      $.getInterceptor(charCodes).add$1(charCodes, charCode);
  }
  t1 = $.getInterceptor(sb);
  t1.add$1(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.or = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a | b) >>> 0;
  return a.operator$or$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.FragmentShader$ = function(name$, device) {
  var t1 = new $.FragmentShader(null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.Shader$2(name$, device);
  t1.FragmentShader$2(name$, device);
  return t1;
};

$.Handle_nextSerial = function(handle) {
  var index, serial, type, status$, serial0;
  index = $.and($.shr(handle, 0), 1048575);
  serial = $.and($.shr(handle, 20), 15);
  type = $.and($.shr(handle, 24), 15);
  status$ = $.and($.shr(handle, 28), 15);
  serial0 = $.and($.add(serial, 1), 15);
  serial = $.eqB(serial0, 15) ? 0 : serial0;
  return $.Handle_makeHandle(index, serial, type, status$);
};

$.Handle_setType = function(handle, type) {
  return $.Handle_makeHandle($.and($.shr(handle, 0), 1048575), $.and($.shr(handle, 20), 15), type, $.and($.shr(handle, 28), 15));
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl__FutureImpl$immediate(value);
};

$.Handle_clearStatusFlag = function(handle, flag) {
  return $.and(handle, ~(flag << 28));
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, 'm');
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, 'i');
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, 'g');
  }
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr;
  if (typeof other === 'string')
    return !$.eqB($.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.getInterceptor(receiver).substring$1(receiver, startIndex));
  else {
    substr = $.getInterceptor(receiver).substring$1(receiver, startIndex);
    return $.iterator($.getInterceptor(other).allMatches$1(other, substr)).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, length$, patternLength, startIndex, position, endIndex;
  result = $._ListImpl_List(null);
  length$ = $.get$length(haystack);
  patternLength = $.get$length(needle);
  if (patternLength !== (patternLength | 0))
    return $.allMatchesInStringUnchecked$bailout(1, needle, haystack, patternLength, result, length$);
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    $.getInterceptor(result).add$1(result, $.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, i;
  if (typeof receiver !== 'string')
    return $.stringReplaceAllUnchecked$bailout(1, receiver, from, to);
  if (typeof from === 'string')
    if (from === '')
      if (receiver === '')
        return to;
      else {
        result = $.StringBuffer_StringBuffer('');
        length$ = receiver.length;
        $.getInterceptor(result).add$1(result, to);
        for (i = 0; i < length$; ++i) {
          $.getInterceptor(result).add$1(result, receiver[i]);
          $.getInterceptor(result).add$1(result, to);
        }
        return $.toString(result);
      }
    else
      return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
  else if (typeof from === 'object' && from !== null && !!from.is$JSSyntaxRegExp)
    return $.stringReplaceJS(receiver, $.regExpMakeNative(from, true), to);
  else {
    $.checkNull(from);
    throw $.$$throw('String.replaceAll(Pattern) UNIMPLEMENTED');
  }
};

$.stringSplitUnchecked = function(receiver, pattern) {
  if (typeof pattern === 'string')
    return receiver.split(pattern);
  else if (typeof pattern === 'object' && pattern !== null && !!pattern.is$JSSyntaxRegExp)
    return receiver.split($.regExpGetNative(pattern));
  else
    throw $.$$throw('String.split(Pattern) UNIMPLEMENTED');
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.VertexShader$ = function(name$, device) {
  var t1 = new $.VertexShader(null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.Shader$2(name$, device);
  t1.VertexShader$2(name$, device);
  return t1;
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.ShaderProgram$ = function(name$, device) {
  var t1 = new $.ShaderProgram(null, null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.ShaderProgram$2(name$, device);
  return t1;
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.lookupDynamicClass = function(hasOwnProperty, methods, className) {
  return hasOwnProperty.call(methods, className) ? methods[className] : null;
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.operator$negate$0();
};

$.Texture2D$ = function(name$, device) {
  var t1 = new $.Texture2D(null, null, null, null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.Texture2D$2(name$, device);
  return t1;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$.print = function(object) {
  if (typeof object === 'string')
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.vec4$zero = function() {
  var t1 = new $.vec4(null, null, null, null);
  t1.vec4$zero$0();
  return t1;
};

$.SVGElementInstanceEvents$ = function(_ptr) {
  return new $.SVGElementInstanceEvents(_ptr);
};

$.UniformType_serialize = function(value) {
  switch (value) {
    case 35678:
      return 'sampler2D';
    case 35680:
      return 'samplerCube';
    case 5126:
      return 'float';
    case 35664:
      return 'vec2';
    case 35665:
      return 'vec3';
    case 35666:
      return 'vec4';
    case 35674:
      return 'mat2';
    case 35675:
      return 'mat3';
    case 35676:
      return 'mat4';
    case 35667:
      return 'ivec2';
    case 35668:
      return 'ivec3';
    case 35669:
      return 'vec4';
    case 35670:
      return 'bool';
    case 35671:
      return 'bvec2';
    case 35672:
      return 'bvec3';
    case 35673:
      return 'bvec4';
  }
  return 'sampler2D';
};

$.AbstractWorkerEvents$ = function(_ptr) {
  return new $.AbstractWorkerEvents(_ptr);
};

$.vec4$raw = function(x_, y_, z_, w_) {
  var t1 = new $.vec4(null, null, null, null);
  t1.vec4$raw$4(x_, y_, z_, w_);
  return t1;
};

$.ResourceLoaders_urlExtension = function(URL) {
  var chunks = $.getInterceptor(URL).split$1(URL, '.');
  if ($.gtB($.get$length(chunks), 0))
    return $.get$last(chunks);
  return '';
};

$.getInterceptor = function(object) {
  if (typeof object === 'string')
    return $.CTC0;
  if ($.isJsArray(object))
    return $.CTC1;
  return $.CTC2;
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.toString = function(value) {
  if (typeof value == "object" && value != null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.get$isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.get$isEmpty();
};

$.JSON_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.JSON_stringify = function(object) {
  return $._JsonStringifier_stringify(object);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.get$last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.get$last();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.lastIndexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_lastIndexOf(receiver, element, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    return receiver.lastIndexOf(element);
  }
  return receiver.lastIndexOf$1(element);
};

$.lastIndexOf$2 = function(receiver, element, start) {
  var t1;
  if ($.isJsArray(receiver))
    return $.Arrays_lastIndexOf(receiver, element, start);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (!(start == null)) {
      if (!(typeof start === 'number'))
        throw $.$$throw($.ArgumentError$(start));
      if (start < 0)
        return -1;
      t1 = receiver.length;
      if (start >= t1) {
        if (element === '')
          return t1;
        start = t1 - 1;
      } else
        start = start;
    }
    return $.stringLastIndexOfUnchecked(receiver, element, start);
  }
  return receiver.lastIndexOf$2(element, start);
};

$.get$isNegative = function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
};

$.get$isNaN = function(receiver) {
  return isNaN(receiver);
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.toInt = function(receiver) {
  var truncated;
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$.get$isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.toStringAsFixed = function(receiver, fractionDigits) {
  var result;
  if (!(typeof receiver === 'number'))
    return receiver.toStringAsFixed$1(fractionDigits);
  $.checkNum(fractionDigits);
  result = receiver.toFixed(fractionDigits);
  if (receiver === 0 && $.get$isNegative(receiver) === true)
    return '-' + result;
  return result;
};

$.toDouble = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toDouble$0();
  return receiver;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf('Chrome') !== -1 || userAgent.indexOf('DumpRenderTree') !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf('Firefox') !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf('MSIE') !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf('Opera') !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf('AppleWebKit') !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.contains$1 = function(receiver, other) {
  var t1, i;
  if (typeof receiver !== 'string' && (typeof receiver !== 'object' || receiver === null || receiver.constructor !== Array && !receiver.is$JavaScriptIndexingBehavior()))
    return $.contains$1$bailout(1, receiver, other);
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (t1 = receiver.length, i = 0; i < t1; ++i)
      if (other === receiver[i])
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.get$hashCode = function(receiver) {
  var length$, i, hash, hash0, hash1;
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 536870911;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.get$hashCode();
  length$ = receiver.length;
  for (i = 0, hash = 0; i < length$; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + (524287 & hash0) << 10;
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + (67108863 & hash) << 3;
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + (16383 & hash0) << 15;
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.TabbedElement$ = function() {
  return new $.TabbedElement($._ListImpl_List(null), $._ListImpl_List(null));
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = $.getInterceptor(tags).split$1(tags, '|');
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    $.getInterceptor(result).add$1(result, $.MetaInfo$(tag, tags, set));
  }
  return result;
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$._onUpdate = function(time) {
  $._counter.update$1(time);
  $.Game__gameInstance.update$1(time);
  $.Game__gameInstance.draw$0();
  $.window().requestAnimationFrame$1($._onUpdate);
};

$.main = function() {
  $._viewer = $.Viewer$();
  $.Game_onInitialize();
  $._counter = $.FrameCounter$('#frame_counter', 100, 50, 30);
  $.Game_instance().setVertexSource$1($._defaultVertexSource);
  $.Game_instance().setFragmentSource$1($._defaultFragmentSource);
  $.window().requestAnimationFrame$1($._onUpdate);
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnProperty, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnProperty = Object.prototype.hasOwnProperty;
  method = $.lookupDynamicClass(hasOwnProperty, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (hasOwnProperty.call(entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnProperty, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnProperty, methods, $.getTypeNameOf($.CTC11));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!hasOwnProperty.call(proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC11)[name$];
  if (!(dartMethod == null))
    methods['Object'] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.BatteryManagerEvents$ = function(_ptr) {
  return new $.BatteryManagerEvents(_ptr);
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  return new $.MediaStreamTrackEvents(_ptr);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.MediaStreamTrackListEvents$ = function(_ptr) {
  return new $.MediaStreamTrackListEvents(_ptr);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$.IndexBuffer$ = function(name$, device) {
  var t1 = new $.IndexBuffer(null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.SpectreBuffer$2(name$, device);
  t1.IndexBuffer$2(name$, device);
  return t1;
};

$.MessagePortEvents$ = function(_ptr) {
  return new $.MessagePortEvents(_ptr);
};

$.InputLayout$ = function(name$, device) {
  var t1 = new $.InputLayout(null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.InputLayout$2(name$, device);
  return t1;
};

$._InputLayoutElement$ = function() {
  return new $._InputLayoutElement(null, null, null, null, null);
};

$.InputElementDescription$ = function(name$, format, elementStride, vertexBufferSlot, vertexBufferOffset) {
  return new $.InputElementDescription(name$, format, elementStride, vertexBufferSlot, vertexBufferOffset);
};

$._InputElementChecker$ = function() {
  var t1 = new $._InputElementChecker(null);
  t1._InputElementChecker$0();
  return t1;
};

$._InputElementCheckerItem$ = function(name$, vertexBufferSlot, vertexBufferOffset) {
  return new $._InputElementCheckerItem(name$, vertexBufferSlot, vertexBufferOffset);
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.VertexBuffer$ = function(name$, device) {
  var t1 = new $.VertexBuffer(null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.SpectreBuffer$2(name$, device);
  t1.VertexBuffer$2(name$, device);
  return t1;
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.BlendState$ = function(name$, device) {
  var t1 = new $.BlendState(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.BlendState$2(name$, device);
  return t1;
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.ImageElement_ImageElement = function(height, src, width) {
  var t1, t2, t3;
  t1 = $ === height;
  if (t1)
    height = null;
  t2 = $ === src;
  if (t2)
    src = null;
  t3 = $ === width;
  if (t3)
    width = null;
  if (t2)
    return $._Elements_createImageElement(null, null, null);
  if (t3)
    return $._Elements_createImageElement(src, null, null);
  if (t1)
    return $._Elements_createImageElement(src, width, null);
  return $._Elements_createImageElement(src, width, height);
};

$.NotificationEvents$ = function(_ptr) {
  return new $.NotificationEvents(_ptr);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$.Arrays_lastIndexOf = function(a, element, startIndex) {
  var t1, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_lastIndexOf$bailout(1, a, element, startIndex);
  if (typeof startIndex !== 'number')
    return $.Arrays_lastIndexOf$bailout(1, a, element, startIndex);
  if (startIndex < 0)
    return -1;
  t1 = a.length;
  if (startIndex >= t1)
    startIndex = t1 - 1;
  for (i = startIndex; i >= 0; --i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  var end, i, t1;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    t1 = $.getInterceptor(accumulator);
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    t1.add$1(accumulator, a[i]);
  }
  return accumulator;
};

$._Lists_lastIndexOf = function(a, element, startIndex) {
  var t1, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_lastIndexOf$bailout(1, a, element, startIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_lastIndexOf$bailout(1, a, element, startIndex);
  if (startIndex < 0)
    return -1;
  t1 = a.length;
  if (startIndex >= t1)
    startIndex = t1 - 1;
  for (i = startIndex; i >= 0; --i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.PeerConnection00Events$ = function(_ptr) {
  return new $.PeerConnection00Events(_ptr);
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.getInterceptor(dict).forEach$1(dict, new $._convertDartToNative_Dictionary_anon(object));
  return object;
};

$._convertNativeToDart_IDBAny = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, false);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t3, t2, t1).call$1(value);
  t4.call$0();
  return copy;
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1;
  values = [];
  copies = [];
  t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies), t1, mustCopy, new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$._convertNativeToDart_SerializedScriptValue = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, true);
};

$.RTCDataChannelEvents$ = function(_ptr) {
  return new $.RTCDataChannelEvents(_ptr);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $globals = rootContext.isolateStatics;
  $static_init();
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$._globalState = function() {
  return $globalState;
};

$._convertDartToNative_ImageData = function(imageData) {
  if (typeof imageData === 'object' && imageData !== null && !!imageData.is$_TypedImageData)
    return {data: imageData.data, height: imageData.height, width: imageData.width};
  return imageData;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$.RTCPeerConnectionEvents$ = function(_ptr) {
  return new $.RTCPeerConnectionEvents(_ptr);
};

$.UniformSamplerValue$ = function(name$) {
  var t1 = new $.UniformSamplerValue(null, null, null, null, null, null);
  t1.UniformValue$2(name$, 'sampler2D');
  t1.UniformSamplerValue$1(name$);
  return t1;
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$.DepthState$ = function(name$, device) {
  var t1 = new $.DepthState(null, null, null, null, null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.DepthState$2(name$, device);
  return t1;
};

$.RasterizerState$ = function(name$, device) {
  var t1 = new $.RasterizerState(null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.RasterizerState$2(name$, device);
  return t1;
};

$._OptionElementFactoryProvider_createOptionElement = function(data, value, defaultSelected, selected) {
  if (data == null)
    return new Option();
  if (value == null)
    return new Option(data);
  if (defaultSelected == null)
    return new Option(data,value);
  if (selected == null)
    return new Option(data,value,defaultSelected);
  return new Option(data,value,defaultSelected,selected);
};

$.parseInt = function(string) {
  return $.int_parse(string);
};

$.cos = function(x) {
  return Math.cos($.checkNum(x));
};

$.sin = function(x) {
  return Math.sin($.checkNum(x));
};

$.acos0 = function(x) {
  return Math.acos($.checkNum(x));
};

$.Viewer$ = function() {
  var t1 = new $.Viewer(null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Viewer$0();
  return t1;
};

$.ToolTip$ = function(tip) {
  var t1 = new $.ToolTip(null);
  t1.ToolTip$1(tip);
  return t1;
};

$.Timer_Timer = function(milliSeconds, callback) {
  var t1 = $._TimerFactory__factory;
  if (t1 == null)
    throw $.$$throw($.UnsupportedError$('Timer interface not supported.'));
  return t1.call$3(milliSeconds, callback, false);
};

$.ApplicationFileSystem$ = function(fileSystemReadycallback) {
  var t1 = new $.ApplicationFileSystem(null, null, null, null, null);
  t1.ApplicationFileSystem$1(fileSystemReadycallback);
  return t1;
};

$.ApplicationFileSystem__onFileSystemError = function(error) {
  var messageCode;
  switch (error.get$code()) {
    case 10:
      messageCode = 'Quota Exceeded';
      break;
    case 1:
      messageCode = 'Not found ';
      break;
    case 2:
      messageCode = 'Security Error';
      break;
    case 9:
      messageCode = 'Invalid Modificaiton';
      break;
    case 7:
      messageCode = 'Invalid State';
      break;
    default:
      messageCode = 'Unknown error';
      break;
  }
  $.print('Filesystem error: ' + messageCode);
};

$.ApplicationFileSystem__getNewDirectoryName = function() {
  return $.S($.Date_Date$now().get$millisecondsSinceEpoch());
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.tan0 = function(x) {
  return Math.tan($.checkNum(x));
};

$.SamplerState$ = function(name$, device) {
  var t1 = new $.SamplerState(null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.SamplerState$2(name$, device);
  return t1;
};

$.HttpRequest_HttpRequest = function() {
  return new XMLHttpRequest();
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$.Workspace$ = function(entry, name$) {
  var t1 = new $.Workspace(null, null, null);
  t1.Workspace$2(entry, name$);
  return t1;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$.ModelSelection$ = function() {
  var t1 = new $.ModelSelection(null, null, null, null);
  t1.ModelSelection$0();
  return t1;
};

$.HeadingElement_HeadingElement$h2 = function() {
  return $.document().$$dom_createElement$1('h2');
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$.ScriptProcessorNodeEvents$ = function(_ptr) {
  return new $.ScriptProcessorNodeEvents(_ptr);
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.SourceEditor$ = function(textId, lineNumbersId) {
  var t1 = new $.SourceEditor(null, null, null, null, null);
  t1.SourceEditor$2(textId, lineNumbersId);
  return t1;
};

$.SourceEditor__toAscii = function(value) {
  var buffer, length$, i, charCode;
  buffer = $.StringBuffer_StringBuffer('');
  length$ = $.get$length(value);
  if (typeof length$ !== 'number')
    return $.SourceEditor__toAscii$bailout(1, value, buffer, length$);
  for (i = 0; i < length$; ++i) {
    charCode = $.getInterceptor(value).charCodeAt$1(value, i);
    if ($.eqB(charCode, 160))
      $.getInterceptor(buffer).add$1(buffer, ' ');
    else if ($.geB(charCode, 0) && $.ltB(charCode, 128))
      buffer.addCharCode$1(charCode);
    else
      $.print('Warning unknown character code at ' + $.S(i) + ': ' + $.S(charCode));
  }
  return $.toString(buffer);
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  return new $.SharedWorkerContextEvents(_ptr);
};

$.UniformSelection$ = function() {
  var t1 = new $.UniformSelection(null, null, null);
  t1.UniformSelection$0();
  return t1;
};

$.UniformSelection__createUniformValue = function(name$, type) {
  switch (type) {
    case 'sampler2D':
      return $.UniformSamplerValue$(name$);
  }
  return $.UniformSamplerValue$(name$);
};

$.TextureSelection$ = function() {
  var t1 = new $.TextureSelection(null, null, null, null);
  t1.TextureSelection$0();
  return t1;
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$.SourceEditor__toUnicode = function(value) {
  var buffer, t1, t2, length$, i;
  buffer = $.StringBuffer_StringBuffer('');
  for (t1 = $.iterator($.getInterceptor(value).split$1(value, '\n')); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    length$ = $.get$length(t2);
    if (typeof length$ !== 'number')
      return $.SourceEditor__toUnicode$bailout(1, t2, buffer, length$, t1);
    for (i = 0; i < length$; ++i)
      if ($.eqB($.getInterceptor(t2).charCodeAt$1(t2, i), 32))
        buffer.addCharCode$1(160);
      else
        break;
    for (; i < length$; ++i)
      buffer.addCharCode$1($.getInterceptor(t2).charCodeAt$1(t2, i));
    buffer.addCharCode$1(10);
  }
  return $.toString(buffer);
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$.RendererSelection$ = function() {
  var t1 = new $.RendererSelection(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.RendererSelection$0();
  return t1;
};

$.initSpectre = function() {
  if ($.spectreLog == null)
    $.spectreLog = $.PrintLogger$();
  return $.Future_Future$immediate(true);
};

$.CompileLog$ = function() {
  var t1 = new $.CompileLog(null, null, null, null, null, null);
  t1.CompileLog$0();
  return t1;
};

$.ModalDialog$ = function(id) {
  var t1 = new $.ModalDialog(null);
  t1.ModalDialog$1(id);
  return t1;
};

$.Float32Array_Float32Array$fromList = function(list) {
  return new Float32Array(list);
};

$.Float32Array_Float32Array = function(length$) {
  return new Float32Array(length$);
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  return new $.SpeechRecognitionEvents(_ptr);
};

$.SaveDialog$ = function(id, fileSystem) {
  var t1 = new $.SaveDialog(null, null, null, null, null, null);
  t1.ModalDialog$1(id);
  t1.FileSystemDialog$2(id, fileSystem);
  t1.SaveDialog$2(id, fileSystem);
  return t1;
};

$.LoadDialog$ = function(id, fileSystem) {
  var t1 = new $.LoadDialog(null, null, null, null, null);
  t1.ModalDialog$1(id);
  t1.FileSystemDialog$2(id, fileSystem);
  return t1;
};

$.SimpleModalDialog$ = function(id) {
  var t1 = new $.SimpleModalDialog(null);
  t1.ModalDialog$1(id);
  t1.SimpleModalDialog$1(id);
  return t1;
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$.quat$ = function(a, b, c, d) {
  var t1 = new $.quat(null, null, null, null);
  t1.quat$4(a, b, c, d);
  return t1;
};

$.quat$copy = function(original) {
  var t1 = new $.quat(null, null, null, null);
  t1.quat$copy$1(original);
  return t1;
};

$.FileReader_FileReader = function() {
  return new FileReader();
};

$.sin0 = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.sin(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.sin(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.sin(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.sin(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.sin(arg.y));
    out.set$z($.sin(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.sin(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.sin(arg.y));
    out.set$z($.sin(arg.z));
    out.set$w($.sin(arg.w));
    return out;
  }
  throw $.$$throw($.ArgumentError$(arg));
};

$.cos0 = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.cos(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.cos(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.cos(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.cos(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.cos(arg.y));
    out.set$z($.cos(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.cos(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.cos(arg.y));
    out.set$z($.cos(arg.z));
    out.set$w($.cos(arg.w));
    return out;
  }
  throw $.$$throw($.ArgumentError$(arg));
};

$.tan = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.tan0(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.tan0(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.tan0(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.tan0(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.tan0(arg.y));
    out.set$z($.tan0(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.tan0(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.tan0(arg.y));
    out.set$z($.tan0(arg.z));
    out.set$w($.tan0(arg.w));
    return out;
  }
  throw $.$$throw($.ArgumentError$(arg));
};

$.degrees = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return arg * 180 / 3.141592653589793;
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.div($.mul(arg.x, 180), 3.141592653589793);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.div($.mul(arg.y, 180), 3.141592653589793));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.div($.mul(arg.x, 180), 3.141592653589793);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.div($.mul(arg.y, 180), 3.141592653589793));
    out.set$z($.div($.mul(arg.z, 180), 3.141592653589793));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.div($.mul(arg.x, 180), 3.141592653589793);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.div($.mul(arg.y, 180), 3.141592653589793));
    out.set$z($.div($.mul(arg.z, 180), 3.141592653589793));
    out.set$w($.div($.mul(arg.w, 180), 3.141592653589793));
    return out;
  }
  throw $.$$throw($.ArgumentError$(arg));
};

$.acos = function(arg, out) {
  var t1;
  if (typeof arg === 'number')
    return $.acos0(arg);
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec2) {
    if (out == null)
      out = $.vec2$zero();
    t1 = $.acos0(arg.x);
    $.propertyTypeCast(out, 'is$vec2');
    out.set$x(t1);
    out.set$y($.acos0(arg.y));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec3) {
    if (out == null)
      out = $.vec3$zero();
    t1 = $.acos0(arg.x);
    $.propertyTypeCast(out, 'is$vec3');
    out.set$x(t1);
    out.set$y($.acos0(arg.y));
    out.set$z($.acos0(arg.z));
    return out;
  }
  if (typeof arg === 'object' && arg !== null && !!arg.is$vec4) {
    if (out == null)
      out = $.vec4$zero();
    t1 = $.acos0(arg.x);
    $.propertyTypeCast(out, 'is$vec4');
    out.set$x(t1);
    out.set$y($.acos0(arg.y));
    out.set$z($.acos0(arg.z));
    out.set$w($.acos0(arg.w));
    return out;
  }
  throw $.$$throw($.ArgumentError$(arg));
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$.makeLookAt = function(cameraPosition, cameraFocusPosition, upDirection) {
  var z, x, y, r, rotatedEye;
  z = $.sub(cameraPosition, cameraFocusPosition);
  z.normalize$0();
  x = upDirection.cross$1(z);
  x.normalize$0();
  y = z.cross$1(x);
  y.normalize$0();
  r = $.mat4$zero();
  r.operator$index$1(0).set$xyz(x);
  r.operator$index$1(1).set$xyz(y);
  r.operator$index$1(2).set$xyz(z);
  r.operator$index$1(3).set$w(1);
  r = r.transposed$0();
  rotatedEye = $.mul(r, $.neg(cameraPosition));
  $.index(r, 3).set$xyz(rotatedEye);
  return r;
};

$.makePerspective = function(fov_y_radians, aspect_ratio, znear, zfar) {
  var height, width;
  height = $.mul($.tan(fov_y_radians * 0.5, null), znear);
  width = $.mul(height, aspect_ratio);
  return $.makeFrustum($.neg(width), width, $.neg(height), height, znear, zfar);
};

$.makeFrustum = function(left, right, bottom, top$, near, far) {
  var two_near, right_minus_left, top_minus_bottom, far_minus_near, view, t1;
  two_near = 2 * near;
  right_minus_left = $.sub(right, left);
  top_minus_bottom = $.sub(top$, bottom);
  far_minus_near = far - near;
  view = $.mat4$zero();
  if (typeof right_minus_left !== 'number')
    throw $.iae(right_minus_left);
  t1 = two_near / right_minus_left;
  view.operator$index$1(0).set$x(t1);
  if (typeof top_minus_bottom !== 'number')
    throw $.iae(top_minus_bottom);
  t1 = two_near / top_minus_bottom;
  view.operator$index$1(1).set$y(t1);
  t1 = $.div($.add(right, left), right_minus_left);
  view.operator$index$1(2).set$x(t1);
  t1 = $.div($.add(top$, bottom), top_minus_bottom);
  view.operator$index$1(2).set$y(t1);
  t1 = -(far + near) / far_minus_near;
  view.operator$index$1(2).set$z(t1);
  view.operator$index$1(2).set$w(-1);
  t1 = -(two_near * far) / far_minus_near;
  view.operator$index$1(3).set$z(t1);
  view.operator$index$1(3).set$w(0);
  return view;
};

$.Game$ = function(id) {
  var t1 = new $.Game(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.Game$1(id);
  return t1;
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.Game_instance = function() {
  return $.Game__gameInstance;
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$.String_String$fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes))
    charCodes = $._ListImpl_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.Blob_Blob = function(blobParts, type, endings) {
  var t1, t2;
  t1 = $ === type;
  if (t1)
    type = null;
  t2 = $ === endings;
  if (t2)
    endings = null;
  if (t1)
    return $._BlobFactoryProvider_createBlob(blobParts, null, null);
  if (t2)
    return $._BlobFactoryProvider_createBlob(blobParts, type, null);
  return $._BlobFactoryProvider_createBlob(blobParts, type, endings);
};

$.Game_onInitialize = function() {
  $.Game__gameInstance = $.Game$('#webgl_host');
};

$._ListImpl_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._ListImpl_List$from = function(other) {
  var result, t1, t2;
  result = $._ListImpl_List(null);
  for (t1 = $.iterator(other); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(result).add$1(result, t2);
  }
  return result;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.FrameCounter$ = function(id, width, height, historySize) {
  var t1 = new $.FrameCounter(0, 0, historySize, $.Queue_Queue(), null, null, width, height, 5, 5, null, null, '12px "Lucida Console", Monaco, monospace', '#070707', '#0F0', '#F00');
  t1.FrameCounter$4(id, width, height, historySize);
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.DivElement_DivElement = function() {
  return $.document().$$dom_createElement$1('div');
};

$.DOMApplicationCacheEvents$ = function(_ptr) {
  return new $.DOMApplicationCacheEvents(_ptr);
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.get$length(array), array, 0);
};

$.Viewport$ = function(name$, device) {
  var t1 = new $.Viewport(null, null, null, null, name$, device, null, null);
  t1.DeviceChild$2(name$, device);
  t1.Viewport$2(name$, device);
  return t1;
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if ('\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n' === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.index(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.getInterceptor(name$).charCodeAt$1(name$, 0) === 36 ? $.getInterceptor(name$).substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.iterator(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.get$isNaN(result) === true && !$.eqB(string, 'NaN'))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$._ImageResourceLoader$ = function() {
  return new $._ImageResourceLoader();
};

$._ResourceLoaderResult$ = function(success, data) {
  var t1 = new $._ResourceLoaderResult(success, data, null, null);
  t1._ResourceLoaderResult$2(success, data);
  return t1;
};

$.RangeError$value = function(value) {
  return new $.RangeError('value ' + $.S(value));
};

$.ImageResource$ = function(url, rm) {
  var t1 = new $.ImageResource(null, null, url, null, rm);
  t1.ResourceBase$2(url, rm);
  return t1;
};

$._ShaderResourceLoader$ = function() {
  return new $._ShaderResourceLoader();
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.getInterceptor(visiting).add$1(visiting, m);
  $.getInterceptor(result).add$1(result, '{');
  t1.first_1 = true;
  $.getInterceptor(m).forEach$1(m, new $.Maps__emitMap_anon(visiting, t1, result));
  $.getInterceptor(result).add$1(result, '}');
  $.getInterceptor(visiting).removeLast$0(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.ShaderResource$ = function(url, rm) {
  var t1 = new $.ShaderResource(null, null, url, null, rm);
  t1.ResourceBase$2(url, rm);
  t1.ShaderResource$2(url, rm);
  return t1;
};

$._MeshResourceLoader$ = function() {
  return new $._MeshResourceLoader();
};

$.MeshResource$ = function(url, rm) {
  var t1 = new $.MeshResource(null, null, null, null, url, null, rm);
  t1.ResourceBase$2(url, rm);
  return t1;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$._PackResourceLoader$ = function() {
  return new $._PackResourceLoader();
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(destination).add$1(destination, t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var isList, t1, first, t2;
  $.getInterceptor(visiting).add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t1 = $.getInterceptor(result);
  t1.add$1(result, isList ? '[' : '{');
  for (t1 = $.iterator(c), first = true; t1.get$hasNext() === true; first = false) {
    t2 = t1.next$0();
    if (!first)
      $.getInterceptor(result).add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
  }
  t1 = $.getInterceptor(result);
  t1.add$1(result, isList ? ']' : '}');
  $.getInterceptor(visiting).removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor(result).add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.PackResource$ = function(url, rm) {
  var t1 = new $.PackResource(null, null, url, null, rm);
  t1.ResourceBase$2(url, rm);
  t1.PackResource$2(url, rm);
  return t1;
};

$._ShaderProgramResourceLoader$ = function() {
  return new $._ShaderProgramResourceLoader();
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  return new $.DedicatedWorkerContextEvents(_ptr);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.WorkerContextEvents$ = function(_ptr) {
  return new $.WorkerContextEvents(_ptr);
};

$.ShaderProgramResource$ = function(url, rm) {
  var t1 = new $.ShaderProgramResource(null, null, null, url, null, rm);
  t1.ResourceBase$2(url, rm);
  t1.ShaderProgramResource$2(url, rm);
  return t1;
};

$._RenderConfigResourceLoader$ = function() {
  return new $._RenderConfigResourceLoader();
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$._SceneResourceLoader$ = function() {
  return new $._SceneResourceLoader();
};

$.RenderConfigResource$ = function(url, rm) {
  var t1 = new $.RenderConfigResource(null, null, url, null, rm);
  t1.ResourceBase$2(url, rm);
  t1.RenderConfigResource$2(url, rm);
  return t1;
};

$._Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(destination).add$1(destination, t2);
  }
  return destination;
};

$._Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.NoSuchMethodError_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string') {
    t1 = $.getInterceptor(object).replaceAll$2(object, '\\', '\\\\');
    t1 = $.getInterceptor(t1).replaceAll$2(t1, '\n', '\\n');
    t1 = $.getInterceptor(t1).replaceAll$2(t1, '\r', '\\r');
    return '"' + $.S($.getInterceptor(t1).replaceAll$2(t1, '"', '\\"')) + '"';
  }
  return $.Primitives_objectToString(object);
};

$.Uint16Array_Uint16Array$fromList = function(list) {
  return new Uint16Array(list);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.CanvasElement_CanvasElement = function(height, width) {
  var t1, t2;
  t1 = $ === height;
  if (t1)
    height = null;
  t2 = $ === width;
  if (t2)
    width = null;
  if (t2)
    return $._Elements_createCanvasElement(null, null);
  if (t1)
    return $._Elements_createCanvasElement(width, null);
  return $._Elements_createCanvasElement(width, height);
};

$.SceneResource$ = function(url, rm) {
  var t1 = new $.SceneResource(null, null, url, null, rm);
  t1.ResourceBase$2(url, rm);
  t1.SceneResource$2(url, rm);
  return t1;
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  $.checkNull(separator);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$._Elements_createAnchorElement = function(href) {
  var _e = $.document().$$dom_createElement$1('a');
  if (!(href == null))
    _e.set$href(href);
  return _e;
};

$._Elements_createCanvasElement = function(width, height) {
  var _e = $.document().$$dom_createElement$1('canvas');
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$._Elements_createImageElement = function(src, width, height) {
  var _e = $.document().$$dom_createElement$1('img');
  if (!(src == null))
    _e.set$src(src);
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$._Elements_createTableCellElement = function() {
  return $.document().$$dom_createElement$1('td');
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.PrintLogger$ = function() {
  return new $.PrintLogger();
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(false, null, null, null, false, [], [], []);
};

$._FutureImpl__FutureImpl$immediate = function(value) {
  var res = $._FutureImpl$();
  res._setValue$1(value);
  return res;
};

$.TableRowElement_TableRowElement = function() {
  return $.document().$$dom_createElement$1('tr');
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$.TableElement_TableElement = function() {
  return $.document().$$dom_createElement$1('table');
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  return new $.FutureUnhandledException(source, stackTrace);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.EventSourceEvents$ = function(_ptr) {
  return new $.EventSourceEvents(_ptr);
};

$.TableCellElement_TableCellElement = function() {
  return $._Elements_createTableCellElement();
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.GraphicsDevice$ = function(gl) {
  var t1 = new $.GraphicsDevice(null, null, null, null, null, null, null);
  t1.GraphicsDevice$1(gl);
  return t1;
};

$.vec2$ = function(x_, y_) {
  var t1 = new $.vec2(null, null);
  t1.vec2$2(x_, y_);
  return t1;
};

$.FileReaderEvents$ = function(_ptr) {
  return new $.FileReaderEvents(_ptr);
};

$.vec2$raw = function(x_, y_) {
  var t1 = new $.vec2(null, null);
  t1.vec2$raw$2(x_, y_);
  return t1;
};

$.vec2$zero = function() {
  var t1 = new $.vec2(null, null);
  t1.vec2$zero$0();
  return t1;
};

$.GraphicsContext$ = function(device) {
  var t1 = new $.GraphicsContext(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.GraphicsContext$1(device);
  return t1;
};

$.FileWriterEvents$ = function(_ptr) {
  return new $.FileWriterEvents(_ptr);
};

$.ResourceManager$ = function() {
  return new $.ResourceManager($.ResourceLoaders$(), $.HandleSystem$(2048, 512), $._ListImpl_List(2048), '', $.Map_Map());
};

$.vec3$ = function(x_, y_, z_) {
  var t1 = new $.vec3(null, null, null);
  t1.vec3$3(x_, y_, z_);
  return t1;
};

$.vec3$zero = function() {
  var t1 = new $.vec3(null, null, null);
  t1.vec3$zero$0();
  return t1;
};

$.vec3$raw = function(x_, y_, z_) {
  var t1 = new $.vec3(null, null, null);
  t1.vec3$raw$3(x_, y_, z_);
  return t1;
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$());
};

$.WorkerEvents$ = function(_ptr) {
  return new $.WorkerEvents(_ptr);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.SelectElement_SelectElement = function() {
  return $.document().$$dom_createElement$1('select');
};

$.TextureUnit$ = function(location$) {
  var t1 = new $.TextureUnit(null, null, null, null, null, null, null, null, null);
  t1.TextureUnit$1(location$);
  return t1;
};

$.TextureUnit__createSelectElement = function(tableElement, name$, values, toolTipText) {
  var row, t1, cell, select;
  row = $.TableRowElement_TableRowElement();
  t1 = tableElement.get$nodes();
  $.getInterceptor(t1).add$1(t1, row);
  cell = $.TableCellElement_TableCellElement();
  cell.set$innerHTML(name$);
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, cell);
  cell = $.TableCellElement_TableCellElement();
  select = $.SelectElement_SelectElement();
  $.getInterceptor(values).forEach$1(values, new $.TextureUnit__createSelectElement_anon(select));
  t1 = cell.get$nodes();
  $.getInterceptor(t1).add$1(t1, select);
  t1 = row.get$nodes();
  $.getInterceptor(t1).add$1(t1, cell);
  t1 = $.TableCellElement_TableCellElement().get$classes();
  $.getInterceptor(t1).add$1(t1, 'variable_tool_tip');
  $.ToolTip$(toolTipText);
  return select;
};

$.ResourceEvents$ = function() {
  var t1 = new $.ResourceEvents(null, null, null);
  t1.ResourceEvents$0();
  return t1;
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.Futures_wait = function(futures) {
  var t1, completer, result, values, i, future;
  t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC3);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = futures.length;
  values = $._ListImpl_List(futures.length);
  for (i = 0; i < futures.length; ++i) {
    future = futures[i];
    future.then$1(new $.Futures_wait_anon(t1, i, result, completer, values));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$.IDBDatabaseEvents$ = function(_ptr) {
  return new $.IDBDatabaseEvents(_ptr);
};

$.InputLayoutHelper_inputElementDescriptionFromMeshMap = function(description, mesh, meshIndex) {
  var attribute, type, numElements, stride, offset, format;
  attribute = $.index($.index($.index($.index(mesh, 'meshes'), meshIndex), 'attributes'), description.get$meshAttributeName());
  if (attribute == null) {
    $.spectreLog.Info$1('mesh is does not have ' + $.S(description.get$meshAttributeName()));
    return;
  }
  type = $.index(attribute, 'type');
  numElements = $.index(attribute, 'numElements');
  $.index(attribute, 'normalized');
  stride = $.index(attribute, 'stride');
  offset = $.index(attribute, 'offset');
  if ($.eqB(type, 'float')) {
    format = $.eqB(numElements, 1) ? $.CTC5 : null;
    if ($.eqB(numElements, 2))
      format = $.CTC6;
    if ($.eqB(numElements, 3))
      format = $.CTC7;
    if ($.eqB(numElements, 4))
      format = $.CTC8;
  } else
    format = null;
  if (format == null) {
    $.spectreLog.Info$1('cant find format for ' + $.S(type) + ' ' + $.S(numElements));
    return;
  }
  return $.InputElementDescription$(description.get$shaderAttributeName(), format, stride, description.get$vertexBufferIndex(), offset);
};

$.InputLayoutHelper_inputElementDescriptionFromMesh = function(description, mesh, meshIndex) {
  if (mesh == null) {
    $.spectreLog.Info$1('mesh is null');
    return;
  }
  if (!(typeof mesh === 'object' && mesh !== null && !!mesh.is$MeshResource)) {
    $.spectreLog.Info$1('mesh is not a MeshResource');
    return;
  }
  return $.InputLayoutHelper_inputElementDescriptionFromMeshMap(description, mesh.meshData, meshIndex);
};

$.InputLayoutDescription$ = function(shaderAttributeName, vertexBufferIndex, meshAttributeName) {
  return new $.InputLayoutDescription(meshAttributeName, vertexBufferIndex, shaderAttributeName);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.IDBOpenDBRequestEvents$ = function(_ptr) {
  return new $.IDBOpenDBRequestEvents(_ptr);
};

$.IDBRequestEvents$ = function(_ptr) {
  return new $.IDBRequestEvents(_ptr);
};

$._HashSetImpl$ = function() {
  var t1 = new $._HashSetImpl(null);
  t1._HashSetImpl$0();
  return t1;
};

$.IDBTransactionEvents$ = function(_ptr) {
  return new $.IDBTransactionEvents(_ptr);
};

$.ParagraphElement_ParagraphElement = function() {
  return $.document().$$dom_createElement$1('p');
};

$.IDBVersionChangeRequestEvents$ = function(_ptr) {
  return new $.IDBVersionChangeRequestEvents(_ptr);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.Random_Random = function(seed) {
  return $.CTC9;
};

$.GraphicsDeviceCapabilities$_fromContext = function(gl) {
  var t1 = new $.GraphicsDeviceCapabilities(null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null);
  t1.GraphicsDeviceCapabilities$_fromContext$1(gl);
  return t1;
};

$._HashSetIterator$ = function(set_) {
  var t1 = new $._HashSetIterator(set_._backingMap._keys, -1);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.Camera$ = function() {
  var t1 = new $.Camera(null, null, null, null, null, null, null);
  t1.Camera$0();
  return t1;
};

$.OptionElement_OptionElement = function(data, value, defaultSelected, selected) {
  var t1, t2, t3, t4;
  t1 = $ === data;
  if (t1)
    data = null;
  t2 = $ === value;
  if (t2)
    value = null;
  t3 = $ === defaultSelected;
  if (t3)
    defaultSelected = null;
  t4 = $ === selected;
  if (t4)
    selected = null;
  if (t1)
    return $._OptionElementFactoryProvider_createOptionElement(null, null, null, null);
  if (t2)
    return $._OptionElementFactoryProvider_createOptionElement(data, null, null, null);
  if (t3)
    return $._OptionElementFactoryProvider_createOptionElement(data, value, null, null);
  if (t4)
    return $._OptionElementFactoryProvider_createOptionElement(data, value, defaultSelected, null);
  return $._OptionElementFactoryProvider_createOptionElement(data, value, defaultSelected, selected);
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$.MouseKeyboardCameraController$ = function() {
  var t1 = new $.MouseKeyboardCameraController(null, null, null, null, null, null, null, null, null, null, null, null);
  t1.MouseKeyboardCameraController$0();
  return t1;
};

$.HandleSystem$ = function(_totalCapacity, _staticCapacity) {
  var t1 = new $.HandleSystem(null, _totalCapacity, _staticCapacity, null, null, null);
  t1.HandleSystem$2(_totalCapacity, _staticCapacity);
  return t1;
};

$.mat4$zero = function() {
  var t1 = new $.mat4(null, null, null, null);
  t1.mat4$zero$0();
  return t1;
};

$.mat4$identity = function() {
  var t1 = new $.mat4(null, null, null, null);
  t1.mat4$identity$0();
  return t1;
};

$.AnchorElement_AnchorElement = function(href) {
  var t1 = $ === href;
  if (t1)
    href = null;
  if (t1)
    return $._Elements_createAnchorElement(null);
  return $._Elements_createAnchorElement(href);
};

$.mat4$rotationX = function(radians_) {
  var t1 = new $.mat4(null, null, null, null);
  t1.mat4$rotationX$1(radians_);
  return t1;
};

$._ElementAttributeMap$ = function(_element) {
  return new $._ElementAttributeMap(_element);
};

$._BlobFactoryProvider_createBlob = function(blobParts, type, endings) {
  var t1, bag;
  t1 = type == null;
  if (t1 && endings == null)
    return new Blob(blobParts);
  bag = {};
  if (!t1)
    bag['type'] = type;
  if (!(endings == null))
    bag['endings'] = endings;
  return new Blob(blobParts, bag);
};

$.allMatchesInStringUnchecked$bailout = function(state0, needle, haystack, patternLength, result, length$) {
  var startIndex, position, endIndex;
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    $.getInterceptor(result).add$1(result, $.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringReplaceAllUnchecked$bailout = function(state0, receiver, from, to) {
  var result, length$, i;
  if (typeof from === 'string')
    if (from === '')
      if ($.eqB(receiver, ''))
        return to;
      else {
        result = $.StringBuffer_StringBuffer('');
        length$ = $.get$length(receiver);
        $.getInterceptor(result).add$1(result, to);
        for (i = 0; $.ltB(i, length$); ++i) {
          $.getInterceptor(result).add$1(result, $.index(receiver, i));
          $.getInterceptor(result).add$1(result, to);
        }
        return $.toString(result);
      }
    else
      return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
  else if (typeof from === 'object' && from !== null && !!from.is$JSSyntaxRegExp)
    return $.stringReplaceJS(receiver, $.regExpMakeNative(from, true), to);
  else {
    $.checkNull(from);
    throw $.$$throw('String.replaceAll(Pattern) UNIMPLEMENTED');
  }
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_lastIndexOf$bailout = function(state0, a, element, startIndex) {
  var i;
  if ($.ltB(startIndex, 0))
    return -1;
  if ($.geB(startIndex, $.get$length(a)))
    startIndex = $.sub($.get$length(a), 1);
  for (i = startIndex; $.geB(i, 0); i = $.sub(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    $.getInterceptor(accumulator).add$1(accumulator, $.index(a, i));
  return accumulator;
};

$.SourceEditor__toAscii$bailout = function(state0, value, buffer, length$) {
  var i, charCode;
  for (i = 0; $.ltB(i, length$); ++i) {
    charCode = $.getInterceptor(value).charCodeAt$1(value, i);
    if ($.eqB(charCode, 160))
      $.getInterceptor(buffer).add$1(buffer, ' ');
    else if ($.geB(charCode, 0) && $.ltB(charCode, 128))
      buffer.addCharCode$1(charCode);
    else
      $.print('Warning unknown character code at ' + $.S(i) + ': ' + $.S(charCode));
  }
  return $.toString(buffer);
};

$.SourceEditor__toUnicode$bailout = function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env3;
      length$ = env2;
      buffer = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      buffer = $.StringBuffer_StringBuffer('');
      t1 = $.iterator($.getInterceptor(value).split$1(value, '\n'));
    case 1:
      var buffer, t1, t2, length$, i;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(t1.get$hasNext() === true))
                break L0;
              t2 = t1.next$0();
              length$ = $.get$length(t2);
            case 1:
              state0 = 0;
              for (i = 0; $.ltB(i, length$); ++i)
                if ($.eqB($.getInterceptor(t2).charCodeAt$1(t2, i), 32))
                  buffer.addCharCode$1(160);
                else
                  break;
              for (; $.ltB(i, length$); ++i)
                buffer.addCharCode$1($.getInterceptor(t2).charCodeAt$1(t2, i));
              buffer.addCharCode$1(10);
          }
      return $.toString(buffer);
  }
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Arrays_lastIndexOf$bailout = function(state0, a, element, startIndex) {
  var i;
  if ($.ltB(startIndex, 0))
    return -1;
  if ($.geB(startIndex, $.get$length(a)))
    startIndex = $.sub($.get$length(a), 1);
  for (i = startIndex; $.geB(i, 0); i = $.sub(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  var completer, result, values, i, future;
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC3);
  completer = $.Completer_Completer();
  result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  values = $._ListImpl_List($.get$length(futures));
  for (i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(t1, i, result, completer, values));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$.contains$1$bailout = function(state0, receiver, other) {
  var i;
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; $.ltB(i, $.get$length(receiver)); ++i)
      if (other === $.index(receiver, i))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.Strings__toJsStringArray$bailout = function(state0, strings) {
  var length$, i, string, array;
  $.checkNull(strings);
  length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.ApplicationFileSystem__onFileSystemError.call$1 = $.ApplicationFileSystem__onFileSystemError;
$.ApplicationFileSystem__onFileSystemError.$name = "ApplicationFileSystem__onFileSystemError";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._onUpdate.call$1 = $._onUpdate;
$._onUpdate.$name = "_onUpdate";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC3 = Isolate.makeConstantList([]);
$.CTC6 = new Isolate.$isolateProperties.DeviceFormat(5126, 2, false);
$.CTC5 = new Isolate.$isolateProperties.DeviceFormat(5126, 1, false);
$.CTC7 = new Isolate.$isolateProperties.DeviceFormat(5126, 3, false);
$.CTC8 = new Isolate.$isolateProperties.DeviceFormat(5126, 4, false);
$.CTC10 = new Isolate.$isolateProperties._ExceptionImplementation('Incorrect number or type of arguments');
$.CTC4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC9 = new Isolate.$isolateProperties._Random();
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC3);
$.CTC11 = new Isolate.$isolateProperties.Object();
$.CTC2 = new Isolate.$isolateProperties.ObjectInterceptor();
$.CTC1 = new Isolate.$isolateProperties.JSArray();
$.CTC0 = new Isolate.$isolateProperties.JSString();
$.Handle_IndexMask = 1048575;
$.Handle_IndexShift = 0;
$.Handle_SerialMask = 15;
$.Handle_SerialShift = 20;
$.Handle_TypeMask = 15;
$.Handle_StatusMask = 15;
$.Handle_TypeShift = 24;
$.Handle_StatusShift = 28;
$.Handle_StatusUsed = 1;
$.Handle_StatusFreeList = 2;
$.Handle_BadHandle = 4294967295;
$._ElementNames_newFileButtonName = '#new_file_button';
$._ElementNames_saveFileButtonName = '#save_file_button';
$._ElementNames_loadFileButtonName = '#load_file_button';
$._ElementNames_fullscreenButtonName = '#fullscreen_button';
$._ElementNames_saveAsFileButtonName = '#save_as_file_button';
$._ElementNames_aboutButtonName = '#about_button';
$._ElementNames_modelTabName = '#model_tab';
$._ElementNames_modelAreaName = '#model_area';
$._ElementNames_textureTabName = '#texture_tab';
$._ElementNames_textureAreaName = '#texture_area';
$._ElementNames_vertexShaderTabName = '#vertex_shader_tab';
$._ElementNames_vertexShaderAreaName = '#vertex_shader_area';
$._ElementNames_fragmentShaderTabName = '#fragment_shader_tab';
$._ElementNames_fragmentShaderAreaName = '#fragment_shader_area';
$._ElementNames_variablesTabName = '#variables_tab';
$._ElementNames_variablesAreaName = '#variables_area';
$._ElementNames_rendererTabName = '#renderer_tab';
$._ElementNames_rendererAreaName = '#renderer_area';
$._ElementNames_loadingScreenName = '#loading_screen';
$._ElementNames_filesystemDialogName = '#filesystem_access_dialog';
$._ElementNames_aboutDialogName = '#about_dialog';
$._ElementNames_saveDialogName = '#save_as_dialog';
$._ElementNames_loadDialogName = '#load_dialog';
$._getTypeNameOf = null;
$._ElementNames_submitButtonClassName = '.submit_button';
$._ElementNames_cancelButtonClassName = '.cancel_button';
$._ElementNames_dragOverClassName = 'drag_over';
$._ElementNames_dragLeaveClassName = 'drag_none';
$._ElementNames_variableToolTipClassName = 'variable_tool_tip';
$._ElementNames_toolTipClassName = 'tool_tip';
$._ElementNames_toolTipAttributeName = 'tool_tip_attribute';
$._ElementNames_hiddenClass = 'hidden';
$.MIRROR_OPT_IN_MESSAGE = '\nThis program is using an experimental feature called "mirrors".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n';
$.Primitives_hashCodeSeed = 0;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.UniformType_Sampler2d = 35678;
$.TextureUnit__dropText = 'Drag and Drop a Texture to Change';
$.UniformType_Sampler2dName = 'sampler2D';
$.TextureUnit__textureFileName = 'filename';
$.UniformType_SamplerCube = 35680;
$.TextureUnit__wrapSName = 'wrapS';
$.UniformType_SamplerCubeName = 'samplerCube';
$.TextureUnit__wrapTName = 'wrapT';
$.UniformType_Float = 5126;
$.TextureUnit__minificationFilterName = 'minFilter';
$.UniformType_FloatName = 'float';
$.TextureUnit__magnificationFilterName = 'maxFilter';
$.UniformType_Vector2f = 35664;
$.TextureUnit__wrapSToolTip = 'Wrapping in the S direction';
$.UniformType_Vector2fName = 'vec2';
$.UniformType_Vector3f = 35665;
$.TextureUnit__minificationFilterToolTip = 'Tool tip';
$.Viewer__fileSystemDialogDelay = 10000;
$.TextureUnit__magnificationFilterToolTip = 'Tool tip';
$.UniformType_Vector4f = 35666;
$.UniformType_Vector3fName = 'vec3';
$.UniformType_Vector4fName = 'vec4';
$.UniformType_Matrix2x2f = 35674;
$.UniformType_Matrix3x3f = 35675;
$.UniformType_Matrix4x4f = 35676;
$.UniformType_Matrix2x2fName = 'mat2';
$.UniformType_Matrix4x4fName = 'mat4';
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.UniformType_IntegerName = 'int';
$.UniformType_Vector2i = 35667;
$.UniformType_Vector2iName = 'ivec2';
$.UniformType_Vector3i = 35668;
$.UniformType_Vector3iName = 'ivec3';
$.UniformType_Vector4i = 35669;
$.UniformType_Vector4iName = 'vec4';
$.UniformType_Matrix3x3fName = 'mat3';
$.UniformType_Boolean = 35670;
$.UniformType_BooleanName = 'bool';
$.UniformType_Vector2b = 35671;
$.UniformType_Vector2bName = 'bvec2';
$.UniformType_Vector3b = 35672;
$.UniformType_Vector3bName = 'bvec3';
$.UniformType_Vector4bName = 'bvec4';
$.UniformType_Vector4b = 35673;
$.ApplicationFileSystem__bytesToRequest = 20971520;
$.ApplicationFileSystem__tempWorkspaceName = 'temp';
$.PI = 3.141592653589793;
$.Workspace__metadataFileName = 'meta.json';
$.Workspace__stateFileName = 'state.json';
$.Workspace__vertexShaderFileName = 'shader.vert';
$._TimerFactory__factory = null;
$.Workspace__fragmentShaderFileName = 'shader.frag';
$.Workspace__modelFileName = 'model.mesh';
$.ModelSelection__dropText = 'Drag and Drop a Model to Change';
$.ModelSelection__modelSelectedClass = 'model_selected';
$.ModelSelection__modelName = 'model';
$._JsonParser_BACKSPACE = 8;
$._JsonParser_TAB = 9;
$.ModelSelection__customModelName = 'custom';
$._JsonParser_NEW_LINE = 10;
$.ModelSelection__cubeModelIndex = 0;
$._JsonParser_FORM_FEED = 12;
$.ModelSelection__cubeModelName = 'cube';
$._JsonParser_CARRIAGE_RETURN = 13;
$.ModelSelection__cubeModelPath = 'web/resources/meshes/cube.mesh';
$._JsonParser_SPACE = 32;
$.ModelSelection__sphereModelIndex = 1;
$._JsonParser_QUOTE = 34;
$._JsonParser_PLUS = 43;
$.ModelSelection__sphereModelPath = 'web/resources/meshes/sphere.mesh';
$._JsonParser_COMMA = 44;
$.ModelSelection__planeModelIndex = 2;
$._JsonParser_MINUS = 45;
$._JsonParser_DOT = 46;
$.ModelSelection__planeModelPath = 'web/resources/meshes/plane.mesh';
$.ModelSelection__cylinderModelIndex = 3;
$._JsonParser_CHAR_0 = 48;
$._JsonParser_SLASH = 47;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_CHAR_2 = 50;
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_4 = 52;
$.ModelSelection__cylinderModelPath = 'web/resources/meshes/cylinder.mesh';
$._JsonParser_CHAR_5 = 53;
$._JsonParser_CHAR_6 = 54;
$.ModelSelection__customModelIndex = -1;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_CHAR_8 = 56;
$._JsonParser_CHAR_9 = 57;
$._JsonParser_COLON = 58;
$._JsonParser_CHAR_CAPITAL_E = 69;
$.ModelSelection__planeModelName = 'plane';
$._JsonParser_LBRACKET = 91;
$._JsonParser_BACKSLASH = 92;
$.TextureSelection__maxTextureUnits = 16;
$._JsonParser_RBRACKET = 93;
$.ModelSelection__cylinderModelName = 'cylinder';
$._JsonParser_CHAR_B = 98;
$.TextureSelection__texturesName = 'textures';
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC4;
$._JsonParser_CHAR_E = 101;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$._JsonParser_CHAR_F = 102;
$._JsonParser_CHAR_N = 110;
$.WebGLRenderingContext_ACTIVE_UNIFORMS = 35718;
$._JsonParser_CHAR_R = 114;
$._JsonParser_CHAR_T = 116;
$._JsonParser_CHAR_U = 117;
$._JsonParser_LBRACE = 123;
$.SourceEditor__compileDelay = 1000;
$._JsonParser_RBRACE = 125;
$._JsonParser_STRING_LITERAL = 34;
$._JsonParser_NUMBER_LITERAL = 45;
$.TabbedElement__selectedTabClass = 'selected';
$._JsonParser_NULL_LITERAL = 110;
$._JsonParser_FALSE_LITERAL = 102;
$._JsonParser_TRUE_LITERAL = 116;
$._JsonParser_WHITESPACE = 32;
$._JsonParser_LAST_ASCII = 125;
$._JsonParser_NULL_STRING = 'null';
$._JsonParser_TRUE_STRING = 'true';
$.WebGLRenderingContext_ALWAYS = 519;
$._JsonParser_FALSE_STRING = 'false';
$.SourceEditor__errorClassName = 'error_at';
$._JsonParser_tokens = null;
$.SourceEditor__warningClassName = 'warning_at';
$.WebGLRenderingContext_ARRAY_BUFFER = 34962;
$.UniformSelection__builtinUniformsId = '#builtin_uniforms';
$.UniformSelection__variableClassName = 'variable_name';
$.WebGLRenderingContext_BOOL_VEC3 = 35672;
$.UniformSelection__builtinAttributesId = '#builtin_attributes';
$.WebGLRenderingContext_BOOL_VEC4 = 35673;
$.WebGLRenderingContext_ARRAY_BUFFER_BINDING = 34964;
$.WebGLRenderingContext_BOOL_VEC2 = 35671;
$.LocalWindow_PERSISTENT = 1;
$.WebGLRenderingContext_BACK = 1029;
$.WebGLRenderingContext_BOOL = 35670;
$.WebGLRenderingContext_CCW = 2305;
$.WebGLRenderingContext_CLAMP_TO_EDGE = 33071;
$.ModelSelection__sphereModelName = 'sphere';
$._viewer = null;
$._counter = null;
$.WebGLRenderingContext_COLOR_BUFFER_BIT = 16384;
$.WebGLRenderingContext_BLEND = 3042;
$.RendererSelection__blendStateName = 'blendState';
$.WebGLRenderingContext_COMPILE_STATUS = 35713;
$.RendererSelection__depthStateName = 'depthState';
$.RendererSelection__rasterizerStateName = 'rasterizerState';
$.WebGLRenderingContext_CONSTANT_ALPHA = 32771;
$.RendererSelection__rasterizerStateEnabledId = '#rasterizer_state_enabled';
$.RendererSelection__rasterizerStateCullModeId = '#rasterizer_cull_mode';
$.RendererSelection__rasterizerStateFrontFaceId = '#rasterizer_front_face';
$.RendererSelection__depthStateEnabledId = '#depth_state_enabled';
$._defaultVertexSource = 'precision highp float;\r\n\r\n// Vertex attributes\r\nattribute vec3 vPosition;\r\nattribute vec2 vTexCoord;\r\n\r\n// Uniform variables\r\nuniform float uTime;\r\nuniform mat4 uModelMatrix;\r\nuniform mat4 uModelViewMatrix;\r\nuniform mat4 uModelViewProjectionMatrix;\r\nuniform mat4 uProjectionMatrix;\r\nuniform mat4 uNormalMatrix;\r\n\r\n// Varying variables\r\n// Allows communication between vertex and fragment stages\r\nvarying vec2 samplePoint;\r\n\r\nvoid main() {\r\n    vec4 vPosition4 = vec4(vPosition, 1.0);\r\n    gl_Position = uModelViewProjectionMatrix * vPosition4;\r\n    samplePoint = vTexCoord;\r\n}\r\n';
$.RendererSelection__depthStateWriteEnabledId = '#depth_write_enabled';
$.RendererSelection__depthStateComparisonId = '#depth_comparison';
$._defaultFragmentSource = 'precision mediump float;\r\n\r\nvarying vec2 samplePoint;\r\nuniform sampler2D sampler;\r\n\r\nvoid main() {\r\n    gl_FragColor = texture2D(sampler, samplePoint);\r\n}\r\n';
$.RendererSelection__blendStateEnabledId = '#blend_state_enabled';
$.RendererSelection__blendStateSourceColorId = '#source_color_function';
$.WebGLRenderingContext_CULL_FACE = 2884;
$.RendererSelection__blendStateDestinationColorId = '#destination_color_function';
$.RendererSelection__blendStateSourceAlphaId = '#source_alpha_function';
$.RendererSelection__blendStateDestinationAlphaId = '#destination_alpha_function';
$.RendererSelection__blendStateColorOperationId = '#blend_color_operation';
$.RendererSelection__blendStateAlphaOperationId = '#blend_alpha_operation';
$.RendererSelection__blendStateWriteRedId = '#write_red_enabled';
$.RendererSelection__blendStateWriteGreenId = '#write_green_enabled';
$.RendererSelection__blendStateWriteBlueId = '#write_blue_enabled';
$._newFileState = '{\r\n    "model": "cube",\r\n    "blendState": {\r\n        "blendAlphaOp": "BlendOpAdd",\r\n        "writeRenderTargetRed": true,\r\n        "writeRenderTargetBlue": true,\r\n        "writeRenderTargetGreen": true,\r\n        "blendSourceAlphaFunc": "BlendSourceShaderAlpha",\r\n        "blendDestColorFunc": "BlendSourceShaderInverseAlpha",\r\n        "writeRenderTargetAlpha": true,\r\n        "blendEnable": true,\r\n        "blendSourceColorFunc": "BlendSourceShaderAlpha",\r\n        "blendDestAlphaFunc": "BlendSourceShaderInverseAlpha",\r\n        "blendColorOp": "BlendOpAdd"\r\n    },\r\n    "rasterizerState": {\r\n        "cullEnabled": true,\r\n        "cullMode": "CullBack",\r\n        "cullFrontFace": "FrontCCW"\r\n    },\r\n    "depthState": {\r\n        "depthWriteEnabled": false,\r\n        "depthTestEnabled": true,\r\n        "depthComparisonOp": "DepthComparisonOpLess"\r\n    },\r\n    "textures": [\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "web/resources/textures/dart_tex.png",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        },\r\n        {\r\n            "wrapS": "TextureWrapRepeat",\r\n            "wrapT": "TextureWrapRepeat",\r\n            "filename": "",\r\n            "minFilter": "TextureMinFilterNearestMipmapLinear",\r\n            "maxFilter": "TextureMagFilterLinear"\r\n        }\r\n    ]\r\n}\r\n';
$.RendererSelection__blendStateWriteAlphaId = '#write_alpha_enabled';
$.WebGLRenderingContext_CW = 2304;
$._fallbackVertexShader = 'precision highp float;\r\n\r\n// Vertex attributes\r\nattribute vec3 vPosition;\r\n\r\n// Uniform variables\r\nuniform mat4 uModelViewProjectionMatrix;\r\n\r\n// Varying variables\r\n// Allows communication between vertex and fragment stages\r\nvarying vec2 samplePoint;\r\n\r\nvoid main() {\r\n    vec4 vPosition4 = vec4(vPosition, 1.0);\r\n    gl_Position = uModelViewProjectionMatrix * vPosition4;\r\n}\r\n';
$.WebGLRenderingContext_DEPTH_BUFFER_BIT = 256;
$._fallbackFragmentShader = 'precision mediump float;\r\n\r\nvoid main() {\r\n    gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\r\n}\r\n';
$.WebGLRenderingContext_DEPTH_TEST = 2929;
$.WebGLRenderingContext_ACTIVE_ATTRIBUTES = 35721;
$.WebGLRenderingContext_DST_ALPHA = 772;
$.WebGLRenderingContext_DST_COLOR = 774;
$.WebGLRenderingContext_DYNAMIC_DRAW = 35048;
$.WebGLRenderingContext_ELEMENT_ARRAY_BUFFER = 34963;
$.WebGLRenderingContext_ELEMENT_ARRAY_BUFFER_BINDING = 34965;
$.WebGLRenderingContext_EQUAL = 514;
$.WebGLRenderingContext_FLOAT = 5126;
$.WebGLRenderingContext_FLOAT_MAT2 = 35674;
$.WebGLRenderingContext_CONSTANT_COLOR = 32769;
$.WebGLRenderingContext_FLOAT_MAT3 = 35675;
$.WebGLRenderingContext_FLOAT_MAT4 = 35676;
$.WebGLRenderingContext_FLOAT_VEC2 = 35664;
$.WebGLRenderingContext_FLOAT_VEC3 = 35665;
$.WebGLRenderingContext_FLOAT_VEC4 = 35666;
$.WebGLRenderingContext_FRAGMENT_SHADER = 35632;
$.spectreLog = null;
$.WebGLRenderingContext_FRONT = 1028;
$.WebGLRenderingContext_FRONT_AND_BACK = 1032;
$.WebGLRenderingContext_FUNC_ADD = 32774;
$.WebGLRenderingContext_FUNC_REVERSE_SUBTRACT = 32779;
$.WebGLRenderingContext_FUNC_SUBTRACT = 32778;
$.WebGLRenderingContext_GEQUAL = 518;
$.WebGLRenderingContext_GREATER = 516;
$.ModalDialog__openedDialogClass = 'modal_dialog_opened';
$.ModalDialog__closedDialogClass = 'modal_dialog_closed';
$._cachedBrowserPrefix = null;
$.WebGLRenderingContext_INT_VEC3 = 35668;
$.WebGLRenderingContext_INT_VEC2 = 35667;
$.WebGLRenderingContext_INT_VEC4 = 35669;
$.FileSystemDialog__fileSelectedClass = 'file_selected';
$.WebGLRenderingContext_LEQUAL = 515;
$.WebGLRenderingContext_LESS = 513;
$.WebGLRenderingContext_LINEAR = 9729;
$.WebGLRenderingContext_LINEAR_MIPMAP_NEAREST = 9985;
$.WebGLRenderingContext_LINEAR_MIPMAP_LINEAR = 9987;
$.WebGLRenderingContext_LINK_STATUS = 35714;
$.WebGLRenderingContext_MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
$.WebGLRenderingContext_MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
$.WebGLRenderingContext_MAX_TEXTURE_IMAGE_UNITS = 34930;
$.WebGLRenderingContext_MAX_TEXTURE_SIZE = 3379;
$.Game__gameInstance = null;
$.WebGLRenderingContext_MAX_VARYING_VECTORS = 36348;
$.Game__keyCodeA = 65;
$.WebGLRenderingContext_MAX_VERTEX_ATTRIBS = 34921;
$.WebGLRenderingContext_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
$.Game__keyCodeS = 83;
$.WebGLRenderingContext_MAX_VERTEX_UNIFORM_VECTORS = 36347;
$.Game__keyCodeW = 87;
$.Game__keyCodeD = 68;
$.Game__maxTextureUnits = 16;
$.WebGLRenderingContext_MIRRORED_REPEAT = 33648;
$.WebGLRenderingContext_NEAREST = 9728;
$.WebGLRenderingContext_NEAREST_MIPMAP_LINEAR = 9986;
$.WebGLRenderingContext_NEAREST_MIPMAP_NEAREST = 9984;
$.WebGLRenderingContext_NEVER = 512;
$._ReceivePortImpl__nextFreeId = 1;
$.WebGLRenderingContext_NOTEQUAL = 517;
$.WebGLRenderingContext_ONE = 1;
$.WebGLRenderingContext_ONE_MINUS_CONSTANT_ALPHA = 32772;
$.WebGLRenderingContext_ONE_MINUS_CONSTANT_COLOR = 32770;
$.WebGLRenderingContext_ONE_MINUS_DST_ALPHA = 773;
$.WebGLRenderingContext_ONE_MINUS_DST_COLOR = 775;
$.WebGLRenderingContext_ONE_MINUS_SRC_ALPHA = 771;
$.WebGLRenderingContext_ONE_MINUS_SRC_COLOR = 769;
$.FileError_INVALID_MODIFICATION_ERR = 9;
$.FileError_INVALID_STATE_ERR = 7;
$.WebGLRenderingContext_POLYGON_OFFSET_FILL = 32823;
$.FileError_NOT_FOUND_ERR = 1;
$.FileError_QUOTA_EXCEEDED_ERR = 10;
$.FileError_SECURITY_ERR = 2;
$.WebGLRenderingContext_REPEAT = 10497;
$.WebGLRenderingContext_RGB = 6407;
$.WebGLRenderingContext_RGBA = 6408;
$.WebGLRenderingContext_SAMPLER_2D = 35678;
$.WebGLRenderingContext_SAMPLER_CUBE = 35680;
$.WebGLRenderingContext_SRC_ALPHA = 770;
$.WebGLRenderingContext_SRC_COLOR = 768;
$.WebGLRenderingContext_STATIC_DRAW = 35044;
$.FrameCounter__msPerSecond = 1000;
$.FrameCounter__maxFps = 60;
$.FrameCounter__goodFps = 30;
$.FrameCounter__defaultWidth = 100;
$.FrameCounter__defaultHeight = 50;
$.FrameCounter__defaultHistorySize = 30;
$.FrameCounter__defaultPadding = 5;
$.FrameCounter__defaultTextHeight = 5;
$.FrameCounter__defaultFont = '12px "Lucida Console", Monaco, monospace';
$.FrameCounter__defaultFontColor = '#070707';
$.FrameCounter__defaultGoodFpsColor = '#0F0';
$.FrameCounter__defaultBadFpsColor = '#F00';
$.WebGLRenderingContext_STREAM_DRAW = 35040;
$.GraphicsDevice_DeviceFormatFloat1 = Isolate.$isolateProperties.CTC5;
$.GraphicsDevice_DeviceFormatFloat2 = Isolate.$isolateProperties.CTC6;
$.GraphicsDevice_DeviceFormatFloat3 = Isolate.$isolateProperties.CTC7;
$.GraphicsDevice_DeviceFormatFloat4 = Isolate.$isolateProperties.CTC8;
$.GraphicsDevice_BufferHandleType = 1;
$.WebGLRenderingContext_TEXTURE0 = 33984;
$.GraphicsDevice_TextureHandleType = 4;
$.GraphicsDevice_SamplerStateHandleType = 5;
$.GraphicsDevice_ShaderHandleType = 6;
$.GraphicsDevice_ViewportHandleType = 8;
$.GraphicsDevice_ShaderProgramHandleType = 7;
$.GraphicsDevice_DepthStateHandleType = 9;
$.GraphicsDevice_BlendStateHandleType = 10;
$.GraphicsDevice_RasterizerStateHandleType = 11;
$.GraphicsDevice_InputLayoutHandleType = 12;
$.GraphicsDevice_MaxDeviceChildren = 2048;
$.WebGLRenderingContext_TEXTURE_2D = 3553;
$.WebGLRenderingContext_TEXTURE_BINDING_2D = 32873;
$.WebGLRenderingContext_TEXTURE_MIN_FILTER = 10241;
$.WebGLRenderingContext_TEXTURE_WRAP_S = 10242;
$.WebGLRenderingContext_TEXTURE_WRAP_T = 10243;
$.WebGLRenderingContext_TEXTURE_MAG_FILTER = 10240;
$.WebGLRenderingContext_TRIANGLES = 4;
$.WebGLRenderingContext_UNPACK_FLIP_Y_WEBGL = 37440;
$.WebGLRenderingContext_UNSIGNED_BYTE = 5121;
$.WebGLRenderingContext_UNSIGNED_SHORT = 5123;
$.WebGLRenderingContext_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
$.WebGLRenderingContext_VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
$.WebGLRenderingContext_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
$.WebGLRenderingContext_VERTEX_ATTRIB_ARRAY_SIZE = 34339;
$.WebGLRenderingContext_VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
$.WebGLRenderingContext_VERTEX_ATTRIB_ARRAY_TYPE = 34341;
$.WebGLRenderingContext_VERTEX_SHADER = 35633;
$.WebGLRenderingContext_ZERO = 0;
Isolate.$lazy($, '_errorExp', 'CompileLog__errorExp', 'get$CompileLog__errorExp', function() {
  return $.RegExp_RegExp('ERROR:\\s+(\\d+):(\\d+):\\s+(\'.*)', false, false);
});
Isolate.$lazy($, '_warningExp', 'CompileLog__warningExp', 'get$CompileLog__warningExp', function() {
  return $.RegExp_RegExp('WARNING:\\s+(\\d+):(\\d+):\\s+(\'.*)', false, false);
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
});
Isolate.$lazy($, '_builtinAttributeNames', 'UniformSelection__builtinAttributeNames', 'get$UniformSelection__builtinAttributeNames', function() {
  return $.makeLiteralMap(['vPosition', $.makeLiteralMap(['type', 'vec3', 'description', 'The position of the vertex']), 'vTexCoord', $.makeLiteralMap(['type', 'vec2', 'description', 'Texture coordinate for the vertex']), 'vNormal', $.makeLiteralMap(['type', 'vec3', 'description', 'The vertex normal']), 'vTangent', $.makeLiteralMap(['type', 'vec3', 'description', 'Tangent']), 'vBitangent', $.makeLiteralMap(['type', 'vec3', 'description', 'Bitangent'])]);
});
Isolate.$lazy($, '_builtinUniformNames', 'UniformSelection__builtinUniformNames', 'get$UniformSelection__builtinUniformNames', function() {
  return $.makeLiteralMap(['uTime', $.makeLiteralMap(['type', 'float', 'description', 'The current time of the simulation']), 'uModelMatrix', $.makeLiteralMap(['type', 'mat4', 'description', 'The model matrix']), 'uModelViewMatrix', $.makeLiteralMap(['type', 'mat4', 'description', 'The model/view matrix']), 'uModelViewProjectionMatrix', $.makeLiteralMap(['type', 'mat4', 'description', 'The model/view/projection matrix']), 'uProjectionMatrix', $.makeLiteralMap(['type', 'mat4', 'description', 'The projection matrix']), 'uNormalMatrix', $.makeLiteralMap(['type', 'mat4', 'description', 'The normal matrix'])]);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field + ";";
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v;";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$Element: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$Collection: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$IDBKeyRange: function() { return false; },
 is$ImageData: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$CanvasElement: function() { return false; },
 is$ImageElement: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$List: function() { return false; },
 is$DivElement: function() { return false; },
 is$Map: function() { return false; },
 is$File: function() { return false; },
 is$_FileList: function() { return false; },
 is$VideoElement: function() { return false; },
 is$Blob: function() { return false; }
});

$.$defineNativeClass('HTMLElement', {"": []
});

$.$defineNativeClass('AbstractWorker', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.AbstractWorkerEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('AnalyserNode', {"": []
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["href<", "name>", "type>"],
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', {"": ["name>"]
});

$.$defineNativeClass('WebKitAnimationEvent', {"": []
});

$.$defineNativeClass('HTMLAppletElement', {"": ["code>", "height=", "name>", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"": ["href<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', {"": [],
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"": [],
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["name>", "value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["length>"]
});

$.$defineNativeClass('AudioBufferSourceNode', {"": []
});

$.$defineNativeClass('AudioContext', {"": [],
 get$on: function() {
  return $.AudioContextEvents$(this);
}
});

$.$defineNativeClass('AudioDestinationNode', {"": []
});

$.$defineNativeClass('HTMLAudioElement', {"": []
});

$.$defineNativeClass('AudioGain', {"": []
});

$.$defineNativeClass('AudioListener', {"": []
});

$.$defineNativeClass('AudioNode', {"": ["context>"]
});

$.$defineNativeClass('AudioParam', {"": ["name>", "value="]
});

$.$defineNativeClass('AudioProcessingEvent', {"": []
});

$.$defineNativeClass('AudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLBRElement', {"": [],
 clear$0: function() { return this.clear.call$0(); },
 clear$1: function(arg0) { return this.clear.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('BarInfo', {"": ["visible>"]
});

$.$defineNativeClass('HTMLBaseElement', {"": ["href<"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"": ["size>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', {"": [],
 get$on: function() {
  return $.BatteryManagerEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', {"": ["url>"]
});

$.$defineNativeClass('BiquadFilterNode', {"": ["type>"]
});

$.$defineNativeClass('Blob', {"": ["size>", "type>"],
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {"": [],
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 link$0: function() { return this.link.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"": ["name>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CDATASection', {"": []
});

$.$defineNativeClass('CSSCharsetRule', {"": []
});

$.$defineNativeClass('CSSFontFaceRule', {"": ["style>"]
});

$.$defineNativeClass('CSSImportRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": ["style>"]
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": ["name>"]
});

$.$defineNativeClass('WebKitCSSMatrix', {"": [],
 multiply$1: function(secondMatrix) {
  return this.multiply(secondMatrix);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSMediaRule', {"": []
});

$.$defineNativeClass('CSSPageRule', {"": ["style>"]
});

$.$defineNativeClass('CSSPrimitiveValue', {"": []
});

$.$defineNativeClass('CSSRule', {"": ["type>"]
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["length>"],
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 clear$1: function(arg0) { return this.get$clear().call$1(arg0); },
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.get$filter().call$3(arg0, arg1, arg2); },
 set$font: function(value) {
  this.setProperty$3('font', value, '');
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 set$marginTop: function(value) {
  this.setProperty$3('margin-top', value, '');
},
 get$position: function() {
  return this.getPropertyValue$1('position');
},
 set$position: function(value) {
  this.setProperty$3('position', value, '');
},
 get$size: function() {
  return this.getPropertyValue$1('size');
},
 get$src: function() {
  return this.getPropertyValue$1('src');
},
 set$src: function(value) {
  this.setProperty$3('src', value, '');
},
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', {"": ["style>"]
});

$.$defineNativeClass('CSSStyleSheet', {"": []
});

$.$defineNativeClass('WebKitCSSTransformValue', {"": []
});

$.$defineNativeClass('CSSUnknownRule', {"": []
});

$.$defineNativeClass('CSSValue', {"": []
});

$.$defineNativeClass('HTMLCanvasElement', {"": ["height=", "width="],
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1('2d');
},
 is$CanvasElement: function() { return true; },
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasGradient', {"": []
});

$.$defineNativeClass('CanvasPattern', {"": []
});

$.$defineNativeClass('CanvasRenderingContext', {"": []
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": ["fillStyle<", "font<", "lineWidth>"],
 lineWidth$1: function(arg0) { return this.lineWidth.call$1(arg0); },
 beginPath$0: function() {
  return this.beginPath();
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 fillRect$4: function(x, y, width, height) {
  return this.fillRect(x,y,width,height);
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text,x,y) {
  return this.fillText(text,x,y);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 translate$2: function(tx, ty) {
  return this.translate(tx,ty);
}
});

$.$defineNativeClass('ChannelMergerNode', {"": []
});

$.$defineNativeClass('ChannelSplitterNode', {"": []
});

$.$defineNativeClass('CharacterData', {"": ["data>", "length>"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": ["height>", "width>"]
});

$.$defineNativeClass('Clipboard', {"": ["files>"]
});

$.$defineNativeClass('CloseEvent', {"": ["code>"]
});

$.$defineNativeClass('Comment', {"": []
});

$.$defineNativeClass('CompositionEvent', {"": ["data>"]
});

Console = (typeof console == 'undefined' ? {} : console);
Console.count$1 = function(arg) {
  return this.count(arg);
};
Console.get$count = function() { return new $.BoundClosure(this, 'count$1'); };
Console.error$1 = function(arg) {
  return this.error(arg);
};
Console.get$error = function() { return new $.BoundClosure(this, 'error$1'); };
Console.log$1 = function(arg) {
  return this.log(arg);
};
Console.get$log = function() { return new $.BoundClosure(this, 'log$1'); };
$.$defineNativeClass('HTMLContentElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', {"": [],
 normalize$0: function() { return this.normalize.call$0(); }
});

$.$defineNativeClass('Coordinates', {"": []
});

$.$defineNativeClass('Counter', {"": []
});

$.$defineNativeClass('Crypto', {"": []
});

$.$defineNativeClass('CustomEvent', {"": []
});

$.$defineNativeClass('HTMLDListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', {"": [],
 get$on: function() {
  return $.DOMApplicationCacheEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMError', {"": ["name>"]
});

$.$defineNativeClass('DOMException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": ["name>", "root>"]
});

$.$defineNativeClass('DOMFileSystemSync', {"": ["name>", "root>"]
});

$.$defineNativeClass('DOMImplementation', {"": []
});

$.$defineNativeClass('MimeType', {"": ["type>"]
});

$.$defineNativeClass('MimeTypeArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMParser', {"": []
});

$.$defineNativeClass('Plugin', {"": ["length>", "name>"]
});

$.$defineNativeClass('PluginArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {"": ["type>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMTokenList', {"": ["length>"],
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', {"": ["type>"]
});

$.$defineNativeClass('DataTransferItemList', {"": ["length>"],
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', {"": []
});

$.$defineNativeClass('Database', {"": []
});

$.$defineNativeClass('DatabaseSync', {"": []
});

$.$defineNativeClass('DedicatedWorkerContext', {"": [],
 get$on: function() {
  return $.DedicatedWorkerContextEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('DelayNode', {"": []
});

$.$defineNativeClass('HTMLDetailsElement', {"": [],
 open$3: function(arg0, arg1, arg2) { return this.open.call$3(arg0, arg1, arg2); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('DeviceMotionEvent', {"": []
});

$.$defineNativeClass('DeviceOrientationEvent', {"": []
});

$.$defineNativeClass('HTMLDirectoryElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DirectoryEntry', {"": [],
 createReader$0: function() {
  return this.createReader();
},
 getDirectory$4$errorCallback$options$successCallback: function(path, errorCallback, options, successCallback) {
  var t1, t2, t3;
  t1 = $ === errorCallback;
  if (t1)
    errorCallback = null;
  t1 = !t1;
  t2 = $ === options;
  if (t2)
    options = null;
  t2 = !t2;
  t3 = $ === successCallback;
  if (t3)
    successCallback = null;
  t3 = !t3;
  if (t1) {
    this._getDirectory_1$4(path, $._convertDartToNative_Dictionary(options), successCallback, errorCallback);
    return;
  }
  if (t3) {
    this._getDirectory_2$3(path, $._convertDartToNative_Dictionary(options), successCallback);
    return;
  }
  if (t2) {
    this._getDirectory_3$2(path, $._convertDartToNative_Dictionary(options));
    return;
  }
  this._getDirectory_4$1(path);
  return;
},
 _getDirectory_1$4: function(path, options, successCallback, errorCallback) {
  return this.getDirectory(path,options,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 _getDirectory_2$3: function(path, options, successCallback) {
  return this.getDirectory(path,options,$.convertDartClosureToJS(successCallback, 1));
},
 _getDirectory_3$2: function(path, options) {
  return this.getDirectory(path,options);
},
 _getDirectory_4$1: function(path) {
  return this.getDirectory(path);
},
 getFile$4$errorCallback$options$successCallback: function(path, errorCallback, options, successCallback) {
  var t1, t2, t3;
  t1 = $ === errorCallback;
  if (t1)
    errorCallback = null;
  t1 = !t1;
  t2 = $ === options;
  if (t2)
    options = null;
  t2 = !t2;
  t3 = $ === successCallback;
  if (t3)
    successCallback = null;
  t3 = !t3;
  if (t1) {
    this._getFile_1$4(path, $._convertDartToNative_Dictionary(options), successCallback, errorCallback);
    return;
  }
  if (t3) {
    this._getFile_2$3(path, $._convertDartToNative_Dictionary(options), successCallback);
    return;
  }
  if (t2) {
    this._getFile_3$2(path, $._convertDartToNative_Dictionary(options));
    return;
  }
  this._getFile_4$1(path);
  return;
},
 _getFile_1$4: function(path, options, successCallback, errorCallback) {
  return this.getFile(path,options,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 _getFile_2$3: function(path, options, successCallback) {
  return this.getFile(path,options,$.convertDartClosureToJS(successCallback, 1));
},
 _getFile_3$2: function(path, options) {
  return this.getFile(path,options);
},
 _getFile_4$1: function(path) {
  return this.getFile(path);
}
});

$.$defineNativeClass('DirectoryEntrySync', {"": [],
 createReader$0: function() {
  return this.createReader();
}
});

$.$defineNativeClass('DirectoryReader', {"": [],
 readEntries$2: function(successCallback, errorCallback) {
  return this.readEntries($.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 readEntries$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 1);
  return this.readEntries(successCallback);
}
});

$.$defineNativeClass('DirectoryReaderSync', {"": []
});

$.$defineNativeClass('HTMLDivElement', {"": [],
 is$DivElement: function() { return true; },
 is$Element: function() { return true; }
});

$.$defineNativeClass('Document', {"": [],
 get$on: function() {
  return $.DocumentEvents$(this);
},
 get$$$dom_webkitFullscreenElement: function() {
  return this.webkitFullscreenElement;
},
 get$$$dom_webkitIsFullScreen: function() {
  return this.webkitIsFullScreen;
},
 get$$$dom_webkitPointerLockElement: function() {
  return this.webkitPointerLockElement;
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_webkitExitFullscreen$0: function() {
  return this.webkitExitFullscreen();
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp('^#[_a-zA-Z]\\w*$', false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.getInterceptor(selectors).substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
}
});

$.$defineNativeClass('DocumentFragment', {"": ["_elements>"],
 get$elements: function() {
  if (this._elements == null)
    this._elements = $.FilteredElementList$(this);
  return this._elements;
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 set$innerHTML: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
  {
  var t1, e, nodes;
  t1 = this.get$nodes();
  $.getInterceptor(t1).clear$0(t1);
  e = $.Element_Element$tag('div');
  e.set$innerHTML(value);
  nodes = $._ListImpl_List$from(e.get$nodes());
  t1 = this.get$nodes();
  $.getInterceptor(t1).addAll$1(t1, nodes);
}
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }

},
 get$translate: function() {
  return false;
},
 translate$2: function(arg0, arg1) { return this.get$translate().call$2(arg0, arg1); },
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure0(this, 'click$0'); },
 webkitRequestFullscreen$0: function() {
},
 set$spellcheck: function(value) {
  throw $.$$throw($.UnsupportedError$('Spellcheck can\'t be set for document fragments.'));
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {"": ["name>"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DynamicsCompressorNode', {"": []
});

$.$defineNativeClass('EXTTextureFilterAnisotropic', {"": []
});

$.$defineNativeClass('Element', {"": ["id>", "innerHTML<", "spellcheck<", "scrollHeight>", "scrollTop>", "style>"],
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 set$elements: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
  {
  var elements = this.get$elements();
  $.getInterceptor(elements).clear$0(elements);
  $.getInterceptor(elements).addAll$1(elements, value);
}
  } else {
    return Object.prototype.set$elements.call(this, value);
  }

},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
  {
  return $._ElementCssClassSet$(this);
}
  } else {
    return Object.prototype.get$classes.call(this);
  }

},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.ElementEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
  return this.children;
},
 translate$2: function(arg0, arg1) { return this.translate.call$2(arg0, arg1); },
 click$0: function() {
  return this.click();
},
 get$click: function() { return new $.BoundClosure0(this, 'click$0'); },
 get$$$dom_className: function() {
  return this.className;
},
 set$$$dom_className: function(value) {
  this.className = value;
},
 get$$$dom_firstElementChild: function() {
  return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
  return this.lastElementChild;
},
 $$dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $$dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $$dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 webkitRequestFullscreen$0: function() {
  return this.webkitRequestFullscreen();
},
 webkitRequestPointerLock$0: function() {
  return this.webkitRequestPointerLock();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["height=", "name>", "src=", "type>", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntityReference', {"": []
});

$.$defineNativeClass('Entry', {"": ["fullPath>", "isDirectory>", "name>"],
 copyTo$4: function(parent, name, successCallback, errorCallback) {
  return this.copyTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
},
 toURL$0: function() {
  return this.toURL();
}
});

$.$defineNativeClass('EntrySync', {"": ["fullPath>", "isDirectory>", "name>"],
 remove$0: function() {
  return this.remove();
},
 toURL$0: function() {
  return this.toURL();
}
});

$.$defineNativeClass('ErrorEvent', {"": []
});

$.$defineNativeClass('Event', {"": ["type>"],
 get$_liblib$_target: function() {
  return this.target;
},
 preventDefault$0: function() {
  return this.preventDefault();
},
 stopPropagation$0: function() {
  return this.stopPropagation();
}
});

$.$defineNativeClass('EventException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {"": ["url>"],
 get$on: function() {
  return $.EventSourceEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.Events$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["elements>", "name>", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('File', {"": ["name>"],
 is$File: function() { return true; }
});

$.$defineNativeClass('FileEntry', {"": [],
 createWriter$2: function(successCallback, errorCallback) {
  return this.createWriter($.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 createWriter$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 1);
  return this.createWriter(successCallback);
},
 file$2: function(successCallback, errorCallback) {
  return this.file($.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 file$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 1);
  return this.file(successCallback);
}
});

$.$defineNativeClass('FileEntrySync', {"": []
});

$.$defineNativeClass('FileError', {"": ["code>"]
});

$.$defineNativeClass('FileException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileReader', {"": ["error>", "result>"],
 get$on: function() {
  return $.FileReaderEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 readAsText$2: function(blob, encoding) {
  return this.readAsText(blob,encoding);
},
 readAsText$1: function(blob) {
  return this.readAsText(blob);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileReaderSync', {"": [],
 readAsText$2: function(blob, encoding) {
  return this.readAsText(blob,encoding);
},
 readAsText$1: function(blob) {
  return this.readAsText(blob);
}
});

$.$defineNativeClass('FileWriter', {"": ["error>", "length>", "position>"],
 get$on: function() {
  return $.FileWriterEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 truncate$1: function(size) {
  return this.truncate(size);
},
 write$1: function(data) {
  return this.write(data);
}
});

$.$defineNativeClass('FileWriterSync', {"": ["length>", "position>"],
 truncate$1: function(size) {
  return this.truncate(size);
},
 write$1: function(data) {
  return this.write(data);
}
});

$.$defineNativeClass('Float32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": ["size>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('FormData', {"": []
});

$.$defineNativeClass('HTMLFormElement', {"": ["length>", "name>"],
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"": ["height>", "name>", "src=", "width>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {"": ["cols>", "rows>"],
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('GainNode', {"": []
});

$.$defineNativeClass('Gamepad', {"": ["id>"]
});

$.$defineNativeClass('Geolocation', {"": []
});

$.$defineNativeClass('Geoposition', {"": []
});

$.$defineNativeClass('HTMLHRElement', {"": ["size>", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {"": [],
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('HashChangeEvent', {"": []
});

$.$defineNativeClass('HTMLHeadElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {"": [],
 webkitExitFullscreen$0: function() {
  $.document().$$dom_webkitExitFullscreen$0();
},
 get$webkitFullscreenElement: function() {
  return $.document().get$$$dom_webkitFullscreenElement();
},
 get$webkitIsFullScreen: function() {
  return $.document().get$$$dom_webkitIsFullScreen();
},
 get$webkitPointerLockElement: function() {
  return $.document().get$$$dom_webkitPointerLockElement();
}
});

$.$defineNativeClass('HTMLHtmlElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequest', {"": ["response>"],
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 open$5: function(method, url, async, user, password) {
  return this.open(method,url,async,user,password);
},
 open$3: function(method,url,async) {
  return this.open(method,url,async);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
},
 send$0: function() {
  return this.send();
}
});

$.$defineNativeClass('XMLHttpRequestException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": ["position>"]
});

$.$defineNativeClass('XMLHttpRequestUpload', {"": [],
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBAny', {"": []
});

$.$defineNativeClass('IDBCursor', {"": ["key>", "source>"],
 update$1: function(value) {
  return this._update_1$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 _update_1$1: function(value) {
  return this.update(value);
}
});

$.$defineNativeClass('IDBCursorWithValue', {"": ["value>"]
});

$.$defineNativeClass('IDBDatabase', {"": ["name>"],
 get$on: function() {
  return $.IDBDatabaseEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {"": []
});

$.$defineNativeClass('IDBIndex', {"": ["name>"],
 count$1: function(key_OR_range) {
  var t1, t2;
  t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (t2)
    t1 = typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null;
  else
    t1 = false;
  if (t1)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC10);
},
 get$count: function() { return new $.BoundClosure3(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBKey', {"": []
});

$.$defineNativeClass('IDBKeyRange', {"": [],
 is$IDBKeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', {"": ["name>"],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
  return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
},
 count$1: function(key_OR_range) {
  var t1, t2;
  t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (t2)
    t1 = typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null;
  else
    t1 = false;
  if (t1)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC10);
},
 get$count: function() { return new $.BoundClosure4(this, 'count$1'); },
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
}
});

$.$defineNativeClass('IDBOpenDBRequest', {"": [],
 get$on: function() {
  return $.IDBOpenDBRequestEvents$(this);
}
});

$.$defineNativeClass('IDBRequest', {"": ["error>", "source>"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.IDBRequestEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$result: function() {
  return $._convertNativeToDart_IDBAny(this.get$_result());
},
 get$_result: function() {
  return this.result;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBTransaction', {"": ["error>"],
 get$on: function() {
  return $.IDBTransactionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeRequest', {"": [],
 get$on: function() {
  return $.IDBVersionChangeRequestEvents$(this);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"": ["height=", "name>", "src=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('IceCandidate', {"": []
});

$.$defineNativeClass('ImageData', {"": ["data>", "height>", "width>"],
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["complete>", "height=", "name>", "src=", "width=", "x>", "y>"],
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$ImageElement: function() { return true; },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"": ["checked=", "files>", "height=", "name>", "pattern>", "size>", "src=", "type>", "value=", "width="],
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('JavaScriptCallFrame', {"": ["type>"]
});

$.$defineNativeClass('KeyboardEvent', {"": []
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["name>", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"": ["type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"": ["href<", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', {"": ["length>"]
});

$.$defineNativeClass('Location', {"": ["href<"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('LocalMediaStream', {"": []
});

$.$defineNativeClass('DOMWindow', {"": ["name>", "navigator>", "screen>", "webkitStorageInfo>"],
 open$3: function(url, name$, options) {
  if (options == null)
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$));
  else
    return $._DOMWindowCrossFrame__createSafe(this.open(url,name$,options));
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$_parent: function() {
  return this.parent;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 scroll$2: function(x, y) {
  return this.scroll(x,y);
},
 get$scroll: function() { return new $.BoundClosure1(this, 'scroll$2'); },
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 webkitRequestFileSystem$4: function(type, size, successCallback, errorCallback) {
  return this.webkitRequestFileSystem(type,size,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('HTMLMapElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', {"": [],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"": ["error>", "src="],
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 load$0: function() {
  return this.load();
},
 get$load: function() { return new $.BoundClosure0(this, 'load$0'); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaElementAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaError', {"": ["code>"]
});

$.$defineNativeClass('MediaKeyError', {"": ["code>"]
});

$.$defineNativeClass('MediaKeyEvent', {"": []
});

$.$defineNativeClass('MediaList', {"": ["length>"]
});

$.$defineNativeClass('MediaQueryList', {"": []
});

$.$defineNativeClass('MediaSource', {"": [],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', {"": [],
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaStreamEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrack', {"": [],
 get$on: function() {
  return $.MediaStreamTrackEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length>"],
 get$on: function() {
  return $.MediaStreamTrackListEvents$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MemoryInfo', {"": []
});

$.$defineNativeClass('HTMLMenuElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageChannel', {"": []
});

$.$defineNativeClass('MessageEvent', {"": ["ports>"],
 get$data: function() {
  return $._convertNativeToDart_SerializedScriptValue(this.get$_data());
},
 get$_data: function() {
  return this.data;
},
 get$source: function() {
  return $._convertNativeToDart_Window(this.get$_source());
},
 get$_source: function() {
  return this.source;
}
});

$.$defineNativeClass('MessagePort', {"": [],
 get$on: function() {
  return $.MessagePortEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', {"": ["size>"]
});

$.$defineNativeClass('HTMLMeterElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {"": ["dataTransfer>", "webkitMovementX>", "webkitMovementY>", "x>", "y>"]
});

$.$defineNativeClass('MutationEvent', {"": []
});

$.$defineNativeClass('MutationObserver', {"": []
});

$.$defineNativeClass('MutationRecord', {"": ["type>"]
});

$.$defineNativeClass('NamedNodeMap', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent>"]
});

$.$defineNativeClass('NavigatorUserMediaError', {"": ["code>"]
});

$.$defineNativeClass('Node', {"": [],
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.get$parent();
    parent$.$$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_attributes: function() {
  return this.attributes;
},
 get$$$dom_childNodes: function() {
  return this.childNodes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
  this.textContent = value;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeFilter', {"": []
});

$.$defineNativeClass('NodeIterator', {"": ["root>"],
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.filter.call$3(arg0, arg1, arg2); }
});

$.$defineNativeClass('NodeList', {"": ["_parent>", "length>"],
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._parent.$$dom_appendChild$1(t2);
  }
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._parent.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 oprator$indexSet$2: function(index, value) {
  this._parent.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
  return this[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Notation', {"": []
});

$.$defineNativeClass('Notification', {"": [],
 get$on: function() {
  return $.NotificationEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 show$0: function() {
  return this.show();
}
});

$.$defineNativeClass('NotificationCenter', {"": []
});

$.$defineNativeClass('OESElementIndexUint', {"": []
});

$.$defineNativeClass('OESStandardDerivatives', {"": []
});

$.$defineNativeClass('OESTextureFloat', {"": []
});

$.$defineNativeClass('OESVertexArrayObject', {"": []
});

$.$defineNativeClass('HTMLOListElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["code>", "data>", "height=", "name>", "type>", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OfflineAudioCompletionEvent', {"": []
});

$.$defineNativeClass('HTMLOptGroupElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OscillatorNode', {"": ["type>"]
});

$.$defineNativeClass('HTMLOutputElement', {"": ["name>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OverflowEvent', {"": []
});

$.$defineNativeClass('PagePopupController', {"": []
});

$.$defineNativeClass('PageTransitionEvent', {"": []
});

$.$defineNativeClass('PannerNode', {"": []
});

$.$defineNativeClass('HTMLParagraphElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"": ["name>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', {"": [],
 get$on: function() {
  return $.PeerConnection00Events$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Performance', {"": []
});

$.$defineNativeClass('PerformanceNavigation', {"": ["type>"]
});

$.$defineNativeClass('PerformanceTiming', {"": []
});

$.$defineNativeClass('WebKitPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('PopStateEvent', {"": []
});

$.$defineNativeClass('PositionError', {"": ["code>"]
});

$.$defineNativeClass('HTMLPreElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', {"": ["data>"]
});

$.$defineNativeClass('HTMLProgressElement', {"": ["position>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', {"": []
});

$.$defineNativeClass('HTMLQuoteElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('RGBColor', {"": []
});

$.$defineNativeClass('RTCDataChannel', {"": [],
 get$on: function() {
  return $.RTCDataChannelEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCDataChannelEvent', {"": []
});

$.$defineNativeClass('RTCIceCandidate', {"": []
});

$.$defineNativeClass('RTCIceCandidateEvent', {"": []
});

$.$defineNativeClass('RTCPeerConnection', {"": [],
 get$on: function() {
  return $.RTCPeerConnectionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type>"]
});

$.$defineNativeClass('RTCStatsElement', {"": []
});

$.$defineNativeClass('RTCStatsReport', {"": []
});

$.$defineNativeClass('RTCStatsResponse', {"": [],
 result$0: function() {
  return this.result();
},
 get$result: function() { return new $.BoundClosure0(this, 'result$0'); }
});

$.$defineNativeClass('RadioNodeList', {"": ["value="]
});

$.$defineNativeClass('Range', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', {"": []
});

$.$defineNativeClass('SQLError', {"": ["code>"]
});

$.$defineNativeClass('SQLException', {"": ["code>"]
});

$.$defineNativeClass('SQLResultSet', {"": ["rows>"]
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SQLTransaction', {"": []
});

$.$defineNativeClass('SQLTransactionSync', {"": []
});

$.$defineNativeClass('Screen', {"": ["height>", "width>"]
});

$.$defineNativeClass('HTMLScriptElement', {"": ["src=", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProcessorNode', {"": [],
 get$on: function() {
  return $.ScriptProcessorNodeEvents$(this);
}
});

$.$defineNativeClass('ScriptProfile', {"": []
});

$.$defineNativeClass('ScriptProfileNode', {"": ["url>", "visible>"]
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "name>", "size>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SessionDescription', {"": []
});

$.$defineNativeClass('HTMLShadowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {"": ["innerHTML<"]
});

$.$defineNativeClass('SharedWorker', {"": []
});

$.$defineNativeClass('SharedWorkerContext', {"": ["name>"],
 get$on: function() {
  return $.SharedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('SourceBuffer', {"": []
});

$.$defineNativeClass('SourceBufferList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["src=", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', {"": ["src="]
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputEvent', {"": []
});

$.$defineNativeClass('SpeechInputResult', {"": []
});

$.$defineNativeClass('SpeechRecognition', {"": [],
 get$on: function() {
  return $.SpeechRecognitionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionAlternative', {"": []
});

$.$defineNativeClass('SpeechRecognitionError', {"": ["code>"]
});

$.$defineNativeClass('SpeechRecognitionEvent', {"": ["result>"]
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length>"]
});

$.$defineNativeClass('Storage', {"": [],
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 oprator$indexSet$2: function(key, value) {
  return this.$$dom_setItem$2(key, value);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $.Storage_keys_anon(keys));
  return keys;
},
 get$values: function() {
  var values = [];
  this.forEach$1(new $.Storage_values_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
  return this.length;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key>", "url>"]
});

$.$defineNativeClass('StorageInfo', {"": [],
 requestQuota$4: function(storageType, newQuotaInBytes, quotaCallback, errorCallback) {
  return this.requestQuota(storageType,newQuotaInBytes,$.convertDartClosureToJS(quotaCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', {"": ["type>"]
});

$.$defineNativeClass('StyleSheet', {"": ["type>"]
});

$.$defineNativeClass('HTMLTableCaptionElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"": ["height=", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"": ["width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"": ["rows>", "width="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {"": ["rows>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Text', {"": []
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["cols>", "name>", "rows>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextEvent', {"": ["data>"]
});

$.$defineNativeClass('TextMetrics', {"": ["width>"]
});

$.$defineNativeClass('TextTrack', {"": [],
 get$on: function() {
  return $.TextTrackEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', {"": ["id>", "position=", "size>", "text<"],
 get$on: function() {
  return $.TextTrackCueEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {"": ["length>"],
 get$on: function() {
  return $.TextTrackListEvents$(this);
},
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length>"]
});

$.$defineNativeClass('HTMLTitleElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Touch', {"": [],
 get$_liblib$_target: function() {
  return this.target;
}
});

$.$defineNativeClass('TouchEvent', {"": []
});

$.$defineNativeClass('TouchList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": ["src="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TrackEvent', {"": []
});

$.$defineNativeClass('WebKitTransitionEvent', {"": []
});

$.$defineNativeClass('TreeWalker', {"": ["root>"],
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.filter.call$3(arg0, arg1, arg2); }
});

$.$defineNativeClass('UIEvent', {"": ["keyCode>"]
});

$.$defineNativeClass('HTMLUListElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {"": []
});

$.$defineNativeClass('HTMLUnknownElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('URL', {"": []
});

$.$defineNativeClass('ValidityState', {"": []
});

$.$defineNativeClass('HTMLVideoElement', {"": ["height=", "width="],
 webkitExitFullscreen$0: function() {
  return this.webkitExitFullscreen();
},
 is$VideoElement: function() { return true; }
});

$.$defineNativeClass('WaveShaperNode', {"": []
});

$.$defineNativeClass('WaveTable', {"": []
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["name>", "size>", "type>"]
});

$.$defineNativeClass('WebGLBuffer', {"": []
});

$.$defineNativeClass('WebGLCompressedTextureS3TC', {"": []
});

$.$defineNativeClass('WebGLContextAttributes', {"": []
});

$.$defineNativeClass('WebGLContextEvent', {"": []
});

$.$defineNativeClass('WebGLDebugRendererInfo', {"": []
});

$.$defineNativeClass('WebGLDebugShaders', {"": []
});

$.$defineNativeClass('WebGLDepthTexture', {"": []
});

$.$defineNativeClass('WebGLFramebuffer', {"": []
});

$.$defineNativeClass('WebGLLoseContext', {"": []
});

$.$defineNativeClass('WebGLProgram', {"": []
});

$.$defineNativeClass('WebGLRenderbuffer', {"": []
});

$.$defineNativeClass('WebGLRenderingContext', {"": [],
 activeTexture$1: function(texture) {
  return this.activeTexture(texture);
},
 attachShader$2: function(program, shader) {
  return this.attachShader(program,shader);
},
 bindBuffer$2: function(target, buffer) {
  return this.bindBuffer(target,buffer);
},
 bindTexture$2: function(target, texture) {
  return this.bindTexture(target,texture);
},
 blendColor$4: function(red, green, blue, alpha) {
  return this.blendColor(red,green,blue,alpha);
},
 blendEquationSeparate$2: function(modeRGB, modeAlpha) {
  return this.blendEquationSeparate(modeRGB,modeAlpha);
},
 blendFuncSeparate$4: function(srcRGB, dstRGB, srcAlpha, dstAlpha) {
  return this.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);
},
 bufferData$3: function(target, data_OR_size, usage) {
  return this.bufferData(target,data_OR_size,usage);
},
 clear$1: function(mask) {
  return this.clear(mask);
},
 clearColor$4: function(red, green, blue, alpha) {
  return this.clearColor(red,green,blue,alpha);
},
 clearDepth$1: function(depth) {
  return this.clearDepth(depth);
},
 colorMask$4: function(red, green, blue, alpha) {
  return this.colorMask(red,green,blue,alpha);
},
 compileShader$1: function(shader) {
  return this.compileShader(shader);
},
 createBuffer$0: function() {
  return this.createBuffer();
},
 createProgram$0: function() {
  return this.createProgram();
},
 createShader$1: function(type) {
  return this.createShader(type);
},
 createTexture$0: function() {
  return this.createTexture();
},
 cullFace$1: function(mode) {
  return this.cullFace(mode);
},
 depthFunc$1: function(func) {
  return this.depthFunc(func);
},
 depthMask$1: function(flag) {
  return this.depthMask(flag);
},
 depthRange$2: function(zNear, zFar) {
  return this.depthRange(zNear,zFar);
},
 detachShader$2: function(program, shader) {
  return this.detachShader(program,shader);
},
 disable$1: function(cap) {
  return this.disable(cap);
},
 disableVertexAttribArray$1: function(index) {
  return this.disableVertexAttribArray(index);
},
 drawElements$4: function(mode, count, type, offset) {
  return this.drawElements(mode,count,type,offset);
},
 enable$1: function(cap) {
  return this.enable(cap);
},
 enableVertexAttribArray$1: function(index) {
  return this.enableVertexAttribArray(index);
},
 frontFace$1: function(mode) {
  return this.frontFace(mode);
},
 generateMipmap$1: function(target) {
  return this.generateMipmap(target);
},
 getActiveAttrib$2: function(program, index) {
  return this.getActiveAttrib(program,index);
},
 getActiveUniform$2: function(program, index) {
  return this.getActiveUniform(program,index);
},
 getAttribLocation$2: function(program, name) {
  return this.getAttribLocation(program,name);
},
 getExtension$1: function(name) {
  return this.getExtension(name);
},
 getParameter$1: function(pname) {
  return this.getParameter(pname);
},
 getProgramInfoLog$1: function(program) {
  return this.getProgramInfoLog(program);
},
 getProgramParameter$2: function(program, pname) {
  return this.getProgramParameter(program,pname);
},
 getShaderInfoLog$1: function(shader) {
  return this.getShaderInfoLog(shader);
},
 getShaderParameter$2: function(shader, pname) {
  return this.getShaderParameter(shader,pname);
},
 getUniformLocation$2: function(program, name) {
  return this.getUniformLocation(program,name);
},
 getVertexAttrib$2: function(index, pname) {
  return this.getVertexAttrib(index,pname);
},
 lineWidth$1: function(width) {
  return this.lineWidth(width);
},
 get$lineWidth: function() { return new $.BoundClosure(this, 'lineWidth$1'); },
 linkProgram$1: function(program) {
  return this.linkProgram(program);
},
 pixelStorei$2: function(pname, param) {
  return this.pixelStorei(pname,param);
},
 polygonOffset$2: function(factor, units) {
  return this.polygonOffset(factor,units);
},
 shaderSource$2: function(shader, string) {
  return this.shaderSource(shader,string);
},
 texImage2D$9: function(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video, format, type, pixels) {
  var t1, t2, t3, t4, t5;
  t1 = $ === border_OR_canvas_OR_image_OR_pixels_OR_video;
  if (t1)
    border_OR_canvas_OR_image_OR_pixels_OR_video = null;
  t1 = !t1;
  t2 = $ === format;
  if (t2)
    format = null;
  t3 = $ === type;
  if (t3)
    type = null;
  t4 = $ === pixels;
  if (t4)
    pixels = null;
  if (t1)
    t5 = typeof border_OR_canvas_OR_image_OR_pixels_OR_video === 'number' && Math.floor(border_OR_canvas_OR_image_OR_pixels_OR_video) === border_OR_canvas_OR_image_OR_pixels_OR_video || border_OR_canvas_OR_image_OR_pixels_OR_video == null;
  else
    t5 = false;
  if (t5) {
    this._texImage2D_1$9(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video, format, type, pixels);
    return;
  }
  if (t1)
    t5 = typeof border_OR_canvas_OR_image_OR_pixels_OR_video === 'object' && border_OR_canvas_OR_image_OR_pixels_OR_video !== null && border_OR_canvas_OR_image_OR_pixels_OR_video.is$ImageData() || border_OR_canvas_OR_image_OR_pixels_OR_video == null;
  else
    t5 = false;
  if (t5 && t2 && t3 && t4) {
    this._texImage2D_2$6(target, level, internalformat, format_OR_width, height_OR_type, $._convertDartToNative_ImageData(border_OR_canvas_OR_image_OR_pixels_OR_video));
    return;
  }
  if (t1)
    t5 = typeof border_OR_canvas_OR_image_OR_pixels_OR_video === 'object' && border_OR_canvas_OR_image_OR_pixels_OR_video !== null && border_OR_canvas_OR_image_OR_pixels_OR_video.is$ImageElement() || border_OR_canvas_OR_image_OR_pixels_OR_video == null;
  else
    t5 = false;
  if (t5 && t2 && t3 && t4) {
    this._texImage2D_3$6(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video);
    return;
  }
  if (t1)
    t5 = typeof border_OR_canvas_OR_image_OR_pixels_OR_video === 'object' && border_OR_canvas_OR_image_OR_pixels_OR_video !== null && border_OR_canvas_OR_image_OR_pixels_OR_video.is$CanvasElement() || border_OR_canvas_OR_image_OR_pixels_OR_video == null;
  else
    t5 = false;
  if (t5 && t2 && t3 && t4) {
    this._texImage2D_4$6(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video);
    return;
  }
  if (t1)
    t1 = typeof border_OR_canvas_OR_image_OR_pixels_OR_video === 'object' && border_OR_canvas_OR_image_OR_pixels_OR_video !== null && border_OR_canvas_OR_image_OR_pixels_OR_video.is$VideoElement() || border_OR_canvas_OR_image_OR_pixels_OR_video == null;
  else
    t1 = false;
  if (t1 && t2 && t3 && t4) {
    this._texImage2D_5$6(target, level, internalformat, format_OR_width, height_OR_type, border_OR_canvas_OR_image_OR_pixels_OR_video);
    return;
  }
  throw $.$$throw($.CTC10);
},
 texImage2D$6: function(target,level,internalformat,format_OR_width,height_OR_type,border_OR_canvas_OR_image_OR_pixels_OR_video) {
  return this.texImage2D$9(target,level,internalformat,format_OR_width,height_OR_type,border_OR_canvas_OR_image_OR_pixels_OR_video,$,$,$)
},
 _texImage2D_1$9: function(target, level, internalformat, width, height, border, format, type, pixels) {
  return this.texImage2D(target,level,internalformat,width,height,border,format,type,pixels);
},
 _texImage2D_2$6: function(target, level, internalformat, format, type, pixels) {
  return this.texImage2D(target,level,internalformat,format,type,pixels);
},
 _texImage2D_3$6: function(target, level, internalformat, format, type, image) {
  return this.texImage2D(target,level,internalformat,format,type,image);
},
 _texImage2D_4$6: function(target, level, internalformat, format, type, canvas) {
  return this.texImage2D(target,level,internalformat,format,type,canvas);
},
 _texImage2D_5$6: function(target, level, internalformat, format, type, video) {
  return this.texImage2D(target,level,internalformat,format,type,video);
},
 texParameteri$3: function(target, pname, param) {
  return this.texParameteri(target,pname,param);
},
 uniform1f$2: function(location, x) {
  return this.uniform1f(location,x);
},
 uniform1i$2: function(location, x) {
  return this.uniform1i(location,x);
},
 uniform2fv$2: function(location, v) {
  return this.uniform2fv(location,v);
},
 uniform3fv$2: function(location, v) {
  return this.uniform3fv(location,v);
},
 uniform4fv$2: function(location, v) {
  return this.uniform4fv(location,v);
},
 uniformMatrix3fv$3: function(location, transpose, array) {
  return this.uniformMatrix3fv(location,transpose,array);
},
 uniformMatrix4fv$3: function(location, transpose, array) {
  return this.uniformMatrix4fv(location,transpose,array);
},
 useProgram$1: function(program) {
  return this.useProgram(program);
},
 vertexAttribPointer$6: function(indx, size, type, normalized, stride, offset) {
  return this.vertexAttribPointer(indx,size,type,normalized,stride,offset);
},
 viewport$4: function(x, y, width, height) {
  return this.viewport(x,y,width,height);
}
});

$.$defineNativeClass('WebGLShader', {"": []
});

$.$defineNativeClass('WebGLShaderPrecisionFormat', {"": []
});

$.$defineNativeClass('WebGLTexture', {"": []
});

$.$defineNativeClass('WebGLUniformLocation', {"": []
});

$.$defineNativeClass('WebGLVertexArrayObjectOES', {"": []
});

$.$defineNativeClass('WebKitCSSFilterValue', {"": []
});

$.$defineNativeClass('WebKitNamedFlow', {"": ["name>"],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {"": ["url>"],
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WheelEvent', {"": []
});

$.$defineNativeClass('Worker', {"": [],
 get$on: function() {
  return $.WorkerEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerContext', {"": ["navigator>"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.WorkerContextEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 webkitRequestFileSystem$4: function(type, size, successCallback, errorCallback) {
  return this.webkitRequestFileSystem(type,size,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
}
});

$.$defineNativeClass('WorkerLocation', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent>"]
});

$.$defineNativeClass('XMLSerializer', {"": []
});

$.$defineNativeClass('XPathEvaluator', {"": []
});

$.$defineNativeClass('XPathException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XPathExpression', {"": []
});

$.$defineNativeClass('XPathNSResolver', {"": []
});

$.$defineNativeClass('XPathResult', {"": []
});

$.$defineNativeClass('XSLTProcessor', {"": [],
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('CSSRuleList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('ClientRectList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMStringList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Worker', {"": [],
 get$id: function() {
  return this.id;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', {"": [],
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('SVGAElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphDefElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphElement', {"": ["format>"]
});

$.$defineNativeClass('SVGAltGlyphItemElement', {"": []
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimateColorElement', {"": []
});

$.$defineNativeClass('SVGAnimateElement', {"": []
});

$.$defineNativeClass('SVGAnimateMotionElement', {"": []
});

$.$defineNativeClass('SVGAnimateTransformElement', {"": []
});

$.$defineNativeClass('SVGAnimatedAngle', {"": []
});

$.$defineNativeClass('SVGAnimatedBoolean', {"": []
});

$.$defineNativeClass('SVGAnimatedEnumeration', {"": []
});

$.$defineNativeClass('SVGAnimatedInteger', {"": []
});

$.$defineNativeClass('SVGAnimatedLength', {"": []
});

$.$defineNativeClass('SVGAnimatedLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumber', {"": []
});

$.$defineNativeClass('SVGAnimatedNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGAnimatedRect', {"": []
});

$.$defineNativeClass('SVGAnimatedString', {"": []
});

$.$defineNativeClass('SVGAnimatedTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', {"": []
});

$.$defineNativeClass('SVGCircleElement', {"": []
});

$.$defineNativeClass('SVGClipPathElement', {"": []
});

$.$defineNativeClass('SVGColor', {"": []
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"": ["type>"]
});

$.$defineNativeClass('SVGCursorElement', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGDefsElement', {"": []
});

$.$defineNativeClass('SVGDescElement', {"": []
});

$.$defineNativeClass('SVGDocument', {"": []
});

$.$defineNativeClass('SVGElement', {"": [],
 get$classes: function() {
  if (this._cssClassSet == null)
    this._cssClassSet = $._AttributeClassSet$(this);
  return this._cssClassSet;
},
 get$elements: function() {
  return $.FilteredElementList$(this);
},
 set$elements: function(value) {
  var elements = this.get$elements();
  $.getInterceptor(elements).clear$0(elements);
  $.getInterceptor(elements).addAll$1(elements, value);
},
 set$innerHTML: function(svg) {
  var container = $.Element_Element$tag('div');
  container.set$innerHTML('<svg version="1.1">' + $.S(svg) + '</svg>');
  this.set$elements($.index(container.get$elements(), 0).get$elements());
},
 get$id: function() {
  return this.id;
}
});

$.$defineNativeClass('SVGElementInstance', {"": [],
 get$on: function() {
  return $.SVGElementInstanceEvents$(this);
}
});

$.$defineNativeClass('SVGEllipseElement', {"": []
});

$.$defineNativeClass('SVGException', {"": ["code>", "name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["type>", "height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFECompositeElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": ["height>", "result>", "width>", "x>", "y>"],
 scale$1: function(arg0) { return this.scale.call$1(arg0); }
});

$.$defineNativeClass('SVGFEDistantLightElement', {"": []
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEFloodElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEFuncAElement', {"": []
});

$.$defineNativeClass('SVGFEFuncBElement', {"": []
});

$.$defineNativeClass('SVGFEFuncGElement', {"": []
});

$.$defineNativeClass('SVGFEFuncRElement', {"": []
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEImageElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEMergeElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEMergeNodeElement', {"": []
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEOffsetElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFEPointLightElement', {"": ["x>", "y>", "z>"]
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFESpotLightElement', {"": ["x>", "y>", "z>"]
});

$.$defineNativeClass('SVGFETileElement', {"": ["height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["type>", "height>", "result>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFilterElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGFontElement', {"": []
});

$.$defineNativeClass('SVGFontFaceElement', {"": []
});

$.$defineNativeClass('SVGFontFaceFormatElement', {"": []
});

$.$defineNativeClass('SVGFontFaceNameElement', {"": []
});

$.$defineNativeClass('SVGFontFaceSrcElement', {"": []
});

$.$defineNativeClass('SVGFontFaceUriElement', {"": []
});

$.$defineNativeClass('SVGForeignObjectElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGGElement', {"": []
});

$.$defineNativeClass('SVGGlyphElement', {"": []
});

$.$defineNativeClass('SVGGlyphRefElement', {"": ["format>", "x=", "y="]
});

$.$defineNativeClass('SVGGradientElement', {"": []
});

$.$defineNativeClass('SVGHKernElement', {"": []
});

$.$defineNativeClass('SVGImageElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {"": []
});

$.$defineNativeClass('SVGLinearGradientElement', {"": []
});

$.$defineNativeClass('SVGMPathElement', {"": []
});

$.$defineNativeClass('SVGMarkerElement', {"": []
});

$.$defineNativeClass('SVGMaskElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGMatrix', {"": [],
 multiply$1: function(secondMatrix) {
  return this.multiply(secondMatrix);
},
 scale$1: function(scaleFactor) {
  return this.scale(scaleFactor);
},
 translate$2: function(x, y) {
  return this.translate(x,y);
}
});

$.$defineNativeClass('SVGMetadataElement', {"": []
});

$.$defineNativeClass('SVGMissingGlyphElement', {"": []
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPaint', {"": []
});

$.$defineNativeClass('SVGPathElement', {"": []
});

$.$defineNativeClass('SVGPathSeg', {"": []
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegArcRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegClosePath', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": ["x="]
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": ["y="]
});

$.$defineNativeClass('SVGPathSegList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPatternElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGPoint', {"": ["x=", "y="]
});

$.$defineNativeClass('SVGPointList', {"": [],
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {"": []
});

$.$defineNativeClass('SVGPolylineElement', {"": []
});

$.$defineNativeClass('SVGPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGRadialGradientElement', {"": []
});

$.$defineNativeClass('SVGRect', {"": ["height=", "width=", "x=", "y="]
});

$.$defineNativeClass('SVGRectElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGRenderingIntent', {"": []
});

$.$defineNativeClass('SVGSVGElement', {"": ["height>", "width>", "x>", "y>"],
 viewport$4: function(arg0, arg1, arg2, arg3) { return this.viewport.call$4(arg0, arg1, arg2, arg3); }
});

$.$defineNativeClass('SVGScriptElement', {"": ["type>"]
});

$.$defineNativeClass('SVGSetElement', {"": []
});

$.$defineNativeClass('SVGStopElement', {"": []
});

$.$defineNativeClass('SVGStringList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type>"]
});

$.$defineNativeClass('SVGSwitchElement', {"": []
});

$.$defineNativeClass('SVGSymbolElement', {"": []
});

$.$defineNativeClass('SVGTRefElement', {"": []
});

$.$defineNativeClass('SVGTSpanElement', {"": []
});

$.$defineNativeClass('SVGTextContentElement', {"": []
});

$.$defineNativeClass('SVGTextElement', {"": []
});

$.$defineNativeClass('SVGTextPathElement', {"": []
});

$.$defineNativeClass('SVGTextPositioningElement', {"": ["x>", "y>"]
});

$.$defineNativeClass('SVGTitleElement', {"": []
});

$.$defineNativeClass('SVGTransform', {"": ["type>"]
});

$.$defineNativeClass('SVGTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.get$length(), 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGUnitTypes', {"": []
});

$.$defineNativeClass('SVGUseElement', {"": ["height>", "width>", "x>", "y>"]
});

$.$defineNativeClass('SVGVKernElement', {"": []
});

$.$defineNativeClass('SVGViewElement', {"": []
});

$.$defineNativeClass('SVGViewSpec', {"": []
});

$.$defineNativeClass('SVGZoomEvent', {"": []
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub(this.length, 1);
  return this.get$_Lists().lastIndexOf$3(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

// 528 dynamic classes.
// 528 classes
// 41 !leaf
(function(){
  var v0/*class(Uint8Array)*/ = 'Uint8Array|Uint8ClampedArray';
  var v1/*class(AudioSourceNode)*/ = 'AudioSourceNode|AudioBufferSourceNode|MediaElementAudioSourceNode|MediaStreamAudioSourceNode|OscillatorNode';
  var v2/*class(_CSSValueList)*/ = 'CSSValueList|WebKitCSSTransformValue|WebKitCSSFilterValue';
  var v3/*class(SVGColor)*/ = 'SVGColor|SVGPaint';
  var v4/*class(Text)*/ = 'Text|CDATASection';
  var v5/*class(SVGTextPositioningElement)*/ = 'SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement';
  var v6/*class(SVGAnimationElement)*/ = 'SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement';
  var v7/*class(SVGComponentTransferFunctionElement)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement';
  var v8/*class(SVGGradientElement)*/ = 'SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement';
  var v9/*class(SVGTextContentElement)*/ = [v5/*class(SVGTextPositioningElement)*/,'SVGTextContentElement|SVGTextPathElement'].join('|');
  var v10/*class(MediaElement)*/ = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement';
  var v11/*class(SVGElement)*/ = [v6/*class(SVGAnimationElement)*/,v7/*class(SVGComponentTransferFunctionElement)*/,v8/*class(SVGGradientElement)*/,v9/*class(SVGTextContentElement)*/,'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement'].join('|');
  var v12/*class(MouseEvent)*/ = 'MouseEvent|WheelEvent';
  var v13/*class(ProgressEvent)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent';
  var v14/*class(UIEvent)*/ = [v12/*class(MouseEvent)*/,'UIEvent|CompositionEvent|KeyboardEvent|TextEvent|TouchEvent|SVGZoomEvent'].join('|');
  var v15/*class(CharacterData)*/ = [v4/*class(Text)*/,'CharacterData|Comment'].join('|');
  var v16/*class(Document)*/ = 'Document|HTMLDocument|SVGDocument';
  var v17/*class(DocumentFragment)*/ = 'DocumentFragment|ShadowRoot';
  var v18/*class(Element)*/ = [v10/*class(MediaElement)*/,v11/*class(SVGElement)*/,'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|');
  var v19/*class(AbstractWorker)*/ = 'AbstractWorker|SharedWorker|Worker';
  var v20/*class(IDBRequest)*/ = 'IDBRequest|IDBOpenDBRequest|IDBVersionChangeRequest';
  var v21/*class(MediaStream)*/ = 'MediaStream|LocalMediaStream';
  var v22/*class(Node)*/ = [v15/*class(CharacterData)*/,v16/*class(Document)*/,v17/*class(DocumentFragment)*/,v18/*class(Element)*/,'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|');
  var v23/*class(WorkerContext)*/ = 'WorkerContext|DedicatedWorkerContext|SharedWorkerContext';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['AbstractWorker', v19/*class(AbstractWorker)*/],
    ['Uint8Array', v0/*class(Uint8Array)*/],
    ['ArrayBufferView', [v0/*class(Uint8Array)*/,'ArrayBufferView|DataView|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array'].join('|')],
    ['AudioSourceNode', v1/*class(AudioSourceNode)*/],
    ['AudioNode', [v1/*class(AudioSourceNode)*/,'AudioNode|AnalyserNode|AudioDestinationNode|BiquadFilterNode|ChannelMergerNode|ChannelSplitterNode|ConvolverNode|DelayNode|DynamicsCompressorNode|GainNode|PannerNode|ScriptProcessorNode|WaveShaperNode'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain'],
    ['Blob', 'Blob|File'],
    ['CSSRule', 'CSSRule|CSSCharsetRule|CSSFontFaceRule|CSSImportRule|WebKitCSSKeyframeRule|WebKitCSSKeyframesRule|CSSMediaRule|CSSPageRule|CSSStyleRule|CSSUnknownRule'],
    ['CSSValueList', v2/*class(_CSSValueList)*/],
    ['SVGColor', v3/*class(SVGColor)*/],
    ['CSSValue', [v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,'CSSValue|CSSPrimitiveValue'].join('|')],
    ['CanvasRenderingContext', 'CanvasRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext'],
    ['Text', v4/*class(Text)*/],
    ['CharacterData', v15/*class(CharacterData)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList'],
    ['Document', v16/*class(Document)*/],
    ['DocumentFragment', v17/*class(DocumentFragment)*/],
    ['HTMLMediaElement', v10/*class(MediaElement)*/],
    ['SVGAnimationElement', v6/*class(SVGAnimationElement)*/],
    ['SVGComponentTransferFunctionElement', v7/*class(SVGComponentTransferFunctionElement)*/],
    ['SVGGradientElement', v8/*class(SVGGradientElement)*/],
    ['SVGTextPositioningElement', v5/*class(SVGTextPositioningElement)*/],
    ['SVGTextContentElement', v9/*class(SVGTextContentElement)*/],
    ['SVGElement', v11/*class(SVGElement)*/],
    ['Element', v18/*class(Element)*/],
    ['Entry', 'Entry|DirectoryEntry|FileEntry'],
    ['EntrySync', 'EntrySync|DirectoryEntrySync|FileEntrySync'],
    ['ProgressEvent', v13/*class(ProgressEvent)*/],
    ['MouseEvent', v12/*class(MouseEvent)*/],
    ['UIEvent', v14/*class(UIEvent)*/],
    ['Event', [v13/*class(ProgressEvent)*/,v14/*class(UIEvent)*/,'Event|WebKitAnimationEvent|AudioProcessingEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'].join('|')],
    ['IDBRequest', v20/*class(IDBRequest)*/],
    ['MediaStream', v21/*class(MediaStream)*/],
    ['Node', v22/*class(Node)*/],
    ['WorkerContext', v23/*class(WorkerContext)*/],
    ['EventTarget', [v19/*class(AbstractWorker)*/,v20/*class(IDBRequest)*/,v21/*class(MediaStream)*/,v22/*class(Node)*/,v23/*class(WorkerContext)*/,'EventTarget|AudioContext|BatteryManager|DOMApplicationCache|EventSource|FileReader|FileWriter|XMLHttpRequest|XMLHttpRequestUpload|IDBDatabase|IDBTransaction|DOMWindow|MediaController|MediaSource|MediaStreamTrack|MediaStreamTrackList|MessagePort|Notification|PeerConnection00|Performance|RTCDataChannel|RTCPeerConnection|SourceBufferList|SpeechRecognition|TextTrack|TextTrackCue|TextTrackList|WebKitNamedFlow|WebSocket|SVGElementInstance'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList'],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet'],
    ['SVGPathSeg', 'SVGPathSeg|SVGPathSegArcAbs|SVGPathSegArcRel|SVGPathSegClosePath|SVGPathSegCurvetoCubicAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegLinetoAbs|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoVerticalRel|SVGPathSegMovetoAbs|SVGPathSegMovetoRel']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field + ";";
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v;";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=Viewer.dart.js.map